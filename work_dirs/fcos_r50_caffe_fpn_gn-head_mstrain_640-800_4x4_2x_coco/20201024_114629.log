2020-10-24 11:46:29,507 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.4.0
MMCV: 1.1.5
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2020-10-24 11:46:31,622 - mmdet - INFO - Distributed training: True
2020-10-24 11:46:33,699 - mmdet - INFO - Config:
dataset_type = 'VOCDataset'
data_root = '/root/userfolder/data/voc0712/VOCdevkit/'
img_norm_cfg = dict(
    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='Resize',
        img_scale=[(1333, 640), (1333, 800)],
        multiscale_mode='value',
        keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[102.9801, 115.9465, 122.7717],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=0,
    train=dict(
        type='RepeatDataset',
        times=3,
        dataset=dict(
            type='VOCDataset',
            ann_file=[
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'
            ],
            img_prefix=[
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'
            ],
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),
                dict(type='RandomFlip', flip_ratio=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='Pad', size_divisor=32),
                dict(type='DefaultFormatBundle'),
                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='Resize',
                img_scale=[(1333, 640), (1333, 800)],
                multiscale_mode='value',
                keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='VOCDataset',
        ann_file=
        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',
        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='VOCDataset',
        ann_file=
        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',
        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='mAP')
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='constant',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[16, 22])
total_epochs = 24
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
model = dict(
    type='FCOS',
    pretrained='open-mmlab://detectron/resnet50_caffe',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs=True,
        extra_convs_on_inputs=False,
        num_outs=5,
        relu_before_extra_convs=True),
    bbox_head=dict(
        type='FCOSHead',
        num_classes=20,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        strides=[8, 16, 32, 64, 128],
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='IoULoss', loss_weight=1.0),
        loss_centerness=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))
train_cfg = dict(
    assigner=dict(
        type='MaxIoUAssigner',
        pos_iou_thr=0.5,
        neg_iou_thr=0.4,
        min_pos_iou=0,
        ignore_iof_thr=-1),
    allowed_border=-1,
    pos_weight=-1,
    debug=False)
test_cfg = dict(
    nms_pre=1000,
    min_bbox_size=0,
    score_thr=0.05,
    nms=dict(type='nms', iou_threshold=0.5),
    max_per_img=100)
work_dir = './work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco'
gpu_ids = range(0, 1)

2020-10-24 11:46:34,022 - mmdet - INFO - load model from: open-mmlab://detectron/resnet50_caffe
2020-10-24 11:46:48,198 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: conv1.bias, layer1.0.conv1.bias, layer1.0.conv2.bias, layer1.0.conv3.bias, layer1.0.downsample.0.bias, layer1.1.conv1.bias, layer1.1.conv2.bias, layer1.1.conv3.bias, layer1.2.conv1.bias, layer1.2.conv2.bias, layer1.2.conv3.bias, layer2.0.conv1.bias, layer2.0.conv2.bias, layer2.0.conv3.bias, layer2.0.downsample.0.bias, layer2.1.conv1.bias, layer2.1.conv2.bias, layer2.1.conv3.bias, layer2.2.conv1.bias, layer2.2.conv2.bias, layer2.2.conv3.bias, layer2.3.conv1.bias, layer2.3.conv2.bias, layer2.3.conv3.bias, layer3.0.conv1.bias, layer3.0.conv2.bias, layer3.0.conv3.bias, layer3.0.downsample.0.bias, layer3.1.conv1.bias, layer3.1.conv2.bias, layer3.1.conv3.bias, layer3.2.conv1.bias, layer3.2.conv2.bias, layer3.2.conv3.bias, layer3.3.conv1.bias, layer3.3.conv2.bias, layer3.3.conv3.bias, layer3.4.conv1.bias, layer3.4.conv2.bias, layer3.4.conv3.bias, layer3.5.conv1.bias, layer3.5.conv2.bias, layer3.5.conv3.bias, layer4.0.conv1.bias, layer4.0.conv2.bias, layer4.0.conv3.bias, layer4.0.downsample.0.bias, layer4.1.conv1.bias, layer4.1.conv2.bias, layer4.1.conv3.bias, layer4.2.conv1.bias, layer4.2.conv2.bias, layer4.2.conv3.bias

2020-10-24 11:46:52,275 - mmdet - INFO - Start running, host: root@c29bb9d22aa7, work_dir: /root/userfolder/mmdetection/work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco
2020-10-24 11:46:52,275 - mmdet - INFO - workflow: [('train', 1)], max: 24 epochs
2020-10-24 11:47:27,148 - mmdet - INFO - Epoch [1][50/3104]	lr: 3.333e-03, eta: 14:25:09, time: 0.697, data_time: 0.250, memory: 3947, loss_cls: 0.7703, loss_bbox: 1.6354, loss_centerness: 0.6656, loss: 3.0713, grad_norm: 21.0629
2020-10-24 11:47:55,142 - mmdet - INFO - Epoch [1][100/3104]	lr: 3.333e-03, eta: 12:59:26, time: 0.560, data_time: 0.189, memory: 3947, loss_cls: 0.6917, loss_bbox: 0.8959, loss_centerness: 0.6521, loss: 2.2396, grad_norm: 8.4458
2020-10-24 11:48:22,410 - mmdet - INFO - Epoch [1][150/3104]	lr: 3.333e-03, eta: 12:24:31, time: 0.545, data_time: 0.192, memory: 3947, loss_cls: 0.6503, loss_bbox: 0.8484, loss_centerness: 0.6510, loss: 2.1497, grad_norm: 7.9308
2020-10-24 11:48:49,660 - mmdet - INFO - Epoch [1][200/3104]	lr: 3.333e-03, eta: 12:06:43, time: 0.545, data_time: 0.196, memory: 3947, loss_cls: 0.6469, loss_bbox: 0.8309, loss_centerness: 0.6486, loss: 2.1264, grad_norm: 7.6244
2020-10-24 11:49:17,030 - mmdet - INFO - Epoch [1][250/3104]	lr: 3.333e-03, eta: 11:56:25, time: 0.547, data_time: 0.200, memory: 3947, loss_cls: 0.6262, loss_bbox: 0.8109, loss_centerness: 0.6476, loss: 2.0848, grad_norm: 6.8237
2020-10-24 11:49:44,998 - mmdet - INFO - Epoch [1][300/3104]	lr: 3.333e-03, eta: 11:51:56, time: 0.559, data_time: 0.187, memory: 3947, loss_cls: 0.6357, loss_bbox: 0.7802, loss_centerness: 0.6494, loss: 2.0653, grad_norm: 5.5654
2020-10-24 11:50:12,050 - mmdet - INFO - Epoch [1][350/3104]	lr: 3.333e-03, eta: 11:45:19, time: 0.541, data_time: 0.193, memory: 3947, loss_cls: 0.6264, loss_bbox: 0.7569, loss_centerness: 0.6515, loss: 2.0347, grad_norm: 4.5509
2020-10-24 11:50:38,837 - mmdet - INFO - Epoch [1][400/3104]	lr: 3.333e-03, eta: 11:39:26, time: 0.536, data_time: 0.185, memory: 3947, loss_cls: 0.6092, loss_bbox: 0.7310, loss_centerness: 0.6485, loss: 1.9887, grad_norm: 4.4625
2020-10-24 11:51:06,163 - mmdet - INFO - Epoch [1][450/3104]	lr: 3.333e-03, eta: 11:36:14, time: 0.547, data_time: 0.185, memory: 3947, loss_cls: 0.6232, loss_bbox: 0.7487, loss_centerness: 0.6482, loss: 2.0201, grad_norm: 5.0671
2020-10-24 11:51:33,081 - mmdet - INFO - Epoch [1][500/3104]	lr: 3.333e-03, eta: 11:32:35, time: 0.538, data_time: 0.181, memory: 3947, loss_cls: 0.6155, loss_bbox: 0.7896, loss_centerness: 0.6470, loss: 2.0521, grad_norm: 5.9995
2020-10-24 11:51:59,909 - mmdet - INFO - Epoch [1][550/3104]	lr: 1.000e-02, eta: 11:29:19, time: 0.537, data_time: 0.175, memory: 3947, loss_cls: 0.6794, loss_bbox: 1.0128, loss_centerness: 0.6484, loss: 2.3406, grad_norm: 8.4047
2020-10-24 11:52:26,965 - mmdet - INFO - Epoch [1][600/3104]	lr: 1.000e-02, eta: 11:26:59, time: 0.541, data_time: 0.170, memory: 3947, loss_cls: 0.6477, loss_bbox: 0.8558, loss_centerness: 0.6502, loss: 2.1537, grad_norm: 5.9047
2020-10-24 11:52:55,214 - mmdet - INFO - Epoch [1][650/3104]	lr: 1.000e-02, eta: 11:27:12, time: 0.565, data_time: 0.169, memory: 3947, loss_cls: 0.6307, loss_bbox: 0.8405, loss_centerness: 0.6510, loss: 2.1222, grad_norm: 5.6817
2020-10-24 11:53:22,129 - mmdet - INFO - Epoch [1][700/3104]	lr: 1.000e-02, eta: 11:24:58, time: 0.538, data_time: 0.168, memory: 3947, loss_cls: 0.6148, loss_bbox: 0.8313, loss_centerness: 0.6479, loss: 2.0941, grad_norm: 5.7991
