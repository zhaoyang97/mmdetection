{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=20,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/voc0712/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'\n            ],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ]),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\ntotal_epochs = 12\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/faster_rcnn_r50_fpn_1x_voc_moco_caffe'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "faster_rcnn_r50_fpn_1x_voc_moco_caffe.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00025, "memory": 2463, "data_time": 0.15254, "loss_rpn_cls": 0.69164, "loss_rpn_bbox": 0.0226, "loss_cls": 2.86928, "acc": 69.46094, "loss_bbox": 0.0006, "loss": 3.58413, "time": 0.2893}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0005, "memory": 2463, "data_time": 0.10165, "loss_rpn_cls": 0.26916, "loss_rpn_bbox": 0.03256, "loss_cls": 0.6214, "acc": 97.39844, "loss_bbox": 0.09895, "loss": 1.02207, "time": 0.2323}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00075, "memory": 2463, "data_time": 0.09178, "loss_rpn_cls": 0.11752, "loss_rpn_bbox": 0.02964, "loss_cls": 0.43622, "acc": 95.99023, "loss_bbox": 0.15779, "loss": 0.74117, "time": 0.22362}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.001, "memory": 2463, "data_time": 0.09512, "loss_rpn_cls": 0.08028, "loss_rpn_bbox": 0.02419, "loss_cls": 0.37675, "acc": 95.70703, "loss_bbox": 0.16886, "loss": 0.65008, "time": 0.22831}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00125, "memory": 2463, "data_time": 0.09788, "loss_rpn_cls": 0.07543, "loss_rpn_bbox": 0.02116, "loss_cls": 0.32923, "acc": 96.02539, "loss_bbox": 0.1593, "loss": 0.58512, "time": 0.233}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0015, "memory": 2463, "data_time": 0.0886, "loss_rpn_cls": 0.06941, "loss_rpn_bbox": 0.01927, "loss_cls": 0.2919, "acc": 96.73828, "loss_bbox": 0.12765, "loss": 0.50823, "time": 0.22255}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00175, "memory": 2463, "data_time": 0.09072, "loss_rpn_cls": 0.08926, "loss_rpn_bbox": 0.02411, "loss_cls": 0.30935, "acc": 96.43945, "loss_bbox": 0.13667, "loss": 0.55938, "time": 0.2212}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.002, "memory": 2463, "data_time": 0.08792, "loss_rpn_cls": 0.06916, "loss_rpn_bbox": 0.02233, "loss_cls": 0.2854, "acc": 96.30664, "loss_bbox": 0.14549, "loss": 0.52239, "time": 0.22194}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00225, "memory": 2463, "data_time": 0.0873, "loss_rpn_cls": 0.08075, "loss_rpn_bbox": 0.0231, "loss_cls": 0.30869, "acc": 95.92578, "loss_bbox": 0.15862, "loss": 0.57116, "time": 0.21971}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.0025, "memory": 2463, "data_time": 0.09013, "loss_rpn_cls": 0.06702, "loss_rpn_bbox": 0.01653, "loss_cls": 0.31672, "acc": 96.37305, "loss_bbox": 0.14574, "loss": 0.54601, "time": 0.22186}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.0025, "memory": 2463, "data_time": 0.08826, "loss_rpn_cls": 0.09353, "loss_rpn_bbox": 0.02996, "loss_cls": 0.34704, "acc": 95.68359, "loss_bbox": 0.16942, "loss": 0.63995, "time": 0.22158}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0025, "memory": 2463, "data_time": 0.08867, "loss_rpn_cls": 0.08273, "loss_rpn_bbox": 0.02854, "loss_cls": 0.29657, "acc": 95.54492, "loss_bbox": 0.17348, "loss": 0.58132, "time": 0.22275}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.0025, "memory": 2463, "data_time": 0.0949, "loss_rpn_cls": 0.08086, "loss_rpn_bbox": 0.0253, "loss_cls": 0.27222, "acc": 96.74219, "loss_bbox": 0.12772, "loss": 0.5061, "time": 0.22891}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.0025, "memory": 2463, "data_time": 0.08737, "loss_rpn_cls": 0.06293, "loss_rpn_bbox": 0.02078, "loss_cls": 0.26996, "acc": 96.47852, "loss_bbox": 0.14294, "loss": 0.49661, "time": 0.21772}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.0025, "memory": 2463, "data_time": 0.08762, "loss_rpn_cls": 0.08095, "loss_rpn_bbox": 0.02231, "loss_cls": 0.33009, "acc": 95.43164, "loss_bbox": 0.18152, "loss": 0.61487, "time": 0.21844}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0025, "memory": 2463, "data_time": 0.09792, "loss_rpn_cls": 0.08111, "loss_rpn_bbox": 0.02518, "loss_cls": 0.30082, "acc": 95.97656, "loss_bbox": 0.15561, "loss": 0.56273, "time": 0.23114}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.0025, "memory": 2463, "data_time": 0.08837, "loss_rpn_cls": 0.06439, "loss_rpn_bbox": 0.02055, "loss_cls": 0.26474, "acc": 96.17578, "loss_bbox": 0.15056, "loss": 0.50024, "time": 0.22548}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.0025, "memory": 2463, "data_time": 0.09169, "loss_rpn_cls": 0.07772, "loss_rpn_bbox": 0.0245, "loss_cls": 0.27963, "acc": 95.6543, "loss_bbox": 0.17043, "loss": 0.55228, "time": 0.22917}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.0025, "memory": 2463, "data_time": 0.08831, "loss_rpn_cls": 0.06873, "loss_rpn_bbox": 0.02232, "loss_cls": 0.3244, "acc": 95.37891, "loss_bbox": 0.18509, "loss": 0.60054, "time": 0.21792}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.0025, "memory": 2463, "data_time": 0.09545, "loss_rpn_cls": 0.0669, "loss_rpn_bbox": 0.02274, "loss_cls": 0.32741, "acc": 95.30664, "loss_bbox": 0.18677, "loss": 0.60381, "time": 0.23163}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.0025, "memory": 2463, "data_time": 0.08948, "loss_rpn_cls": 0.07455, "loss_rpn_bbox": 0.02622, "loss_cls": 0.31023, "acc": 95.28711, "loss_bbox": 0.18567, "loss": 0.59667, "time": 0.2212}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.0025, "memory": 2463, "data_time": 0.09203, "loss_rpn_cls": 0.0812, "loss_rpn_bbox": 0.02673, "loss_cls": 0.28489, "acc": 95.66992, "loss_bbox": 0.16721, "loss": 0.56003, "time": 0.22371}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.0025, "memory": 2463, "data_time": 0.08693, "loss_rpn_cls": 0.06728, "loss_rpn_bbox": 0.02116, "loss_cls": 0.26572, "acc": 95.92773, "loss_bbox": 0.15919, "loss": 0.51334, "time": 0.22178}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.0025, "memory": 2463, "data_time": 0.09532, "loss_rpn_cls": 0.06168, "loss_rpn_bbox": 0.01954, "loss_cls": 0.25925, "acc": 95.90234, "loss_bbox": 0.1593, "loss": 0.49977, "time": 0.23119}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.0025, "memory": 2463, "data_time": 0.08836, "loss_rpn_cls": 0.06151, "loss_rpn_bbox": 0.02163, "loss_cls": 0.28911, "acc": 95.73633, "loss_bbox": 0.1702, "loss": 0.54245, "time": 0.22157}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.0025, "memory": 2463, "data_time": 0.08627, "loss_rpn_cls": 0.06625, "loss_rpn_bbox": 0.02257, "loss_cls": 0.24937, "acc": 96.20312, "loss_bbox": 0.14572, "loss": 0.48391, "time": 0.21711}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.0025, "memory": 2463, "data_time": 0.0898, "loss_rpn_cls": 0.06403, "loss_rpn_bbox": 0.01878, "loss_cls": 0.26373, "acc": 95.85352, "loss_bbox": 0.16188, "loss": 0.50843, "time": 0.2233}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.0025, "memory": 2463, "data_time": 0.09356, "loss_rpn_cls": 0.05729, "loss_rpn_bbox": 0.02134, "loss_cls": 0.29113, "acc": 95.64258, "loss_bbox": 0.17225, "loss": 0.54202, "time": 0.22478}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.0025, "memory": 2463, "data_time": 0.08461, "loss_rpn_cls": 0.07198, "loss_rpn_bbox": 0.0223, "loss_cls": 0.28167, "acc": 95.43359, "loss_bbox": 0.17891, "loss": 0.55487, "time": 0.21476}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.0025, "memory": 2463, "data_time": 0.09316, "loss_rpn_cls": 0.06044, "loss_rpn_bbox": 0.02131, "loss_cls": 0.28708, "acc": 95.95508, "loss_bbox": 0.15782, "loss": 0.52665, "time": 0.2256}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.0025, "memory": 2463, "data_time": 0.09165, "loss_rpn_cls": 0.06694, "loss_rpn_bbox": 0.01938, "loss_cls": 0.26019, "acc": 95.7793, "loss_bbox": 0.16245, "loss": 0.50896, "time": 0.2214}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.0025, "memory": 2463, "data_time": 0.08691, "loss_rpn_cls": 0.05742, "loss_rpn_bbox": 0.0192, "loss_cls": 0.25551, "acc": 95.83008, "loss_bbox": 0.16039, "loss": 0.49252, "time": 0.21836}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.0025, "memory": 2463, "data_time": 0.0844, "loss_rpn_cls": 0.05064, "loss_rpn_bbox": 0.02111, "loss_cls": 0.26868, "acc": 95.46875, "loss_bbox": 0.17668, "loss": 0.51711, "time": 0.2204}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.0025, "memory": 2463, "data_time": 0.08689, "loss_rpn_cls": 0.06774, "loss_rpn_bbox": 0.02675, "loss_cls": 0.23512, "acc": 96.05664, "loss_bbox": 0.15026, "loss": 0.47987, "time": 0.21733}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.0025, "memory": 2463, "data_time": 0.08017, "loss_rpn_cls": 0.04716, "loss_rpn_bbox": 0.0202, "loss_cls": 0.26696, "acc": 95.92188, "loss_bbox": 0.15935, "loss": 0.49367, "time": 0.2106}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.0025, "memory": 2463, "data_time": 0.08395, "loss_rpn_cls": 0.0497, "loss_rpn_bbox": 0.01933, "loss_cls": 0.28992, "acc": 95.125, "loss_bbox": 0.18986, "loss": 0.54881, "time": 0.2159}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.0025, "memory": 2463, "data_time": 0.08843, "loss_rpn_cls": 0.04565, "loss_rpn_bbox": 0.01635, "loss_cls": 0.26227, "acc": 95.65039, "loss_bbox": 0.16892, "loss": 0.49319, "time": 0.21872}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.0025, "memory": 2463, "data_time": 0.08445, "loss_rpn_cls": 0.04066, "loss_rpn_bbox": 0.01692, "loss_cls": 0.25814, "acc": 95.75977, "loss_bbox": 0.16712, "loss": 0.48284, "time": 0.21556}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.0025, "memory": 2463, "data_time": 0.08514, "loss_rpn_cls": 0.0517, "loss_rpn_bbox": 0.01711, "loss_cls": 0.27662, "acc": 95.54102, "loss_bbox": 0.17265, "loss": 0.51807, "time": 0.21467}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.0025, "memory": 2463, "data_time": 0.08824, "loss_rpn_cls": 0.04466, "loss_rpn_bbox": 0.01898, "loss_cls": 0.24407, "acc": 95.95703, "loss_bbox": 0.15669, "loss": 0.4644, "time": 0.21718}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.0025, "memory": 2463, "data_time": 0.08758, "loss_rpn_cls": 0.05525, "loss_rpn_bbox": 0.02071, "loss_cls": 0.29898, "acc": 94.94141, "loss_bbox": 0.19657, "loss": 0.57151, "time": 0.21968}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.0025, "memory": 2463, "data_time": 0.08686, "loss_rpn_cls": 0.05216, "loss_rpn_bbox": 0.0216, "loss_cls": 0.29324, "acc": 94.81641, "loss_bbox": 0.20006, "loss": 0.56706, "time": 0.22039}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.0025, "memory": 2463, "data_time": 0.08733, "loss_rpn_cls": 0.05515, "loss_rpn_bbox": 0.02276, "loss_cls": 0.29862, "acc": 95.10547, "loss_bbox": 0.18933, "loss": 0.56587, "time": 0.21855}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.0025, "memory": 2463, "data_time": 0.08545, "loss_rpn_cls": 0.05317, "loss_rpn_bbox": 0.02167, "loss_cls": 0.29136, "acc": 95.12305, "loss_bbox": 0.18607, "loss": 0.55226, "time": 0.21741}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.0025, "memory": 2463, "data_time": 0.08779, "loss_rpn_cls": 0.04658, "loss_rpn_bbox": 0.02387, "loss_cls": 0.32367, "acc": 94.46875, "loss_bbox": 0.21576, "loss": 0.60988, "time": 0.22161}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.0025, "memory": 2463, "data_time": 0.0859, "loss_rpn_cls": 0.04369, "loss_rpn_bbox": 0.02103, "loss_cls": 0.26424, "acc": 95.21484, "loss_bbox": 0.18157, "loss": 0.51053, "time": 0.21752}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.0025, "memory": 2463, "data_time": 0.08567, "loss_rpn_cls": 0.06209, "loss_rpn_bbox": 0.0258, "loss_cls": 0.30415, "acc": 94.56445, "loss_bbox": 0.20636, "loss": 0.5984, "time": 0.21808}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.0025, "memory": 2463, "data_time": 0.08286, "loss_rpn_cls": 0.05369, "loss_rpn_bbox": 0.02394, "loss_cls": 0.31353, "acc": 94.59375, "loss_bbox": 0.20557, "loss": 0.59674, "time": 0.21625}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.0025, "memory": 2463, "data_time": 0.08695, "loss_rpn_cls": 0.05428, "loss_rpn_bbox": 0.02247, "loss_cls": 0.25838, "acc": 95.38086, "loss_bbox": 0.17324, "loss": 0.50836, "time": 0.2159}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.0025, "memory": 2463, "data_time": 0.08631, "loss_rpn_cls": 0.046, "loss_rpn_bbox": 0.01657, "loss_cls": 0.24871, "acc": 95.52148, "loss_bbox": 0.16918, "loss": 0.48047, "time": 0.21433}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.0025, "memory": 2463, "data_time": 0.08553, "loss_rpn_cls": 0.04186, "loss_rpn_bbox": 0.01871, "loss_cls": 0.28015, "acc": 95.0957, "loss_bbox": 0.18492, "loss": 0.52564, "time": 0.21618}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.0025, "memory": 2463, "data_time": 0.08361, "loss_rpn_cls": 0.03578, "loss_rpn_bbox": 0.0188, "loss_cls": 0.27772, "acc": 95.17578, "loss_bbox": 0.18273, "loss": 0.51503, "time": 0.2148}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.0025, "memory": 2463, "data_time": 0.08313, "loss_rpn_cls": 0.06082, "loss_rpn_bbox": 0.02478, "loss_cls": 0.31177, "acc": 94.65039, "loss_bbox": 0.19946, "loss": 0.59682, "time": 0.21295}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.0025, "memory": 2463, "data_time": 0.07683, "loss_rpn_cls": 0.04995, "loss_rpn_bbox": 0.01939, "loss_cls": 0.25014, "acc": 95.46875, "loss_bbox": 0.16828, "loss": 0.48777, "time": 0.20711}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.0025, "memory": 2463, "data_time": 0.08129, "loss_rpn_cls": 0.05376, "loss_rpn_bbox": 0.01934, "loss_cls": 0.27857, "acc": 95.35742, "loss_bbox": 0.17498, "loss": 0.52665, "time": 0.21324}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.0025, "memory": 2463, "data_time": 0.08489, "loss_rpn_cls": 0.06123, "loss_rpn_bbox": 0.02902, "loss_cls": 0.32921, "acc": 94.05078, "loss_bbox": 0.2262, "loss": 0.64566, "time": 0.21657}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.0025, "memory": 2463, "data_time": 0.08265, "loss_rpn_cls": 0.05033, "loss_rpn_bbox": 0.02117, "loss_cls": 0.29365, "acc": 94.66992, "loss_bbox": 0.19936, "loss": 0.56451, "time": 0.21647}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.0025, "memory": 2463, "data_time": 0.07801, "loss_rpn_cls": 0.04534, "loss_rpn_bbox": 0.02022, "loss_cls": 0.30211, "acc": 94.49023, "loss_bbox": 0.20372, "loss": 0.57139, "time": 0.20794}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.0025, "memory": 2463, "data_time": 0.0792, "loss_rpn_cls": 0.03689, "loss_rpn_bbox": 0.0161, "loss_cls": 0.29552, "acc": 94.97266, "loss_bbox": 0.19002, "loss": 0.53853, "time": 0.20545}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.0025, "memory": 2463, "data_time": 0.07921, "loss_rpn_cls": 0.04944, "loss_rpn_bbox": 0.02183, "loss_cls": 0.29744, "acc": 95.03516, "loss_bbox": 0.18347, "loss": 0.55218, "time": 0.20896}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.0025, "memory": 2463, "data_time": 0.08261, "loss_rpn_cls": 0.05148, "loss_rpn_bbox": 0.02458, "loss_cls": 0.2877, "acc": 94.89062, "loss_bbox": 0.19223, "loss": 0.55599, "time": 0.21585}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.0025, "memory": 2463, "data_time": 0.08828, "loss_rpn_cls": 0.05129, "loss_rpn_bbox": 0.027, "loss_cls": 0.3071, "acc": 94.31836, "loss_bbox": 0.21261, "loss": 0.598, "time": 0.22158}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.0025, "memory": 2463, "data_time": 0.0855, "loss_rpn_cls": 0.04696, "loss_rpn_bbox": 0.0229, "loss_cls": 0.30538, "acc": 94.17969, "loss_bbox": 0.216, "loss": 0.59123, "time": 0.21511}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.0025, "memory": 2463, "data_time": 0.08114, "loss_rpn_cls": 0.045, "loss_rpn_bbox": 0.02415, "loss_cls": 0.31727, "acc": 94.13672, "loss_bbox": 0.21548, "loss": 0.60189, "time": 0.21428}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.0025, "memory": 2463, "data_time": 0.08265, "loss_rpn_cls": 0.0406, "loss_rpn_bbox": 0.01782, "loss_cls": 0.2689, "acc": 95.16406, "loss_bbox": 0.1779, "loss": 0.50522, "time": 0.21536}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.0025, "memory": 2463, "data_time": 0.08643, "loss_rpn_cls": 0.03824, "loss_rpn_bbox": 0.01722, "loss_cls": 0.26713, "acc": 95.40039, "loss_bbox": 0.16947, "loss": 0.49206, "time": 0.22033}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.0025, "memory": 2463, "data_time": 0.08347, "loss_rpn_cls": 0.0389, "loss_rpn_bbox": 0.01991, "loss_cls": 0.26795, "acc": 94.92383, "loss_bbox": 0.18539, "loss": 0.51215, "time": 0.21466}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.0025, "memory": 2463, "data_time": 0.0812, "loss_rpn_cls": 0.04883, "loss_rpn_bbox": 0.0237, "loss_cls": 0.30845, "acc": 94.13086, "loss_bbox": 0.21634, "loss": 0.59732, "time": 0.21262}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.0025, "memory": 2463, "data_time": 0.08019, "loss_rpn_cls": 0.04461, "loss_rpn_bbox": 0.02019, "loss_cls": 0.30184, "acc": 94.34375, "loss_bbox": 0.2009, "loss": 0.56754, "time": 0.20814}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.0025, "memory": 2463, "data_time": 0.07876, "loss_rpn_cls": 0.04858, "loss_rpn_bbox": 0.02109, "loss_cls": 0.23147, "acc": 95.57422, "loss_bbox": 0.15726, "loss": 0.45839, "time": 0.21067}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.0025, "memory": 2463, "data_time": 0.08476, "loss_rpn_cls": 0.03723, "loss_rpn_bbox": 0.01875, "loss_cls": 0.24714, "acc": 95.52148, "loss_bbox": 0.16452, "loss": 0.46764, "time": 0.21429}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.0025, "memory": 2463, "data_time": 0.08036, "loss_rpn_cls": 0.04294, "loss_rpn_bbox": 0.02193, "loss_cls": 0.25705, "acc": 95.15625, "loss_bbox": 0.17598, "loss": 0.4979, "time": 0.21319}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.0025, "memory": 2463, "data_time": 0.08465, "loss_rpn_cls": 0.04893, "loss_rpn_bbox": 0.02046, "loss_cls": 0.26604, "acc": 95.05859, "loss_bbox": 0.17613, "loss": 0.51156, "time": 0.21401}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.0025, "memory": 2463, "data_time": 0.08475, "loss_rpn_cls": 0.04723, "loss_rpn_bbox": 0.02011, "loss_cls": 0.30104, "acc": 94.61719, "loss_bbox": 0.19958, "loss": 0.56795, "time": 0.21514}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.0025, "memory": 2463, "data_time": 0.09021, "loss_rpn_cls": 0.04649, "loss_rpn_bbox": 0.02189, "loss_cls": 0.27546, "acc": 94.61914, "loss_bbox": 0.19807, "loss": 0.54191, "time": 0.22276}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.0025, "memory": 2463, "data_time": 0.07999, "loss_rpn_cls": 0.05938, "loss_rpn_bbox": 0.02699, "loss_cls": 0.34996, "acc": 93.63672, "loss_bbox": 0.23482, "loss": 0.67115, "time": 0.21286}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.0025, "memory": 2463, "data_time": 0.08805, "loss_rpn_cls": 0.05022, "loss_rpn_bbox": 0.02174, "loss_cls": 0.26551, "acc": 94.95703, "loss_bbox": 0.18291, "loss": 0.52038, "time": 0.21769}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.0025, "memory": 2463, "data_time": 0.08326, "loss_rpn_cls": 0.04225, "loss_rpn_bbox": 0.02103, "loss_cls": 0.27577, "acc": 94.93359, "loss_bbox": 0.18638, "loss": 0.52543, "time": 0.21374}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.0025, "memory": 2463, "data_time": 0.08356, "loss_rpn_cls": 0.05588, "loss_rpn_bbox": 0.0274, "loss_cls": 0.28363, "acc": 94.36719, "loss_bbox": 0.20385, "loss": 0.57076, "time": 0.21329}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.0025, "memory": 2463, "data_time": 0.0841, "loss_rpn_cls": 0.04654, "loss_rpn_bbox": 0.02099, "loss_cls": 0.29067, "acc": 94.17773, "loss_bbox": 0.21577, "loss": 0.57397, "time": 0.21387}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.0025, "memory": 2463, "data_time": 0.08503, "loss_rpn_cls": 0.04201, "loss_rpn_bbox": 0.02329, "loss_cls": 0.29035, "acc": 94.31445, "loss_bbox": 0.20512, "loss": 0.56077, "time": 0.21491}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.0025, "memory": 2463, "data_time": 0.08877, "loss_rpn_cls": 0.0394, "loss_rpn_bbox": 0.02159, "loss_cls": 0.28839, "acc": 94.17773, "loss_bbox": 0.20697, "loss": 0.55635, "time": 0.21836}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.0025, "memory": 2463, "data_time": 0.08384, "loss_rpn_cls": 0.04126, "loss_rpn_bbox": 0.0195, "loss_cls": 0.28534, "acc": 94.31641, "loss_bbox": 0.20219, "loss": 0.54829, "time": 0.21431}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.0025, "memory": 2463, "data_time": 0.08697, "loss_rpn_cls": 0.05668, "loss_rpn_bbox": 0.02269, "loss_cls": 0.25835, "acc": 95.09961, "loss_bbox": 0.17564, "loss": 0.51337, "time": 0.21555}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.0025, "memory": 2463, "data_time": 0.07634, "loss_rpn_cls": 0.05318, "loss_rpn_bbox": 0.02327, "loss_cls": 0.27732, "acc": 94.61133, "loss_bbox": 0.19357, "loss": 0.54734, "time": 0.20571}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.0025, "memory": 2463, "data_time": 0.08608, "loss_rpn_cls": 0.0368, "loss_rpn_bbox": 0.01997, "loss_cls": 0.26098, "acc": 94.48047, "loss_bbox": 0.19465, "loss": 0.51239, "time": 0.21585}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.0025, "memory": 2463, "data_time": 0.08843, "loss_rpn_cls": 0.04278, "loss_rpn_bbox": 0.02166, "loss_cls": 0.22979, "acc": 95.70117, "loss_bbox": 0.15356, "loss": 0.4478, "time": 0.21823}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.0025, "memory": 2463, "data_time": 0.089, "loss_rpn_cls": 0.04406, "loss_rpn_bbox": 0.02485, "loss_cls": 0.309, "acc": 93.89062, "loss_bbox": 0.21838, "loss": 0.59629, "time": 0.2155}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.0025, "memory": 2463, "data_time": 0.08129, "loss_rpn_cls": 0.04137, "loss_rpn_bbox": 0.01992, "loss_cls": 0.26006, "acc": 94.94141, "loss_bbox": 0.177, "loss": 0.49836, "time": 0.20894}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.0025, "memory": 2463, "data_time": 0.08719, "loss_rpn_cls": 0.03862, "loss_rpn_bbox": 0.01819, "loss_cls": 0.25065, "acc": 95.0918, "loss_bbox": 0.17516, "loss": 0.48261, "time": 0.21748}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.0025, "memory": 2463, "data_time": 0.08615, "loss_rpn_cls": 0.05271, "loss_rpn_bbox": 0.02446, "loss_cls": 0.28446, "acc": 94.16797, "loss_bbox": 0.20696, "loss": 0.56859, "time": 0.21872}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.0025, "memory": 2463, "data_time": 0.08522, "loss_rpn_cls": 0.04365, "loss_rpn_bbox": 0.02276, "loss_cls": 0.29631, "acc": 94.01758, "loss_bbox": 0.20344, "loss": 0.56616, "time": 0.21526}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.0025, "memory": 2463, "data_time": 0.09343, "loss_rpn_cls": 0.03506, "loss_rpn_bbox": 0.01879, "loss_cls": 0.26541, "acc": 94.73242, "loss_bbox": 0.18281, "loss": 0.50207, "time": 0.22336}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.0025, "memory": 2463, "data_time": 0.0808, "loss_rpn_cls": 0.04687, "loss_rpn_bbox": 0.02183, "loss_cls": 0.2653, "acc": 94.75977, "loss_bbox": 0.18637, "loss": 0.52037, "time": 0.20957}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.0025, "memory": 2463, "data_time": 0.07803, "loss_rpn_cls": 0.0457, "loss_rpn_bbox": 0.02325, "loss_cls": 0.24899, "acc": 94.86328, "loss_bbox": 0.18103, "loss": 0.49897, "time": 0.20563}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.0025, "memory": 2463, "data_time": 0.08155, "loss_rpn_cls": 0.05213, "loss_rpn_bbox": 0.02507, "loss_cls": 0.27979, "acc": 94.44531, "loss_bbox": 0.19283, "loss": 0.54982, "time": 0.21195}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.0025, "memory": 2463, "data_time": 0.07793, "loss_rpn_cls": 0.04589, "loss_rpn_bbox": 0.0204, "loss_cls": 0.24288, "acc": 95.14453, "loss_bbox": 0.17671, "loss": 0.48588, "time": 0.20781}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.0025, "memory": 2463, "data_time": 0.08389, "loss_rpn_cls": 0.04517, "loss_rpn_bbox": 0.02132, "loss_cls": 0.28275, "acc": 94.53711, "loss_bbox": 0.1995, "loss": 0.54874, "time": 0.21445}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.0025, "memory": 2463, "data_time": 0.0764, "loss_rpn_cls": 0.04014, "loss_rpn_bbox": 0.01815, "loss_cls": 0.27123, "acc": 94.74609, "loss_bbox": 0.18673, "loss": 0.51625, "time": 0.20547}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.0025, "memory": 2463, "data_time": 0.07915, "loss_rpn_cls": 0.03903, "loss_rpn_bbox": 0.02031, "loss_cls": 0.25552, "acc": 94.74414, "loss_bbox": 0.18709, "loss": 0.50195, "time": 0.20764}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.0025, "memory": 2463, "data_time": 0.07889, "loss_rpn_cls": 0.03854, "loss_rpn_bbox": 0.01984, "loss_cls": 0.26096, "acc": 94.72461, "loss_bbox": 0.18228, "loss": 0.50162, "time": 0.20756}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.0025, "memory": 2463, "data_time": 0.08015, "loss_rpn_cls": 0.03308, "loss_rpn_bbox": 0.01962, "loss_cls": 0.25508, "acc": 94.57031, "loss_bbox": 0.19356, "loss": 0.50133, "time": 0.21221}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.0025, "memory": 2463, "data_time": 0.07722, "loss_rpn_cls": 0.03199, "loss_rpn_bbox": 0.01886, "loss_cls": 0.25208, "acc": 94.7793, "loss_bbox": 0.18694, "loss": 0.48987, "time": 0.20915}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.0025, "memory": 2463, "data_time": 0.08123, "loss_rpn_cls": 0.0378, "loss_rpn_bbox": 0.01695, "loss_cls": 0.22323, "acc": 95.30469, "loss_bbox": 0.15965, "loss": 0.43764, "time": 0.20823}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.0025, "memory": 2463, "data_time": 0.08063, "loss_rpn_cls": 0.03765, "loss_rpn_bbox": 0.01848, "loss_cls": 0.24408, "acc": 94.82227, "loss_bbox": 0.18705, "loss": 0.48726, "time": 0.20885}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.0025, "memory": 2463, "data_time": 0.07249, "loss_rpn_cls": 0.04185, "loss_rpn_bbox": 0.02439, "loss_cls": 0.27948, "acc": 93.85547, "loss_bbox": 0.22803, "loss": 0.57376, "time": 0.20231}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.0025, "memory": 2463, "data_time": 0.08136, "loss_rpn_cls": 0.03237, "loss_rpn_bbox": 0.01881, "loss_cls": 0.24991, "acc": 94.92578, "loss_bbox": 0.17203, "loss": 0.47311, "time": 0.21208}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.0025, "memory": 2463, "data_time": 0.07776, "loss_rpn_cls": 0.03279, "loss_rpn_bbox": 0.01815, "loss_cls": 0.25722, "acc": 94.50195, "loss_bbox": 0.18679, "loss": 0.49494, "time": 0.2071}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.0025, "memory": 2463, "data_time": 0.07589, "loss_rpn_cls": 0.0312, "loss_rpn_bbox": 0.02225, "loss_cls": 0.29485, "acc": 93.61328, "loss_bbox": 0.22074, "loss": 0.56905, "time": 0.20821}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.0025, "memory": 2463, "data_time": 0.0763, "loss_rpn_cls": 0.04196, "loss_rpn_bbox": 0.02577, "loss_cls": 0.27965, "acc": 93.82227, "loss_bbox": 0.22048, "loss": 0.56786, "time": 0.2041}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.0025, "memory": 2463, "data_time": 0.07876, "loss_rpn_cls": 0.05024, "loss_rpn_bbox": 0.02101, "loss_cls": 0.269, "acc": 94.95117, "loss_bbox": 0.17574, "loss": 0.51599, "time": 0.20611}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.0025, "memory": 2463, "data_time": 0.0835, "loss_rpn_cls": 0.03963, "loss_rpn_bbox": 0.02039, "loss_cls": 0.25933, "acc": 94.65234, "loss_bbox": 0.18638, "loss": 0.50573, "time": 0.21423}
