2020-10-30 10:09:37,237 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]
CUDA available: True
GPU 0: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.4.0
MMCV: 1.1.5
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2020-10-30 10:09:40,505 - mmdet - INFO - Distributed training: True
2020-10-30 10:09:43,773 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=20,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'VOCDataset'
data_root = '/root/userfolder/data/voc0712/VOCdevkit/'
img_norm_cfg = dict(
    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[103.53, 116.28, 123.675],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=0,
    train=dict(
        type='RepeatDataset',
        times=3,
        dataset=dict(
            type='VOCDataset',
            ann_file=[
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'
            ],
            img_prefix=[
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'
            ],
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),
                dict(type='RandomFlip', flip_ratio=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='Pad', size_divisor=32),
                dict(type='DefaultFormatBundle'),
                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='VOCDataset',
        ann_file=
        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',
        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='VOCDataset',
        ann_file=
        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',
        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='mAP')
optimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 12
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/faster_rcnn_r50_fpn_1x_voc_moco_caffe'
gpu_ids = range(0, 1)

2020-10-30 10:09:44,198 - mmdet - INFO - load model from: icode/moco_v2_800ep_pretrain_rename.pth
2020-10-30 10:09:44,416 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.0.weight, fc.0.bias, fc.2.weight, fc.2.bias

2020-10-30 10:09:53,359 - mmdet - INFO - Start running, host: root@95b7482644c5, work_dir: /root/userfolder/mmdetection/work_dirs/faster_rcnn_r50_fpn_1x_voc_moco_caffe
2020-10-30 10:09:53,360 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2020-10-30 10:10:10,271 - mmdet - INFO - Epoch [1][50/24827]	lr: 2.473e-04, eta: 1 day, 3:55:13, time: 0.337, data_time: 0.171, memory: 2463, loss_rpn_cls: 0.6910, loss_rpn_bbox: 0.0224, loss_cls: 2.8415, acc: 64.3633, loss_bbox: 0.0005, loss: 3.5554
2020-10-30 10:10:25,656 - mmdet - INFO - Epoch [1][100/24827]	lr: 4.970e-04, eta: 1 day, 2:41:12, time: 0.308, data_time: 0.143, memory: 2463, loss_rpn_cls: 0.2410, loss_rpn_bbox: 0.0299, loss_cls: 0.5453, acc: 97.0078, loss_bbox: 0.1146, loss: 0.9308
2020-10-30 10:10:40,842 - mmdet - INFO - Epoch [1][150/24827]	lr: 7.468e-04, eta: 1 day, 2:09:37, time: 0.304, data_time: 0.146, memory: 2463, loss_rpn_cls: 0.1115, loss_rpn_bbox: 0.0300, loss_cls: 0.4207, acc: 96.0547, loss_bbox: 0.1550, loss: 0.7171
2020-10-30 10:10:55,120 - mmdet - INFO - Epoch [1][200/24827]	lr: 9.965e-04, eta: 1 day, 1:31:08, time: 0.285, data_time: 0.115, memory: 2463, loss_rpn_cls: 0.0829, loss_rpn_bbox: 0.0269, loss_cls: 0.3669, acc: 95.5879, loss_bbox: 0.1757, loss: 0.6523
2020-10-30 10:11:10,181 - mmdet - INFO - Epoch [1][250/24827]	lr: 1.246e-03, eta: 1 day, 1:23:55, time: 0.302, data_time: 0.142, memory: 2463, loss_rpn_cls: 0.0769, loss_rpn_bbox: 0.0216, loss_cls: 0.3312, acc: 96.1230, loss_bbox: 0.1553, loss: 0.5849
2020-10-30 10:11:24,778 - mmdet - INFO - Epoch [1][300/24827]	lr: 1.496e-03, eta: 1 day, 1:11:15, time: 0.292, data_time: 0.131, memory: 2463, loss_rpn_cls: 0.0705, loss_rpn_bbox: 0.0188, loss_cls: 0.2797, acc: 96.8906, loss_bbox: 0.1208, loss: 0.4898
2020-10-30 10:11:39,203 - mmdet - INFO - Epoch [1][350/24827]	lr: 1.746e-03, eta: 1 day, 0:58:54, time: 0.288, data_time: 0.129, memory: 2463, loss_rpn_cls: 0.0947, loss_rpn_bbox: 0.0253, loss_cls: 0.3144, acc: 96.4883, loss_bbox: 0.1350, loss: 0.5694
2020-10-30 10:11:53,859 - mmdet - INFO - Epoch [1][400/24827]	lr: 1.996e-03, eta: 1 day, 0:53:01, time: 0.293, data_time: 0.129, memory: 2463, loss_rpn_cls: 0.0731, loss_rpn_bbox: 0.0236, loss_cls: 0.2924, acc: 96.3379, loss_bbox: 0.1466, loss: 0.5357
2020-10-30 10:12:08,710 - mmdet - INFO - Epoch [1][450/24827]	lr: 2.245e-03, eta: 1 day, 0:50:32, time: 0.297, data_time: 0.141, memory: 2463, loss_rpn_cls: 0.0805, loss_rpn_bbox: 0.0224, loss_cls: 0.3013, acc: 96.0625, loss_bbox: 0.1529, loss: 0.5571
2020-10-30 10:12:23,505 - mmdet - INFO - Epoch [1][500/24827]	lr: 2.495e-03, eta: 1 day, 0:47:57, time: 0.296, data_time: 0.144, memory: 2463, loss_rpn_cls: 0.0677, loss_rpn_bbox: 0.0171, loss_cls: 0.3020, acc: 96.4434, loss_bbox: 0.1426, loss: 0.5295
2020-10-30 10:12:38,247 - mmdet - INFO - Epoch [1][550/24827]	lr: 2.500e-03, eta: 1 day, 0:45:21, time: 0.295, data_time: 0.132, memory: 2463, loss_rpn_cls: 0.0939, loss_rpn_bbox: 0.0293, loss_cls: 0.3123, acc: 95.8535, loss_bbox: 0.1607, loss: 0.5962
2020-10-30 10:12:52,636 - mmdet - INFO - Epoch [1][600/24827]	lr: 2.500e-03, eta: 1 day, 0:40:05, time: 0.288, data_time: 0.122, memory: 2463, loss_rpn_cls: 0.0877, loss_rpn_bbox: 0.0288, loss_cls: 0.2860, acc: 95.6504, loss_bbox: 0.1673, loss: 0.5698
2020-10-30 10:13:07,977 - mmdet - INFO - Epoch [1][650/24827]	lr: 2.500e-03, eta: 1 day, 0:42:57, time: 0.307, data_time: 0.142, memory: 2463, loss_rpn_cls: 0.0824, loss_rpn_bbox: 0.0243, loss_cls: 0.2801, acc: 96.8105, loss_bbox: 0.1234, loss: 0.5101
2020-10-30 10:13:22,750 - mmdet - INFO - Epoch [1][700/24827]	lr: 2.500e-03, eta: 1 day, 0:41:20, time: 0.295, data_time: 0.141, memory: 2463, loss_rpn_cls: 0.0661, loss_rpn_bbox: 0.0206, loss_cls: 0.2571, acc: 96.6055, loss_bbox: 0.1361, loss: 0.4799
2020-10-30 10:13:37,310 - mmdet - INFO - Epoch [1][750/24827]	lr: 2.500e-03, eta: 1 day, 0:38:42, time: 0.292, data_time: 0.129, memory: 2463, loss_rpn_cls: 0.0840, loss_rpn_bbox: 0.0226, loss_cls: 0.3251, acc: 95.4551, loss_bbox: 0.1793, loss: 0.6109
2020-10-30 10:13:52,465 - mmdet - INFO - Epoch [1][800/24827]	lr: 2.500e-03, eta: 1 day, 0:39:51, time: 0.303, data_time: 0.123, memory: 2463, loss_rpn_cls: 0.0826, loss_rpn_bbox: 0.0247, loss_cls: 0.2935, acc: 95.8242, loss_bbox: 0.1635, loss: 0.5644
2020-10-30 10:14:08,321 - mmdet - INFO - Epoch [1][850/24827]	lr: 2.500e-03, eta: 1 day, 0:44:46, time: 0.317, data_time: 0.144, memory: 2463, loss_rpn_cls: 0.0681, loss_rpn_bbox: 0.0208, loss_cls: 0.2577, acc: 96.3496, loss_bbox: 0.1439, loss: 0.4905
2020-10-30 10:14:23,965 - mmdet - INFO - Epoch [1][900/24827]	lr: 2.500e-03, eta: 1 day, 0:48:16, time: 0.314, data_time: 0.137, memory: 2463, loss_rpn_cls: 0.0849, loss_rpn_bbox: 0.0249, loss_cls: 0.2622, acc: 95.9609, loss_bbox: 0.1568, loss: 0.5287
2020-10-30 10:14:39,114 - mmdet - INFO - Epoch [1][950/24827]	lr: 2.500e-03, eta: 1 day, 0:48:38, time: 0.303, data_time: 0.120, memory: 2463, loss_rpn_cls: 0.0761, loss_rpn_bbox: 0.0228, loss_cls: 0.3099, acc: 95.6582, loss_bbox: 0.1726, loss: 0.5814
2020-10-30 10:14:54,629 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_voc_moco_caffe.py
2020-10-30 10:14:54,643 - mmdet - INFO - Epoch [1][1000/24827]	lr: 2.500e-03, eta: 1 day, 0:50:41, time: 0.310, data_time: 0.127, memory: 2463, loss_rpn_cls: 0.0711, loss_rpn_bbox: 0.0229, loss_cls: 0.3007, acc: 95.5039, loss_bbox: 0.1787, loss: 0.5734
2020-10-30 10:15:09,771 - mmdet - INFO - Epoch [1][1050/24827]	lr: 2.500e-03, eta: 1 day, 0:50:50, time: 0.303, data_time: 0.106, memory: 2463, loss_rpn_cls: 0.0821, loss_rpn_bbox: 0.0264, loss_cls: 0.3050, acc: 95.3809, loss_bbox: 0.1807, loss: 0.5942
2020-10-30 10:15:25,372 - mmdet - INFO - Epoch [1][1100/24827]	lr: 2.500e-03, eta: 1 day, 0:52:48, time: 0.311, data_time: 0.123, memory: 2463, loss_rpn_cls: 0.0828, loss_rpn_bbox: 0.0257, loss_cls: 0.2810, acc: 95.8203, loss_bbox: 0.1596, loss: 0.5491
2020-10-30 10:15:40,383 - mmdet - INFO - Epoch [1][1150/24827]	lr: 2.500e-03, eta: 1 day, 0:52:14, time: 0.300, data_time: 0.110, memory: 2463, loss_rpn_cls: 0.0720, loss_rpn_bbox: 0.0210, loss_cls: 0.2750, acc: 96.0957, loss_bbox: 0.1514, loss: 0.5193
2020-10-30 10:15:55,585 - mmdet - INFO - Epoch [1][1200/24827]	lr: 2.500e-03, eta: 1 day, 0:52:35, time: 0.305, data_time: 0.118, memory: 2463, loss_rpn_cls: 0.0669, loss_rpn_bbox: 0.0196, loss_cls: 0.2702, acc: 95.9707, loss_bbox: 0.1588, loss: 0.5156
