{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "dataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/'\nimg_norm_cfg = dict(\n    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[102.9801, 115.9465, 122.7717],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[102.9801, 115.9465, 122.7717],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=['/root/userfolder/data/VOC2012/'],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ]),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[102.9801, 115.9465, 122.7717],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='VOCDataset',\n        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',\n        img_prefix='/root/userfolder/data/VOC2012/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[102.9801, 115.9465, 122.7717],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',\n        img_prefix='/root/userfolder/data/VOC2012/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[102.9801, 115.9465, 122.7717],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(\n    type='SGD',\n    lr=0.00125,\n    momentum=0.9,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='constant',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[8, 11])\ntotal_epochs = 12\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nmodel = dict(\n    type='FCOS',\n    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs=True,\n        extra_convs_on_inputs=False,\n        num_outs=5,\n        relu_before_extra_convs=True),\n    bbox_head=dict(\n        type='FCOSHead',\n        num_classes=20,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        strides=[8, 16, 32, 64, 128],\n        norm_cfg=None,\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='IoULoss', loss_weight=1.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))\ntrain_cfg = dict(\n    assigner=dict(\n        type='MaxIoUAssigner',\n        pos_iou_thr=0.5,\n        neg_iou_thr=0.4,\n        min_pos_iou=0,\n        ignore_iof_thr=-1),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\ntest_cfg = dict(\n    nms_pre=1000,\n    min_bbox_size=0,\n    score_thr=0.05,\n    nms=dict(type='nms', iou_threshold=0.5),\n    max_per_img=100)\nwork_dir = './work_dirs/fcos_r50_caffe_fpn_4x4_1x_coco_moco'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "fcos_r50_caffe_fpn_4x4_1x_coco_moco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00042, "memory": 3253, "data_time": 0.43507, "loss_cls": 1.11425, "loss_bbox": 9.54876, "loss_centerness": 0.69122, "loss": 11.35423, "grad_norm": 1.09457, "time": 0.72658}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00042, "memory": 3253, "data_time": 0.40516, "loss_cls": 1.11194, "loss_bbox": 8.92293, "loss_centerness": 0.68631, "loss": 10.72118, "grad_norm": 1.44416, "time": 0.68307}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00042, "memory": 3253, "data_time": 0.37211, "loss_cls": 1.10763, "loss_bbox": 7.71039, "loss_centerness": 0.68222, "loss": 9.50024, "grad_norm": 3.31891, "time": 0.65225}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00042, "memory": 3253, "data_time": 0.33852, "loss_cls": 1.10473, "loss_bbox": 1.94639, "loss_centerness": 0.67919, "loss": 3.73031, "grad_norm": 13.40754, "time": 0.62712}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00042, "memory": 3253, "data_time": 0.35327, "loss_cls": 1.10115, "loss_bbox": 0.97698, "loss_centerness": 0.67687, "loss": 2.75499, "grad_norm": 5.38551, "time": 0.6361}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00042, "memory": 3253, "data_time": 0.25743, "loss_cls": 1.09815, "loss_bbox": 0.90741, "loss_centerness": 0.6739, "loss": 2.67947, "grad_norm": 4.74719, "time": 0.54241}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00042, "memory": 3253, "data_time": 0.16829, "loss_cls": 1.09432, "loss_bbox": 0.89019, "loss_centerness": 0.67363, "loss": 2.65814, "grad_norm": 4.54708, "time": 0.45885}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00042, "memory": 3253, "data_time": 0.17916, "loss_cls": 1.09052, "loss_bbox": 0.89182, "loss_centerness": 0.67101, "loss": 2.65334, "grad_norm": 3.74417, "time": 0.46349}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00042, "memory": 3253, "data_time": 0.16255, "loss_cls": 1.08342, "loss_bbox": 0.90789, "loss_centerness": 0.66985, "loss": 2.66116, "grad_norm": 4.76653, "time": 0.45114}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00042, "memory": 3253, "data_time": 0.18073, "loss_cls": 1.08055, "loss_bbox": 0.88315, "loss_centerness": 0.67036, "loss": 2.63406, "grad_norm": 4.49974, "time": 0.46779}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00125, "memory": 3253, "data_time": 0.17486, "loss_cls": 1.07203, "loss_bbox": 0.91003, "loss_centerness": 0.66839, "loss": 2.65045, "grad_norm": 4.0523, "time": 0.46622}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00125, "memory": 3253, "data_time": 0.17912, "loss_cls": 1.05645, "loss_bbox": 0.86785, "loss_centerness": 0.66882, "loss": 2.59312, "grad_norm": 3.74266, "time": 0.46615}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00125, "memory": 3253, "data_time": 0.18807, "loss_cls": 1.03697, "loss_bbox": 0.87019, "loss_centerness": 0.66669, "loss": 2.57385, "grad_norm": 4.27334, "time": 0.47183}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00125, "memory": 3253, "data_time": 0.18403, "loss_cls": 0.88801, "loss_bbox": 0.87234, "loss_centerness": 0.66875, "loss": 2.42911, "grad_norm": 5.59556, "time": 0.47182}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00125, "memory": 3253, "data_time": 0.17585, "loss_cls": 0.71402, "loss_bbox": 0.88359, "loss_centerness": 0.66694, "loss": 2.26455, "grad_norm": 7.86527, "time": 0.468}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00125, "memory": 3253, "data_time": 0.19566, "loss_cls": 0.64625, "loss_bbox": 0.88366, "loss_centerness": 0.6667, "loss": 2.1966, "grad_norm": 6.44283, "time": 0.4792}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00125, "memory": 3253, "data_time": 0.18022, "loss_cls": 0.64545, "loss_bbox": 0.85176, "loss_centerness": 0.66257, "loss": 2.15978, "grad_norm": 5.91585, "time": 0.46572}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00125, "memory": 3253, "data_time": 0.17578, "loss_cls": 0.59332, "loss_bbox": 0.82111, "loss_centerness": 0.66311, "loss": 2.07755, "grad_norm": 5.39199, "time": 0.47101}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00125, "memory": 3253, "data_time": 0.17499, "loss_cls": 0.58366, "loss_bbox": 0.80536, "loss_centerness": 0.66114, "loss": 2.05016, "grad_norm": 6.25494, "time": 0.46141}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00125, "memory": 3253, "data_time": 0.16831, "loss_cls": 0.65104, "loss_bbox": 0.84246, "loss_centerness": 0.6607, "loss": 2.15421, "grad_norm": 8.16138, "time": 0.45407}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00125, "memory": 3253, "data_time": 0.16903, "loss_cls": 0.58066, "loss_bbox": 0.75707, "loss_centerness": 0.6587, "loss": 1.99643, "grad_norm": 7.92047, "time": 0.46295}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00125, "memory": 3253, "data_time": 0.1831, "loss_cls": 0.56466, "loss_bbox": 0.7191, "loss_centerness": 0.6551, "loss": 1.93885, "grad_norm": 9.26564, "time": 0.46902}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00125, "memory": 3253, "data_time": 0.1767, "loss_cls": 0.58544, "loss_bbox": 0.70028, "loss_centerness": 0.65306, "loss": 1.93877, "grad_norm": 8.91764, "time": 0.4645}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00125, "memory": 3253, "data_time": 0.18514, "loss_cls": 0.5681, "loss_bbox": 0.66996, "loss_centerness": 0.64998, "loss": 1.88803, "grad_norm": 7.96757, "time": 0.4698}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00125, "memory": 3253, "data_time": 0.18815, "loss_cls": 0.57305, "loss_bbox": 0.7016, "loss_centerness": 0.64418, "loss": 1.91883, "grad_norm": 10.01469, "time": 0.46954}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00125, "memory": 3253, "data_time": 0.17121, "loss_cls": 0.54728, "loss_bbox": 0.59768, "loss_centerness": 0.63794, "loss": 1.78289, "grad_norm": 7.40965, "time": 0.45572}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00125, "memory": 3253, "data_time": 0.19424, "loss_cls": 0.56009, "loss_bbox": 0.59775, "loss_centerness": 0.63555, "loss": 1.79339, "grad_norm": 9.25897, "time": 0.47892}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00125, "memory": 3253, "data_time": 0.18901, "loss_cls": 0.55378, "loss_bbox": 0.56775, "loss_centerness": 0.63313, "loss": 1.75466, "grad_norm": 9.17986, "time": 0.4702}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00125, "memory": 3253, "data_time": 0.25775, "loss_cls": 0.56188, "loss_bbox": 0.57234, "loss_centerness": 0.63477, "loss": 1.76899, "grad_norm": 9.37901, "time": 0.55519}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00125, "memory": 3253, "data_time": 0.26431, "loss_cls": 0.5777, "loss_bbox": 0.55014, "loss_centerness": 0.63051, "loss": 1.75835, "grad_norm": 8.90628, "time": 0.56319}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.00125, "memory": 3253, "data_time": 0.24322, "loss_cls": 0.54597, "loss_bbox": 0.54454, "loss_centerness": 0.63087, "loss": 1.72138, "grad_norm": 8.95653, "time": 0.54709}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.00125, "memory": 3253, "data_time": 0.26225, "loss_cls": 0.54182, "loss_bbox": 0.54876, "loss_centerness": 0.62552, "loss": 1.71611, "grad_norm": 9.05102, "time": 0.56186}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.00125, "memory": 3253, "data_time": 0.24969, "loss_cls": 0.53719, "loss_bbox": 0.54534, "loss_centerness": 0.6271, "loss": 1.70962, "grad_norm": 8.90648, "time": 0.58902}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.00125, "memory": 3253, "data_time": 0.24901, "loss_cls": 0.542, "loss_bbox": 0.53431, "loss_centerness": 0.62494, "loss": 1.70124, "grad_norm": 8.99829, "time": 0.54995}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.00125, "memory": 3253, "data_time": 0.25927, "loss_cls": 0.53611, "loss_bbox": 0.49694, "loss_centerness": 0.62297, "loss": 1.65602, "grad_norm": 8.83884, "time": 0.56078}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.00125, "memory": 3253, "data_time": 0.25229, "loss_cls": 0.51778, "loss_bbox": 0.50215, "loss_centerness": 0.62408, "loss": 1.64401, "grad_norm": 8.84567, "time": 0.5535}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.00125, "memory": 3253, "data_time": 0.23804, "loss_cls": 0.5237, "loss_bbox": 0.53772, "loss_centerness": 0.62382, "loss": 1.68523, "grad_norm": 9.1295, "time": 0.53658}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.00125, "memory": 3253, "data_time": 0.24651, "loss_cls": 0.50973, "loss_bbox": 0.48931, "loss_centerness": 0.61988, "loss": 1.61893, "grad_norm": 8.66993, "time": 0.54261}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.00125, "memory": 3253, "data_time": 0.25425, "loss_cls": 0.51083, "loss_bbox": 0.49049, "loss_centerness": 0.6213, "loss": 1.62263, "grad_norm": 8.74224, "time": 0.54547}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.00125, "memory": 3253, "data_time": 0.24709, "loss_cls": 0.54691, "loss_bbox": 0.49238, "loss_centerness": 0.61837, "loss": 1.65766, "grad_norm": 9.93258, "time": 0.54732}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.00125, "memory": 3253, "data_time": 0.2443, "loss_cls": 0.53129, "loss_bbox": 0.49765, "loss_centerness": 0.62094, "loss": 1.64988, "grad_norm": 9.79132, "time": 0.54121}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.00125, "memory": 3253, "data_time": 0.2553, "loss_cls": 0.52014, "loss_bbox": 0.51091, "loss_centerness": 0.62385, "loss": 1.65491, "grad_norm": 9.12075, "time": 0.55365}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.00125, "memory": 3253, "data_time": 0.25485, "loss_cls": 0.50651, "loss_bbox": 0.51279, "loss_centerness": 0.62163, "loss": 1.64094, "grad_norm": 9.3928, "time": 0.55676}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.00125, "memory": 3253, "data_time": 0.24018, "loss_cls": 0.49406, "loss_bbox": 0.46995, "loss_centerness": 0.6186, "loss": 1.58261, "grad_norm": 8.41726, "time": 0.54361}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.00125, "memory": 3253, "data_time": 0.24478, "loss_cls": 0.5079, "loss_bbox": 0.49232, "loss_centerness": 0.61939, "loss": 1.61962, "grad_norm": 9.32172, "time": 0.54399}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.00125, "memory": 3253, "data_time": 0.25458, "loss_cls": 0.53608, "loss_bbox": 0.45468, "loss_centerness": 0.61717, "loss": 1.60794, "grad_norm": 9.18266, "time": 0.55157}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.00125, "memory": 3253, "data_time": 0.23446, "loss_cls": 0.48514, "loss_bbox": 0.44488, "loss_centerness": 0.61494, "loss": 1.54496, "grad_norm": 8.11524, "time": 0.53119}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.00125, "memory": 3253, "data_time": 0.24235, "loss_cls": 0.47392, "loss_bbox": 0.44911, "loss_centerness": 0.61517, "loss": 1.5382, "grad_norm": 7.81734, "time": 0.54083}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.00125, "memory": 3253, "data_time": 0.23342, "loss_cls": 0.48386, "loss_bbox": 0.46019, "loss_centerness": 0.61489, "loss": 1.55894, "grad_norm": 8.84911, "time": 0.53154}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.00125, "memory": 3253, "data_time": 0.23863, "loss_cls": 0.48449, "loss_bbox": 0.45003, "loss_centerness": 0.61501, "loss": 1.54953, "grad_norm": 8.78861, "time": 0.53612}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.00125, "memory": 3253, "data_time": 0.16814, "loss_cls": 0.49478, "loss_bbox": 0.43745, "loss_centerness": 0.61337, "loss": 1.5456, "grad_norm": 9.21111, "time": 0.45792}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.00125, "memory": 3253, "data_time": 0.19793, "loss_cls": 0.47045, "loss_bbox": 0.45326, "loss_centerness": 0.61664, "loss": 1.54034, "grad_norm": 8.46022, "time": 0.48233}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.00125, "memory": 3253, "data_time": 0.18762, "loss_cls": 0.46885, "loss_bbox": 0.45797, "loss_centerness": 0.61676, "loss": 1.54358, "grad_norm": 8.83232, "time": 0.47217}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.00125, "memory": 3253, "data_time": 0.17962, "loss_cls": 0.46458, "loss_bbox": 0.44462, "loss_centerness": 0.61617, "loss": 1.52536, "grad_norm": 8.63652, "time": 0.46407}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.00125, "memory": 3253, "data_time": 0.18006, "loss_cls": 0.45978, "loss_bbox": 0.43339, "loss_centerness": 0.61317, "loss": 1.50634, "grad_norm": 8.40863, "time": 0.46582}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.00125, "memory": 3253, "data_time": 0.18838, "loss_cls": 0.4852, "loss_bbox": 0.43839, "loss_centerness": 0.61649, "loss": 1.54008, "grad_norm": 8.83587, "time": 0.47471}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.00125, "memory": 3253, "data_time": 0.17931, "loss_cls": 0.44808, "loss_bbox": 0.434, "loss_centerness": 0.61558, "loss": 1.49766, "grad_norm": 8.13741, "time": 0.46162}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.00125, "memory": 3253, "data_time": 0.18353, "loss_cls": 0.45106, "loss_bbox": 0.43258, "loss_centerness": 0.61438, "loss": 1.49802, "grad_norm": 8.43574, "time": 0.46485}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.00125, "memory": 3253, "data_time": 0.17193, "loss_cls": 0.44027, "loss_bbox": 0.42822, "loss_centerness": 0.61462, "loss": 1.48312, "grad_norm": 8.96786, "time": 0.45867}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.00125, "memory": 3253, "data_time": 0.18623, "loss_cls": 0.43564, "loss_bbox": 0.4341, "loss_centerness": 0.61584, "loss": 1.48558, "grad_norm": 7.99755, "time": 0.47027}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.00125, "memory": 3253, "data_time": 0.18612, "loss_cls": 0.43858, "loss_bbox": 0.43265, "loss_centerness": 0.61094, "loss": 1.48217, "grad_norm": 9.25175, "time": 0.46908}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.00125, "memory": 3253, "data_time": 0.18302, "loss_cls": 0.44532, "loss_bbox": 0.42125, "loss_centerness": 0.6129, "loss": 1.47947, "grad_norm": 8.68503, "time": 0.46403}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.00125, "memory": 3253, "data_time": 0.18191, "loss_cls": 0.455, "loss_bbox": 0.42492, "loss_centerness": 0.61567, "loss": 1.4956, "grad_norm": 8.85368, "time": 0.46353}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.00125, "memory": 3253, "data_time": 0.17191, "loss_cls": 0.43129, "loss_bbox": 0.41017, "loss_centerness": 0.61279, "loss": 1.45425, "grad_norm": 7.72729, "time": 0.45981}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.00125, "memory": 3253, "data_time": 0.16313, "loss_cls": 0.43691, "loss_bbox": 0.40887, "loss_centerness": 0.60981, "loss": 1.45558, "grad_norm": 8.84949, "time": 0.45012}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.00125, "memory": 3253, "data_time": 0.17902, "loss_cls": 0.42331, "loss_bbox": 0.42232, "loss_centerness": 0.61342, "loss": 1.45905, "grad_norm": 8.40892, "time": 0.46357}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.00125, "memory": 3253, "data_time": 0.17478, "loss_cls": 0.45341, "loss_bbox": 0.4072, "loss_centerness": 0.61271, "loss": 1.47332, "grad_norm": 9.20913, "time": 0.46121}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.00125, "memory": 3253, "data_time": 0.17575, "loss_cls": 0.42144, "loss_bbox": 0.42061, "loss_centerness": 0.61133, "loss": 1.45338, "grad_norm": 8.7973, "time": 0.46094}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.00125, "memory": 3253, "data_time": 0.19035, "loss_cls": 0.42493, "loss_bbox": 0.41755, "loss_centerness": 0.6114, "loss": 1.45388, "grad_norm": 8.54506, "time": 0.48108}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.00125, "memory": 3253, "data_time": 0.17581, "loss_cls": 0.41317, "loss_bbox": 0.40273, "loss_centerness": 0.6112, "loss": 1.4271, "grad_norm": 8.24032, "time": 0.45835}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.00125, "memory": 3253, "data_time": 0.188, "loss_cls": 0.4267, "loss_bbox": 0.42486, "loss_centerness": 0.61497, "loss": 1.46652, "grad_norm": 8.54788, "time": 0.47599}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.00125, "memory": 3253, "data_time": 0.17926, "loss_cls": 0.41969, "loss_bbox": 0.41643, "loss_centerness": 0.61151, "loss": 1.44763, "grad_norm": 9.40753, "time": 0.46344}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.00125, "memory": 3253, "data_time": 0.15687, "loss_cls": 0.43159, "loss_bbox": 0.40939, "loss_centerness": 0.61043, "loss": 1.45141, "grad_norm": 8.67777, "time": 0.43869}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.00125, "memory": 3253, "data_time": 0.13488, "loss_cls": 0.40357, "loss_bbox": 0.3916, "loss_centerness": 0.61001, "loss": 1.40518, "grad_norm": 7.91697, "time": 0.41814}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.00125, "memory": 3253, "data_time": 0.13795, "loss_cls": 0.38737, "loss_bbox": 0.39542, "loss_centerness": 0.60957, "loss": 1.39235, "grad_norm": 8.96435, "time": 0.42569}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.00125, "memory": 3253, "data_time": 0.14229, "loss_cls": 0.4024, "loss_bbox": 0.3985, "loss_centerness": 0.60945, "loss": 1.41035, "grad_norm": 8.67829, "time": 0.42113}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.00125, "memory": 3253, "data_time": 0.1467, "loss_cls": 0.38994, "loss_bbox": 0.37694, "loss_centerness": 0.6073, "loss": 1.37417, "grad_norm": 8.13766, "time": 0.42933}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.00125, "memory": 3253, "data_time": 0.14046, "loss_cls": 0.39408, "loss_bbox": 0.38194, "loss_centerness": 0.60861, "loss": 1.38463, "grad_norm": 8.42148, "time": 0.4274}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.00125, "memory": 3253, "data_time": 0.13555, "loss_cls": 0.39349, "loss_bbox": 0.39621, "loss_centerness": 0.60854, "loss": 1.39824, "grad_norm": 8.91487, "time": 0.4232}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.00125, "memory": 3253, "data_time": 0.14425, "loss_cls": 0.38381, "loss_bbox": 0.39702, "loss_centerness": 0.60998, "loss": 1.39081, "grad_norm": 9.06904, "time": 0.42905}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.00125, "memory": 3253, "data_time": 0.14357, "loss_cls": 0.39339, "loss_bbox": 0.38843, "loss_centerness": 0.60811, "loss": 1.38993, "grad_norm": 8.92078, "time": 0.43118}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.00125, "memory": 3253, "data_time": 0.13914, "loss_cls": 0.39543, "loss_bbox": 0.38816, "loss_centerness": 0.60885, "loss": 1.39244, "grad_norm": 8.68723, "time": 0.41967}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.00125, "memory": 3253, "data_time": 0.12941, "loss_cls": 0.38257, "loss_bbox": 0.3917, "loss_centerness": 0.61249, "loss": 1.38676, "grad_norm": 7.90409, "time": 0.40941}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.00125, "memory": 3253, "data_time": 0.11411, "loss_cls": 0.3891, "loss_bbox": 0.3683, "loss_centerness": 0.60924, "loss": 1.36664, "grad_norm": 8.61221, "time": 0.39879}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.00125, "memory": 3253, "data_time": 0.14019, "loss_cls": 0.38138, "loss_bbox": 0.38679, "loss_centerness": 0.60773, "loss": 1.37591, "grad_norm": 8.70371, "time": 0.4421}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.00125, "memory": 3253, "data_time": 0.13262, "loss_cls": 0.40315, "loss_bbox": 0.37604, "loss_centerness": 0.61125, "loss": 1.39044, "grad_norm": 9.36565, "time": 0.41807}
{"mode": "val", "epoch": 1, "iter": 4328, "lr": 0.00125, "mAP": 0.00393}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00125, "memory": 3253, "data_time": 0.1828, "loss_cls": 0.37402, "loss_bbox": 0.3764, "loss_centerness": 0.60804, "loss": 1.35845, "grad_norm": 8.85108, "time": 0.65308}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00125, "memory": 3253, "data_time": 0.13652, "loss_cls": 0.37434, "loss_bbox": 0.39644, "loss_centerness": 0.61115, "loss": 1.38194, "grad_norm": 8.89267, "time": 0.60873}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00125, "memory": 3253, "data_time": 0.12868, "loss_cls": 0.37125, "loss_bbox": 0.37933, "loss_centerness": 0.60799, "loss": 1.35856, "grad_norm": 8.88681, "time": 0.60325}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00125, "memory": 3253, "data_time": 0.12366, "loss_cls": 0.35605, "loss_bbox": 0.36248, "loss_centerness": 0.60458, "loss": 1.3231, "grad_norm": 8.3753, "time": 0.60841}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00125, "memory": 3253, "data_time": 0.12487, "loss_cls": 0.37363, "loss_bbox": 0.37642, "loss_centerness": 0.60907, "loss": 1.35912, "grad_norm": 9.02544, "time": 0.60215}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00125, "memory": 3253, "data_time": 0.13968, "loss_cls": 0.3712, "loss_bbox": 0.35403, "loss_centerness": 0.60676, "loss": 1.33199, "grad_norm": 8.84934, "time": 0.65226}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00125, "memory": 3253, "data_time": 0.16485, "loss_cls": 0.37747, "loss_bbox": 0.386, "loss_centerness": 0.60881, "loss": 1.37229, "grad_norm": 9.13831, "time": 0.75987}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.00125, "memory": 3253, "data_time": 0.14165, "loss_cls": 0.36675, "loss_bbox": 0.38189, "loss_centerness": 0.609, "loss": 1.35764, "grad_norm": 8.90122, "time": 0.67461}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.00125, "memory": 3253, "data_time": 0.12316, "loss_cls": 0.37458, "loss_bbox": 0.36623, "loss_centerness": 0.60675, "loss": 1.34757, "grad_norm": 9.40586, "time": 0.60448}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00125, "memory": 3253, "data_time": 0.12439, "loss_cls": 0.33704, "loss_bbox": 0.35785, "loss_centerness": 0.60585, "loss": 1.30074, "grad_norm": 8.48495, "time": 0.59972}
