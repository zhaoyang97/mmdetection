{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/voc0712/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1000, 600),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'\n            ],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ])),\n    val=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[16, 22])\ntotal_epochs = 24\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/faster_rcnn_r50_fpn_2x_voc'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "faster_rcnn_r50_fpn_2x_voc.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 2576, "data_time": 0.16224, "loss_rpn_cls": 0.47162, "loss_rpn_bbox": 0.02706, "loss_cls": 1.42296, "acc": 85.99512, "loss_bbox": 0.01988, "loss": 1.94153, "time": 0.7049}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 2576, "data_time": 0.12497, "loss_rpn_cls": 0.09066, "loss_rpn_bbox": 0.02504, "loss_cls": 0.50157, "acc": 96.17578, "loss_bbox": 0.15046, "loss": 0.76773, "time": 0.63125}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 2576, "data_time": 0.10898, "loss_rpn_cls": 0.0657, "loss_rpn_bbox": 0.02154, "loss_cls": 0.39818, "acc": 95.87939, "loss_bbox": 0.16391, "loss": 0.64934, "time": 0.59514}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 2576, "data_time": 0.11138, "loss_rpn_cls": 0.0548, "loss_rpn_bbox": 0.0207, "loss_cls": 0.36782, "acc": 95.49609, "loss_bbox": 0.18097, "loss": 0.62429, "time": 0.62893}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 2576, "data_time": 0.11316, "loss_rpn_cls": 0.05461, "loss_rpn_bbox": 0.02471, "loss_cls": 0.30831, "acc": 95.38135, "loss_bbox": 0.18371, "loss": 0.57134, "time": 0.63217}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 2576, "data_time": 0.11836, "loss_rpn_cls": 0.04074, "loss_rpn_bbox": 0.02068, "loss_cls": 0.3196, "acc": 95.44482, "loss_bbox": 0.18264, "loss": 0.56367, "time": 0.61257}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 2576, "data_time": 0.12302, "loss_rpn_cls": 0.0435, "loss_rpn_bbox": 0.02409, "loss_cls": 0.31092, "acc": 94.70361, "loss_bbox": 0.21009, "loss": 0.58861, "time": 0.66947}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 2576, "data_time": 0.11749, "loss_rpn_cls": 0.03838, "loss_rpn_bbox": 0.02185, "loss_cls": 0.29146, "acc": 94.8501, "loss_bbox": 0.20146, "loss": 0.55315, "time": 0.62347}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 2576, "data_time": 0.10534, "loss_rpn_cls": 0.03868, "loss_rpn_bbox": 0.02212, "loss_cls": 0.32515, "acc": 94.91016, "loss_bbox": 0.19308, "loss": 0.57904, "time": 0.58683}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00998, "memory": 2576, "data_time": 0.12726, "loss_rpn_cls": 0.0395, "loss_rpn_bbox": 0.02418, "loss_cls": 0.29708, "acc": 94.4751, "loss_bbox": 0.2135, "loss": 0.57426, "time": 0.65912}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 2576, "data_time": 0.14011, "loss_rpn_cls": 0.03119, "loss_rpn_bbox": 0.01895, "loss_cls": 0.24823, "acc": 94.97803, "loss_bbox": 0.19224, "loss": 0.49061, "time": 0.63348}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.01, "memory": 2576, "data_time": 0.13052, "loss_rpn_cls": 0.03297, "loss_rpn_bbox": 0.02073, "loss_cls": 0.26088, "acc": 94.75439, "loss_bbox": 0.19638, "loss": 0.51095, "time": 0.63225}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.01, "memory": 2576, "data_time": 0.11002, "loss_rpn_cls": 0.03966, "loss_rpn_bbox": 0.02202, "loss_cls": 0.25414, "acc": 94.84033, "loss_bbox": 0.19255, "loss": 0.50837, "time": 0.63515}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.01, "memory": 2576, "data_time": 0.12491, "loss_rpn_cls": 0.03051, "loss_rpn_bbox": 0.02183, "loss_cls": 0.24981, "acc": 94.1499, "loss_bbox": 0.21626, "loss": 0.51841, "time": 0.63702}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.01, "memory": 2576, "data_time": 0.12757, "loss_rpn_cls": 0.03114, "loss_rpn_bbox": 0.02124, "loss_cls": 0.24188, "acc": 94.39844, "loss_bbox": 0.20284, "loss": 0.4971, "time": 0.64335}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.01, "memory": 2576, "data_time": 0.13532, "loss_rpn_cls": 0.03333, "loss_rpn_bbox": 0.02228, "loss_cls": 0.2468, "acc": 94.5498, "loss_bbox": 0.20835, "loss": 0.51076, "time": 0.64181}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.01, "memory": 2576, "data_time": 0.12822, "loss_rpn_cls": 0.03575, "loss_rpn_bbox": 0.02055, "loss_cls": 0.25422, "acc": 94.68701, "loss_bbox": 0.19328, "loss": 0.5038, "time": 0.6457}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.01, "memory": 2576, "data_time": 0.09603, "loss_rpn_cls": 0.02611, "loss_rpn_bbox": 0.01784, "loss_cls": 0.23855, "acc": 94.51953, "loss_bbox": 0.19983, "loss": 0.48234, "time": 0.64094}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.01, "memory": 2576, "data_time": 0.10739, "loss_rpn_cls": 0.0236, "loss_rpn_bbox": 0.0187, "loss_cls": 0.23679, "acc": 94.33691, "loss_bbox": 0.21023, "loss": 0.48933, "time": 0.6606}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.01, "memory": 2576, "data_time": 0.11185, "loss_rpn_cls": 0.03166, "loss_rpn_bbox": 0.02143, "loss_cls": 0.23656, "acc": 94.35596, "loss_bbox": 0.20358, "loss": 0.49324, "time": 0.62526}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.01, "memory": 2576, "data_time": 0.1092, "loss_rpn_cls": 0.0299, "loss_rpn_bbox": 0.02126, "loss_cls": 0.22267, "acc": 94.17773, "loss_bbox": 0.21613, "loss": 0.48995, "time": 0.663}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.01, "memory": 2576, "data_time": 0.09903, "loss_rpn_cls": 0.03087, "loss_rpn_bbox": 0.0214, "loss_cls": 0.19388, "acc": 94.92432, "loss_bbox": 0.18518, "loss": 0.43132, "time": 0.65149}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.01, "memory": 2576, "data_time": 0.10918, "loss_rpn_cls": 0.03001, "loss_rpn_bbox": 0.02034, "loss_cls": 0.21621, "acc": 94.32617, "loss_bbox": 0.20258, "loss": 0.46913, "time": 0.63384}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.01, "memory": 2576, "data_time": 0.11914, "loss_rpn_cls": 0.02641, "loss_rpn_bbox": 0.02135, "loss_cls": 0.2081, "acc": 94.20801, "loss_bbox": 0.21038, "loss": 0.46625, "time": 0.63669}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.01, "memory": 2576, "data_time": 0.1182, "loss_rpn_cls": 0.02781, "loss_rpn_bbox": 0.02151, "loss_cls": 0.21043, "acc": 94.07959, "loss_bbox": 0.21944, "loss": 0.47919, "time": 0.66796}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.01, "memory": 2576, "data_time": 0.11119, "loss_rpn_cls": 0.02299, "loss_rpn_bbox": 0.01933, "loss_cls": 0.18548, "acc": 94.69385, "loss_bbox": 0.19821, "loss": 0.426, "time": 0.66055}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.01, "memory": 2576, "data_time": 0.11459, "loss_rpn_cls": 0.02764, "loss_rpn_bbox": 0.01918, "loss_cls": 0.18618, "acc": 94.61719, "loss_bbox": 0.19746, "loss": 0.43046, "time": 0.65233}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.01, "memory": 2576, "data_time": 0.10417, "loss_rpn_cls": 0.03074, "loss_rpn_bbox": 0.02058, "loss_cls": 0.19864, "acc": 94.27832, "loss_bbox": 0.20914, "loss": 0.45909, "time": 0.58698}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.01, "memory": 2576, "data_time": 0.11217, "loss_rpn_cls": 0.02825, "loss_rpn_bbox": 0.01999, "loss_cls": 0.19681, "acc": 94.15576, "loss_bbox": 0.21334, "loss": 0.45838, "time": 0.61232}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.01, "memory": 2576, "data_time": 0.11808, "loss_rpn_cls": 0.02279, "loss_rpn_bbox": 0.01873, "loss_cls": 0.18683, "acc": 94.52051, "loss_bbox": 0.20061, "loss": 0.42896, "time": 0.60247}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.01, "memory": 2576, "data_time": 0.10838, "loss_rpn_cls": 0.02156, "loss_rpn_bbox": 0.01885, "loss_cls": 0.18365, "acc": 94.34766, "loss_bbox": 0.20699, "loss": 0.43105, "time": 0.66776}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.01, "memory": 2576, "data_time": 0.11622, "loss_rpn_cls": 0.02078, "loss_rpn_bbox": 0.01899, "loss_cls": 0.16128, "acc": 95.2998, "loss_bbox": 0.17928, "loss": 0.38033, "time": 0.66961}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.01, "memory": 2576, "data_time": 0.11003, "loss_rpn_cls": 0.02285, "loss_rpn_bbox": 0.0181, "loss_cls": 0.16737, "acc": 94.93555, "loss_bbox": 0.18906, "loss": 0.39738, "time": 0.61243}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.01, "memory": 2576, "data_time": 0.12596, "loss_rpn_cls": 0.02008, "loss_rpn_bbox": 0.01617, "loss_cls": 0.17262, "acc": 94.68701, "loss_bbox": 0.19246, "loss": 0.40133, "time": 0.60832}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.01, "memory": 2577, "data_time": 0.11548, "loss_rpn_cls": 0.02037, "loss_rpn_bbox": 0.01812, "loss_cls": 0.17485, "acc": 94.67676, "loss_bbox": 0.19725, "loss": 0.41059, "time": 0.63535}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.01, "memory": 2577, "data_time": 0.10662, "loss_rpn_cls": 0.02264, "loss_rpn_bbox": 0.01721, "loss_cls": 0.18205, "acc": 94.78027, "loss_bbox": 0.19066, "loss": 0.41256, "time": 0.66079}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.01, "memory": 2577, "data_time": 0.11177, "loss_rpn_cls": 0.02229, "loss_rpn_bbox": 0.02024, "loss_cls": 0.17474, "acc": 94.70947, "loss_bbox": 0.19707, "loss": 0.41434, "time": 0.65227}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.01, "memory": 2577, "data_time": 0.11744, "loss_rpn_cls": 0.02272, "loss_rpn_bbox": 0.01809, "loss_cls": 0.1635, "acc": 95.28027, "loss_bbox": 0.17344, "loss": 0.37776, "time": 0.65921}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.01, "memory": 2577, "data_time": 0.11511, "loss_rpn_cls": 0.02641, "loss_rpn_bbox": 0.02155, "loss_cls": 0.17617, "acc": 94.51318, "loss_bbox": 0.20241, "loss": 0.42655, "time": 0.66451}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.01, "memory": 2577, "data_time": 0.11461, "loss_rpn_cls": 0.02242, "loss_rpn_bbox": 0.01719, "loss_cls": 0.16817, "acc": 94.84131, "loss_bbox": 0.19099, "loss": 0.39877, "time": 0.66013}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.01, "memory": 2577, "data_time": 0.11489, "loss_rpn_cls": 0.02663, "loss_rpn_bbox": 0.02, "loss_cls": 0.17985, "acc": 94.3291, "loss_bbox": 0.20689, "loss": 0.43337, "time": 0.64617}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.01, "memory": 2577, "data_time": 0.10857, "loss_rpn_cls": 0.0203, "loss_rpn_bbox": 0.01726, "loss_cls": 0.16933, "acc": 94.68115, "loss_bbox": 0.19514, "loss": 0.40202, "time": 0.46}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.01, "memory": 2577, "data_time": 0.11134, "loss_rpn_cls": 0.02207, "loss_rpn_bbox": 0.01631, "loss_cls": 0.16067, "acc": 95.12842, "loss_bbox": 0.18355, "loss": 0.3826, "time": 0.44498}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.01, "memory": 2577, "data_time": 0.11159, "loss_rpn_cls": 0.02317, "loss_rpn_bbox": 0.01896, "loss_cls": 0.18532, "acc": 94.51416, "loss_bbox": 0.19638, "loss": 0.42382, "time": 0.44217}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.01, "memory": 2577, "data_time": 0.11036, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.02009, "loss_cls": 0.16499, "acc": 94.95898, "loss_bbox": 0.18888, "loss": 0.39508, "time": 0.44887}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.01, "memory": 2577, "data_time": 0.1138, "loss_rpn_cls": 0.02335, "loss_rpn_bbox": 0.01707, "loss_cls": 0.16378, "acc": 94.99316, "loss_bbox": 0.18417, "loss": 0.38837, "time": 0.44427}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.01, "memory": 2577, "data_time": 0.11134, "loss_rpn_cls": 0.02102, "loss_rpn_bbox": 0.02013, "loss_cls": 0.17124, "acc": 94.44141, "loss_bbox": 0.20763, "loss": 0.42002, "time": 0.44858}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.01, "memory": 2577, "data_time": 0.11695, "loss_rpn_cls": 0.02098, "loss_rpn_bbox": 0.0159, "loss_cls": 0.1487, "acc": 95.30615, "loss_bbox": 0.17596, "loss": 0.36155, "time": 0.44639}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.01, "memory": 2577, "data_time": 0.10995, "loss_rpn_cls": 0.02004, "loss_rpn_bbox": 0.01867, "loss_cls": 0.16222, "acc": 94.71387, "loss_bbox": 0.19392, "loss": 0.39485, "time": 0.44291}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.01, "memory": 2577, "data_time": 0.11656, "loss_rpn_cls": 0.0251, "loss_rpn_bbox": 0.01914, "loss_cls": 0.166, "acc": 94.75781, "loss_bbox": 0.19147, "loss": 0.40171, "time": 0.47467}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.01, "memory": 2577, "data_time": 0.09714, "loss_rpn_cls": 0.02292, "loss_rpn_bbox": 0.01743, "loss_cls": 0.15766, "acc": 95.12109, "loss_bbox": 0.18193, "loss": 0.37994, "time": 0.65095}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.01, "memory": 2577, "data_time": 0.10927, "loss_rpn_cls": 0.0176, "loss_rpn_bbox": 0.01642, "loss_cls": 0.14996, "acc": 95.19092, "loss_bbox": 0.17954, "loss": 0.36353, "time": 0.64141}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.01, "memory": 2577, "data_time": 0.10783, "loss_rpn_cls": 0.02458, "loss_rpn_bbox": 0.0191, "loss_cls": 0.17261, "acc": 94.62793, "loss_bbox": 0.1959, "loss": 0.41219, "time": 0.62907}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.01, "memory": 2577, "data_time": 0.10946, "loss_rpn_cls": 0.01872, "loss_rpn_bbox": 0.01755, "loss_cls": 0.16013, "acc": 94.9209, "loss_bbox": 0.18574, "loss": 0.38214, "time": 0.63015}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.01, "memory": 2577, "data_time": 0.10875, "loss_rpn_cls": 0.01727, "loss_rpn_bbox": 0.01666, "loss_cls": 0.15303, "acc": 95.20703, "loss_bbox": 0.17766, "loss": 0.36463, "time": 0.61843}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.01, "memory": 2577, "data_time": 0.12054, "loss_rpn_cls": 0.02114, "loss_rpn_bbox": 0.01749, "loss_cls": 0.15369, "acc": 95.04395, "loss_bbox": 0.18023, "loss": 0.37254, "time": 0.64258}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.01, "memory": 2577, "data_time": 0.11788, "loss_rpn_cls": 0.01929, "loss_rpn_bbox": 0.01817, "loss_cls": 0.17001, "acc": 94.64648, "loss_bbox": 0.19475, "loss": 0.40221, "time": 0.64808}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.01, "memory": 2577, "data_time": 0.11579, "loss_rpn_cls": 0.02002, "loss_rpn_bbox": 0.01841, "loss_cls": 0.16092, "acc": 94.79199, "loss_bbox": 0.19169, "loss": 0.39104, "time": 0.63899}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.01, "memory": 2577, "data_time": 0.11029, "loss_rpn_cls": 0.02383, "loss_rpn_bbox": 0.0177, "loss_cls": 0.16144, "acc": 94.96875, "loss_bbox": 0.1764, "loss": 0.37937, "time": 0.61858}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.01, "memory": 2577, "data_time": 0.1243, "loss_rpn_cls": 0.0193, "loss_rpn_bbox": 0.01803, "loss_cls": 0.15748, "acc": 94.9707, "loss_bbox": 0.18525, "loss": 0.38005, "time": 0.62971}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.01, "memory": 2577, "data_time": 0.1101, "loss_rpn_cls": 0.02012, "loss_rpn_bbox": 0.01687, "loss_cls": 0.15404, "acc": 95.10547, "loss_bbox": 0.18397, "loss": 0.375, "time": 0.66735}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.01, "memory": 2577, "data_time": 0.10744, "loss_rpn_cls": 0.01952, "loss_rpn_bbox": 0.01928, "loss_cls": 0.16335, "acc": 94.55762, "loss_bbox": 0.20263, "loss": 0.40478, "time": 0.61738}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.01, "memory": 2577, "data_time": 0.1217, "loss_rpn_cls": 0.02209, "loss_rpn_bbox": 0.01888, "loss_cls": 0.17255, "acc": 94.48682, "loss_bbox": 0.19983, "loss": 0.41336, "time": 0.63985}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.01, "memory": 2577, "data_time": 0.12871, "loss_rpn_cls": 0.01867, "loss_rpn_bbox": 0.01687, "loss_cls": 0.14532, "acc": 95.21045, "loss_bbox": 0.17673, "loss": 0.35758, "time": 0.6428}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.01, "memory": 2577, "data_time": 0.11503, "loss_rpn_cls": 0.01967, "loss_rpn_bbox": 0.01643, "loss_cls": 0.14603, "acc": 95.23438, "loss_bbox": 0.17706, "loss": 0.35918, "time": 0.644}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.01, "memory": 2577, "data_time": 0.10825, "loss_rpn_cls": 0.01595, "loss_rpn_bbox": 0.01612, "loss_cls": 0.14842, "acc": 95.26807, "loss_bbox": 0.18165, "loss": 0.36215, "time": 0.63239}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.01, "memory": 2577, "data_time": 0.13402, "loss_rpn_cls": 0.01731, "loss_rpn_bbox": 0.01914, "loss_cls": 0.16681, "acc": 94.57422, "loss_bbox": 0.20045, "loss": 0.40371, "time": 0.66747}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.01, "memory": 2577, "data_time": 0.1248, "loss_rpn_cls": 0.01643, "loss_rpn_bbox": 0.01571, "loss_cls": 0.15249, "acc": 95.08691, "loss_bbox": 0.18307, "loss": 0.3677, "time": 0.6276}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.01, "memory": 2577, "data_time": 0.11998, "loss_rpn_cls": 0.02004, "loss_rpn_bbox": 0.01787, "loss_cls": 0.17394, "acc": 94.47363, "loss_bbox": 0.19861, "loss": 0.41047, "time": 0.58396}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.01, "memory": 2577, "data_time": 0.11158, "loss_rpn_cls": 0.01986, "loss_rpn_bbox": 0.01777, "loss_cls": 0.15678, "acc": 94.81592, "loss_bbox": 0.18543, "loss": 0.37986, "time": 0.59966}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.01, "memory": 2577, "data_time": 0.11404, "loss_rpn_cls": 0.02017, "loss_rpn_bbox": 0.01963, "loss_cls": 0.17, "acc": 94.50488, "loss_bbox": 0.20258, "loss": 0.41238, "time": 0.62984}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.01, "memory": 2577, "data_time": 0.12146, "loss_rpn_cls": 0.01952, "loss_rpn_bbox": 0.01534, "loss_cls": 0.14195, "acc": 95.36523, "loss_bbox": 0.17208, "loss": 0.34888, "time": 0.60387}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.01, "memory": 2577, "data_time": 0.11037, "loss_rpn_cls": 0.02145, "loss_rpn_bbox": 0.01921, "loss_cls": 0.1606, "acc": 94.7876, "loss_bbox": 0.19956, "loss": 0.40083, "time": 0.6036}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.01, "memory": 2577, "data_time": 0.10036, "loss_rpn_cls": 0.01729, "loss_rpn_bbox": 0.01645, "loss_cls": 0.15939, "acc": 94.771, "loss_bbox": 0.19106, "loss": 0.38419, "time": 0.59561}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.01, "memory": 2577, "data_time": 0.102, "loss_rpn_cls": 0.01623, "loss_rpn_bbox": 0.01719, "loss_cls": 0.15258, "acc": 94.89062, "loss_bbox": 0.18688, "loss": 0.37288, "time": 0.59367}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.01, "memory": 2577, "data_time": 0.09819, "loss_rpn_cls": 0.01772, "loss_rpn_bbox": 0.018, "loss_cls": 0.15364, "acc": 94.92725, "loss_bbox": 0.18505, "loss": 0.3744, "time": 0.56718}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.01, "memory": 2577, "data_time": 0.10765, "loss_rpn_cls": 0.0223, "loss_rpn_bbox": 0.01953, "loss_cls": 0.14861, "acc": 95.20508, "loss_bbox": 0.17758, "loss": 0.36802, "time": 0.61849}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.01, "memory": 2577, "data_time": 0.10749, "loss_rpn_cls": 0.01751, "loss_rpn_bbox": 0.01775, "loss_cls": 0.14809, "acc": 95.05322, "loss_bbox": 0.17791, "loss": 0.36127, "time": 0.60389}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.01, "memory": 2577, "data_time": 0.10044, "loss_rpn_cls": 0.01839, "loss_rpn_bbox": 0.01742, "loss_cls": 0.14628, "acc": 95.26074, "loss_bbox": 0.17741, "loss": 0.3595, "time": 0.5898}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.01, "memory": 2577, "data_time": 0.10793, "loss_rpn_cls": 0.01606, "loss_rpn_bbox": 0.01732, "loss_cls": 0.15787, "acc": 94.86475, "loss_bbox": 0.19501, "loss": 0.38625, "time": 0.59509}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.01, "memory": 2577, "data_time": 0.1071, "loss_rpn_cls": 0.01738, "loss_rpn_bbox": 0.01755, "loss_cls": 0.15956, "acc": 94.75293, "loss_bbox": 0.19048, "loss": 0.38498, "time": 0.60473}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.01, "memory": 2577, "data_time": 0.10341, "loss_rpn_cls": 0.01937, "loss_rpn_bbox": 0.01681, "loss_cls": 0.16314, "acc": 94.83643, "loss_bbox": 0.18519, "loss": 0.38452, "time": 0.60695}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.01, "memory": 2577, "data_time": 0.11634, "loss_rpn_cls": 0.01768, "loss_rpn_bbox": 0.01556, "loss_cls": 0.14822, "acc": 95.04248, "loss_bbox": 0.18317, "loss": 0.36463, "time": 0.58607}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.01, "memory": 2577, "data_time": 0.10557, "loss_rpn_cls": 0.01545, "loss_rpn_bbox": 0.01491, "loss_cls": 0.13464, "acc": 95.65234, "loss_bbox": 0.16111, "loss": 0.3261, "time": 0.60335}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.01, "memory": 2577, "data_time": 0.12, "loss_rpn_cls": 0.02146, "loss_rpn_bbox": 0.01899, "loss_cls": 0.15799, "acc": 94.76611, "loss_bbox": 0.19691, "loss": 0.39535, "time": 0.65196}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.01, "memory": 2577, "data_time": 0.11426, "loss_rpn_cls": 0.01862, "loss_rpn_bbox": 0.01664, "loss_cls": 0.16154, "acc": 94.83203, "loss_bbox": 0.18434, "loss": 0.38114, "time": 0.63272}
