{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.4.0\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained=\n    '../mmclassification/work_dirs/tct_full_resnet50_b32x8/epoch_50_pretrained.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=10,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nannotations_root = '../data/TCT_30000/'\nimage_root = '../data/TCT_30000/'\nclasses = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n           'dysbacteriosis_herpes_act', 'ec')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/train30000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/val10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/test10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = 'work_dirs/tct_full_e50/epoch_1.pth'\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/tct_full_e50'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "tct_full_e50.py"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.01, "memory": 3716, "data_time": 0.42861, "loss_rpn_cls": 0.04319, "loss_rpn_bbox": 0.02393, "loss_cls": 0.25894, "acc": 91.4248, "loss_bbox": 0.21564, "loss": 0.5417, "time": 0.73495}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01, "memory": 3716, "data_time": 0.35435, "loss_rpn_cls": 0.04601, "loss_rpn_bbox": 0.02647, "loss_cls": 0.28906, "acc": 90.625, "loss_bbox": 0.22924, "loss": 0.59078, "time": 0.67436}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.01, "memory": 3717, "data_time": 0.36529, "loss_rpn_cls": 0.04682, "loss_rpn_bbox": 0.0258, "loss_cls": 0.278, "acc": 91.19727, "loss_bbox": 0.21881, "loss": 0.56943, "time": 0.67327}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.01, "memory": 3717, "data_time": 0.36901, "loss_rpn_cls": 0.0519, "loss_rpn_bbox": 0.02758, "loss_cls": 0.27604, "acc": 90.92139, "loss_bbox": 0.22749, "loss": 0.58301, "time": 0.66873}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.01, "memory": 3717, "data_time": 0.3585, "loss_rpn_cls": 0.04747, "loss_rpn_bbox": 0.02829, "loss_cls": 0.27416, "acc": 90.94775, "loss_bbox": 0.23143, "loss": 0.58135, "time": 0.67357}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.01, "memory": 3717, "data_time": 0.37525, "loss_rpn_cls": 0.04461, "loss_rpn_bbox": 0.02662, "loss_cls": 0.26978, "acc": 91.24561, "loss_bbox": 0.21722, "loss": 0.55823, "time": 0.70668}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.01, "memory": 3717, "data_time": 0.36751, "loss_rpn_cls": 0.04403, "loss_rpn_bbox": 0.02547, "loss_cls": 0.25784, "acc": 91.4751, "loss_bbox": 0.2117, "loss": 0.53904, "time": 0.66976}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.01, "memory": 3717, "data_time": 0.36346, "loss_rpn_cls": 0.04726, "loss_rpn_bbox": 0.02556, "loss_cls": 0.27026, "acc": 91.19824, "loss_bbox": 0.22428, "loss": 0.56737, "time": 0.67382}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.01, "memory": 3717, "data_time": 0.35834, "loss_rpn_cls": 0.0452, "loss_rpn_bbox": 0.0245, "loss_cls": 0.25939, "acc": 91.86963, "loss_bbox": 0.20567, "loss": 0.53475, "time": 0.67045}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.01, "memory": 3717, "data_time": 0.36144, "loss_rpn_cls": 0.04462, "loss_rpn_bbox": 0.02463, "loss_cls": 0.26255, "acc": 91.47412, "loss_bbox": 0.2169, "loss": 0.54871, "time": 0.67479}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.01, "memory": 3717, "data_time": 0.34938, "loss_rpn_cls": 0.04837, "loss_rpn_bbox": 0.02822, "loss_cls": 0.2852, "acc": 90.75439, "loss_bbox": 0.23217, "loss": 0.59396, "time": 0.66577}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.01, "memory": 3717, "data_time": 0.34169, "loss_rpn_cls": 0.04064, "loss_rpn_bbox": 0.02522, "loss_cls": 0.26151, "acc": 91.42871, "loss_bbox": 0.21575, "loss": 0.54312, "time": 0.65591}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.01, "memory": 3717, "data_time": 0.34291, "loss_rpn_cls": 0.04443, "loss_rpn_bbox": 0.02549, "loss_cls": 0.25146, "acc": 91.77197, "loss_bbox": 0.20489, "loss": 0.52626, "time": 0.66361}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.01, "memory": 3717, "data_time": 0.36148, "loss_rpn_cls": 0.04079, "loss_rpn_bbox": 0.02493, "loss_cls": 0.26411, "acc": 91.24756, "loss_bbox": 0.21963, "loss": 0.54946, "time": 0.68752}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.01, "memory": 3717, "data_time": 0.35891, "loss_rpn_cls": 0.04406, "loss_rpn_bbox": 0.02731, "loss_cls": 0.26824, "acc": 91.05811, "loss_bbox": 0.22501, "loss": 0.56462, "time": 0.66207}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.01, "memory": 3717, "data_time": 0.33018, "loss_rpn_cls": 0.0424, "loss_rpn_bbox": 0.02381, "loss_cls": 0.25361, "acc": 91.58887, "loss_bbox": 0.2112, "loss": 0.53102, "time": 0.66464}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.01, "memory": 3717, "data_time": 0.34344, "loss_rpn_cls": 0.04195, "loss_rpn_bbox": 0.02536, "loss_cls": 0.24896, "acc": 91.81836, "loss_bbox": 0.20219, "loss": 0.51845, "time": 0.66335}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.01, "memory": 3717, "data_time": 0.35204, "loss_rpn_cls": 0.04321, "loss_rpn_bbox": 0.02494, "loss_cls": 0.25362, "acc": 91.60205, "loss_bbox": 0.21169, "loss": 0.53345, "time": 0.6693}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.01, "memory": 3717, "data_time": 0.3435, "loss_rpn_cls": 0.04416, "loss_rpn_bbox": 0.02792, "loss_cls": 0.26045, "acc": 91.41846, "loss_bbox": 0.21322, "loss": 0.54576, "time": 0.6932}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.01, "memory": 3717, "data_time": 0.35003, "loss_rpn_cls": 0.04254, "loss_rpn_bbox": 0.02533, "loss_cls": 0.26435, "acc": 91.20898, "loss_bbox": 0.21959, "loss": 0.55182, "time": 0.66221}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.01, "memory": 3717, "data_time": 0.34985, "loss_rpn_cls": 0.04133, "loss_rpn_bbox": 0.02462, "loss_cls": 0.26882, "acc": 91.22217, "loss_bbox": 0.21778, "loss": 0.55255, "time": 0.67609}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.01, "memory": 3717, "data_time": 0.34235, "loss_rpn_cls": 0.04402, "loss_rpn_bbox": 0.02552, "loss_cls": 0.24221, "acc": 92.03271, "loss_bbox": 0.19955, "loss": 0.5113, "time": 0.65903}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.01, "memory": 3717, "data_time": 0.35177, "loss_rpn_cls": 0.04291, "loss_rpn_bbox": 0.02393, "loss_cls": 0.24114, "acc": 92.15723, "loss_bbox": 0.19106, "loss": 0.49905, "time": 0.66771}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.01, "memory": 3717, "data_time": 0.34282, "loss_rpn_cls": 0.04576, "loss_rpn_bbox": 0.02474, "loss_cls": 0.24465, "acc": 91.90918, "loss_bbox": 0.20024, "loss": 0.5154, "time": 0.65976}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.01, "memory": 3717, "data_time": 0.34862, "loss_rpn_cls": 0.04265, "loss_rpn_bbox": 0.02441, "loss_cls": 0.24326, "acc": 91.99219, "loss_bbox": 0.20387, "loss": 0.51419, "time": 0.67472}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.01, "memory": 3717, "data_time": 0.3486, "loss_rpn_cls": 0.04208, "loss_rpn_bbox": 0.02605, "loss_cls": 0.25429, "acc": 91.41211, "loss_bbox": 0.2171, "loss": 0.53952, "time": 0.65953}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.01, "memory": 3717, "data_time": 0.34143, "loss_rpn_cls": 0.04403, "loss_rpn_bbox": 0.02647, "loss_cls": 0.2695, "acc": 90.99121, "loss_bbox": 0.22846, "loss": 0.56847, "time": 0.66515}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.01, "memory": 3717, "data_time": 0.36063, "loss_rpn_cls": 0.04951, "loss_rpn_bbox": 0.02779, "loss_cls": 0.26421, "acc": 91.26514, "loss_bbox": 0.22117, "loss": 0.56267, "time": 0.67482}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.01, "memory": 3717, "data_time": 0.35521, "loss_rpn_cls": 0.03921, "loss_rpn_bbox": 0.02571, "loss_cls": 0.25597, "acc": 91.39697, "loss_bbox": 0.21555, "loss": 0.53644, "time": 0.66024}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.01, "memory": 3717, "data_time": 0.35918, "loss_rpn_cls": 0.04454, "loss_rpn_bbox": 0.02477, "loss_cls": 0.24598, "acc": 91.82666, "loss_bbox": 0.20459, "loss": 0.51988, "time": 0.6734}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.01, "memory": 3717, "data_time": 0.36677, "loss_rpn_cls": 0.04735, "loss_rpn_bbox": 0.02733, "loss_cls": 0.25075, "acc": 91.63721, "loss_bbox": 0.21194, "loss": 0.53737, "time": 0.67137}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.01, "memory": 3717, "data_time": 0.36898, "loss_rpn_cls": 0.04313, "loss_rpn_bbox": 0.0257, "loss_cls": 0.25717, "acc": 91.50244, "loss_bbox": 0.20463, "loss": 0.53064, "time": 0.67087}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.01, "memory": 3717, "data_time": 0.36263, "loss_rpn_cls": 0.04101, "loss_rpn_bbox": 0.02502, "loss_cls": 0.24116, "acc": 92.13672, "loss_bbox": 0.19533, "loss": 0.50251, "time": 0.6712}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.01, "memory": 3717, "data_time": 0.35055, "loss_rpn_cls": 0.04344, "loss_rpn_bbox": 0.02567, "loss_cls": 0.26213, "acc": 91.48047, "loss_bbox": 0.20468, "loss": 0.53592, "time": 0.6668}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.01, "memory": 3717, "data_time": 0.35146, "loss_rpn_cls": 0.04134, "loss_rpn_bbox": 0.02499, "loss_cls": 0.26598, "acc": 91.11963, "loss_bbox": 0.21971, "loss": 0.55201, "time": 0.67333}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.01, "memory": 3717, "data_time": 0.3621, "loss_rpn_cls": 0.04275, "loss_rpn_bbox": 0.02569, "loss_cls": 0.25494, "acc": 91.55273, "loss_bbox": 0.20701, "loss": 0.53039, "time": 0.66681}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.01, "memory": 3717, "data_time": 0.35445, "loss_rpn_cls": 0.0429, "loss_rpn_bbox": 0.02623, "loss_cls": 0.24901, "acc": 91.81348, "loss_bbox": 0.206, "loss": 0.52414, "time": 0.66151}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.01, "memory": 3717, "data_time": 0.33661, "loss_rpn_cls": 0.04002, "loss_rpn_bbox": 0.02595, "loss_cls": 0.26114, "acc": 91.28223, "loss_bbox": 0.218, "loss": 0.54512, "time": 0.65299}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.01, "memory": 3717, "data_time": 0.35783, "loss_rpn_cls": 0.04573, "loss_rpn_bbox": 0.0255, "loss_cls": 0.24821, "acc": 91.64893, "loss_bbox": 0.20904, "loss": 0.52848, "time": 0.68087}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.01, "memory": 3717, "data_time": 0.36415, "loss_rpn_cls": 0.04108, "loss_rpn_bbox": 0.02457, "loss_cls": 0.2563, "acc": 91.54395, "loss_bbox": 0.20177, "loss": 0.52371, "time": 0.66341}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.01, "memory": 3717, "data_time": 0.36079, "loss_rpn_cls": 0.04215, "loss_rpn_bbox": 0.02496, "loss_cls": 0.25153, "acc": 91.8501, "loss_bbox": 0.20044, "loss": 0.51909, "time": 0.67189}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.01, "memory": 3717, "data_time": 0.34698, "loss_rpn_cls": 0.04466, "loss_rpn_bbox": 0.02519, "loss_cls": 0.26008, "acc": 91.51074, "loss_bbox": 0.20584, "loss": 0.53577, "time": 0.65898}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.01, "memory": 3717, "data_time": 0.36382, "loss_rpn_cls": 0.04138, "loss_rpn_bbox": 0.02398, "loss_cls": 0.24744, "acc": 91.74902, "loss_bbox": 0.20381, "loss": 0.51661, "time": 0.66295}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.01, "memory": 3717, "data_time": 0.35622, "loss_rpn_cls": 0.03994, "loss_rpn_bbox": 0.02286, "loss_cls": 0.25512, "acc": 91.57471, "loss_bbox": 0.20762, "loss": 0.52554, "time": 0.65917}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.01, "memory": 3717, "data_time": 0.35633, "loss_rpn_cls": 0.0445, "loss_rpn_bbox": 0.02384, "loss_cls": 0.25732, "acc": 91.42383, "loss_bbox": 0.21009, "loss": 0.53575, "time": 0.66509}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.01, "memory": 3717, "data_time": 0.34613, "loss_rpn_cls": 0.03951, "loss_rpn_bbox": 0.02359, "loss_cls": 0.25934, "acc": 91.45557, "loss_bbox": 0.20917, "loss": 0.5316, "time": 0.66309}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.01, "memory": 3717, "data_time": 0.36352, "loss_rpn_cls": 0.04112, "loss_rpn_bbox": 0.02376, "loss_cls": 0.24755, "acc": 91.73535, "loss_bbox": 0.20941, "loss": 0.52184, "time": 0.66694}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.01, "memory": 3717, "data_time": 0.35572, "loss_rpn_cls": 0.04238, "loss_rpn_bbox": 0.02524, "loss_cls": 0.2698, "acc": 91.04785, "loss_bbox": 0.22319, "loss": 0.56061, "time": 0.66033}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.01, "memory": 3717, "data_time": 0.35391, "loss_rpn_cls": 0.0427, "loss_rpn_bbox": 0.02351, "loss_cls": 0.26024, "acc": 91.36133, "loss_bbox": 0.20549, "loss": 0.53195, "time": 0.66814}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.01, "memory": 3717, "data_time": 0.34793, "loss_rpn_cls": 0.03858, "loss_rpn_bbox": 0.02473, "loss_cls": 0.25477, "acc": 91.26172, "loss_bbox": 0.21609, "loss": 0.53417, "time": 0.65548}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.01, "memory": 3717, "data_time": 0.34809, "loss_rpn_cls": 0.04389, "loss_rpn_bbox": 0.02612, "loss_cls": 0.24208, "acc": 91.76611, "loss_bbox": 0.21296, "loss": 0.52505, "time": 0.66269}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.01, "memory": 3717, "data_time": 0.37674, "loss_rpn_cls": 0.04495, "loss_rpn_bbox": 0.02672, "loss_cls": 0.25158, "acc": 91.33105, "loss_bbox": 0.21511, "loss": 0.53837, "time": 0.69182}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.01, "memory": 3717, "data_time": 0.42383, "loss_rpn_cls": 0.03825, "loss_rpn_bbox": 0.02279, "loss_cls": 0.24331, "acc": 91.82275, "loss_bbox": 0.20244, "loss": 0.50679, "time": 0.74672}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.01, "memory": 3717, "data_time": 0.4344, "loss_rpn_cls": 0.04252, "loss_rpn_bbox": 0.02387, "loss_cls": 0.25031, "acc": 91.66504, "loss_bbox": 0.20834, "loss": 0.52503, "time": 0.7536}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.01, "memory": 3717, "data_time": 0.43047, "loss_rpn_cls": 0.03827, "loss_rpn_bbox": 0.02383, "loss_cls": 0.2475, "acc": 91.89307, "loss_bbox": 0.20658, "loss": 0.51618, "time": 0.74393}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 0.01, "memory": 3717, "data_time": 0.42974, "loss_rpn_cls": 0.04181, "loss_rpn_bbox": 0.02441, "loss_cls": 0.24338, "acc": 92.01025, "loss_bbox": 0.20361, "loss": 0.51321, "time": 0.74913}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 0.01, "memory": 3717, "data_time": 0.35507, "loss_rpn_cls": 0.04574, "loss_rpn_bbox": 0.02608, "loss_cls": 0.26794, "acc": 91.14062, "loss_bbox": 0.22303, "loss": 0.56279, "time": 0.65743}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 0.01, "memory": 3717, "data_time": 0.35205, "loss_rpn_cls": 0.0412, "loss_rpn_bbox": 0.02627, "loss_cls": 0.25195, "acc": 91.479, "loss_bbox": 0.21669, "loss": 0.53611, "time": 0.65901}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 0.01, "memory": 3717, "data_time": 0.34705, "loss_rpn_cls": 0.04404, "loss_rpn_bbox": 0.02795, "loss_cls": 0.26031, "acc": 91.38574, "loss_bbox": 0.2091, "loss": 0.5414, "time": 0.65715}
{"mode": "train", "epoch": 2, "iter": 3000, "lr": 0.01, "memory": 3717, "data_time": 0.34343, "loss_rpn_cls": 0.03421, "loss_rpn_bbox": 0.02234, "loss_cls": 0.24759, "acc": 91.85254, "loss_bbox": 0.19935, "loss": 0.50349, "time": 0.66054}
{"mode": "train", "epoch": 2, "iter": 3050, "lr": 0.01, "memory": 3717, "data_time": 0.34208, "loss_rpn_cls": 0.03916, "loss_rpn_bbox": 0.02338, "loss_cls": 0.25398, "acc": 91.55615, "loss_bbox": 0.20886, "loss": 0.52539, "time": 0.66362}
{"mode": "train", "epoch": 2, "iter": 3100, "lr": 0.01, "memory": 3717, "data_time": 0.34261, "loss_rpn_cls": 0.041, "loss_rpn_bbox": 0.02437, "loss_cls": 0.25054, "acc": 91.65723, "loss_bbox": 0.20626, "loss": 0.52218, "time": 0.66014}
{"mode": "train", "epoch": 2, "iter": 3150, "lr": 0.01, "memory": 3717, "data_time": 0.34078, "loss_rpn_cls": 0.04062, "loss_rpn_bbox": 0.02314, "loss_cls": 0.24014, "acc": 92.04834, "loss_bbox": 0.19517, "loss": 0.49908, "time": 0.64891}
{"mode": "train", "epoch": 2, "iter": 3200, "lr": 0.01, "memory": 3717, "data_time": 0.35427, "loss_rpn_cls": 0.04233, "loss_rpn_bbox": 0.02647, "loss_cls": 0.24601, "acc": 91.61768, "loss_bbox": 0.21719, "loss": 0.53201, "time": 0.6528}
{"mode": "train", "epoch": 2, "iter": 3250, "lr": 0.01, "memory": 3717, "data_time": 0.35088, "loss_rpn_cls": 0.03721, "loss_rpn_bbox": 0.02513, "loss_cls": 0.2472, "acc": 91.7915, "loss_bbox": 0.20028, "loss": 0.50981, "time": 0.65694}
{"mode": "train", "epoch": 2, "iter": 3300, "lr": 0.01, "memory": 3717, "data_time": 0.3576, "loss_rpn_cls": 0.04077, "loss_rpn_bbox": 0.02344, "loss_cls": 0.24353, "acc": 91.95703, "loss_bbox": 0.19208, "loss": 0.49982, "time": 0.66038}
{"mode": "train", "epoch": 2, "iter": 3350, "lr": 0.01, "memory": 3717, "data_time": 0.34693, "loss_rpn_cls": 0.04385, "loss_rpn_bbox": 0.02429, "loss_cls": 0.24603, "acc": 91.75732, "loss_bbox": 0.20545, "loss": 0.51962, "time": 0.66023}
{"mode": "train", "epoch": 2, "iter": 3400, "lr": 0.01, "memory": 3717, "data_time": 0.34422, "loss_rpn_cls": 0.04129, "loss_rpn_bbox": 0.02458, "loss_cls": 0.24721, "acc": 91.80615, "loss_bbox": 0.20403, "loss": 0.5171, "time": 0.66247}
{"mode": "train", "epoch": 2, "iter": 3450, "lr": 0.01, "memory": 3717, "data_time": 0.40271, "loss_rpn_cls": 0.03835, "loss_rpn_bbox": 0.02385, "loss_cls": 0.24972, "acc": 91.57031, "loss_bbox": 0.20687, "loss": 0.51879, "time": 0.72503}
{"mode": "train", "epoch": 2, "iter": 3500, "lr": 0.01, "memory": 3717, "data_time": 0.43158, "loss_rpn_cls": 0.03888, "loss_rpn_bbox": 0.02126, "loss_cls": 0.22963, "acc": 92.35498, "loss_bbox": 0.18815, "loss": 0.47792, "time": 0.75981}
{"mode": "train", "epoch": 2, "iter": 3550, "lr": 0.01, "memory": 3717, "data_time": 0.42816, "loss_rpn_cls": 0.0395, "loss_rpn_bbox": 0.02455, "loss_cls": 0.25247, "acc": 91.61914, "loss_bbox": 0.20989, "loss": 0.52642, "time": 0.74675}
{"mode": "train", "epoch": 2, "iter": 3600, "lr": 0.01, "memory": 3717, "data_time": 0.43566, "loss_rpn_cls": 0.03786, "loss_rpn_bbox": 0.02337, "loss_cls": 0.26121, "acc": 91.10889, "loss_bbox": 0.22896, "loss": 0.55141, "time": 0.76016}
{"mode": "train", "epoch": 2, "iter": 3650, "lr": 0.01, "memory": 3717, "data_time": 0.38033, "loss_rpn_cls": 0.03786, "loss_rpn_bbox": 0.0239, "loss_cls": 0.26147, "acc": 91.48535, "loss_bbox": 0.21038, "loss": 0.5336, "time": 0.6904}
{"mode": "train", "epoch": 2, "iter": 3700, "lr": 0.01, "memory": 3717, "data_time": 0.34013, "loss_rpn_cls": 0.03794, "loss_rpn_bbox": 0.02493, "loss_cls": 0.25587, "acc": 91.48877, "loss_bbox": 0.21486, "loss": 0.53359, "time": 0.66073}
{"mode": "train", "epoch": 2, "iter": 3750, "lr": 0.01, "memory": 3717, "data_time": 0.34457, "loss_rpn_cls": 0.04161, "loss_rpn_bbox": 0.02393, "loss_cls": 0.25231, "acc": 91.49854, "loss_bbox": 0.21096, "loss": 0.5288, "time": 0.66329}
{"mode": "val", "epoch": 2, "iter": 3750, "lr": 0.01, "bbox_mAP": 0.179, "bbox_mAP_50": 0.355, "bbox_mAP_75": 0.159, "bbox_mAP_s": -1.0, "bbox_mAP_m": 0.048, "bbox_mAP_l": 0.188, "bbox_mAP_copypaste": "0.179 0.355 0.159 -1.000 0.048 0.188"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01, "memory": 3717, "data_time": 0.40712, "loss_rpn_cls": 0.03421, "loss_rpn_bbox": 0.02341, "loss_cls": 0.24576, "acc": 91.62549, "loss_bbox": 0.20526, "loss": 0.50865, "time": 0.70946}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01, "memory": 3717, "data_time": 0.36565, "loss_rpn_cls": 0.03702, "loss_rpn_bbox": 0.02337, "loss_cls": 0.23941, "acc": 91.75928, "loss_bbox": 0.202, "loss": 0.5018, "time": 0.66141}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.01, "memory": 3717, "data_time": 0.36477, "loss_rpn_cls": 0.03859, "loss_rpn_bbox": 0.0229, "loss_cls": 0.23625, "acc": 92.16797, "loss_bbox": 0.19363, "loss": 0.49138, "time": 0.66505}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.01, "memory": 3717, "data_time": 0.36773, "loss_rpn_cls": 0.04155, "loss_rpn_bbox": 0.023, "loss_cls": 0.23838, "acc": 91.94238, "loss_bbox": 0.19696, "loss": 0.49989, "time": 0.66723}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.01, "memory": 3717, "data_time": 0.36332, "loss_rpn_cls": 0.0354, "loss_rpn_bbox": 0.023, "loss_cls": 0.24657, "acc": 91.82861, "loss_bbox": 0.19923, "loss": 0.5042, "time": 0.66328}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.01, "memory": 3717, "data_time": 0.37187, "loss_rpn_cls": 0.03567, "loss_rpn_bbox": 0.0213, "loss_cls": 0.23055, "acc": 92.26025, "loss_bbox": 0.19675, "loss": 0.48427, "time": 0.66657}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.01, "memory": 3717, "data_time": 0.36376, "loss_rpn_cls": 0.03877, "loss_rpn_bbox": 0.0224, "loss_cls": 0.22959, "acc": 92.17822, "loss_bbox": 0.19132, "loss": 0.48209, "time": 0.66586}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.01, "memory": 3717, "data_time": 0.36399, "loss_rpn_cls": 0.0349, "loss_rpn_bbox": 0.02209, "loss_cls": 0.2436, "acc": 91.67139, "loss_bbox": 0.20258, "loss": 0.50316, "time": 0.66491}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.01, "memory": 3717, "data_time": 0.37458, "loss_rpn_cls": 0.03986, "loss_rpn_bbox": 0.02403, "loss_cls": 0.24538, "acc": 91.6333, "loss_bbox": 0.2038, "loss": 0.51306, "time": 0.66645}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.01, "memory": 3717, "data_time": 0.35871, "loss_rpn_cls": 0.03984, "loss_rpn_bbox": 0.02452, "loss_cls": 0.24286, "acc": 91.88184, "loss_bbox": 0.20509, "loss": 0.51232, "time": 0.66445}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.01, "memory": 3717, "data_time": 0.36008, "loss_rpn_cls": 0.03551, "loss_rpn_bbox": 0.0233, "loss_cls": 0.25061, "acc": 91.41797, "loss_bbox": 0.20779, "loss": 0.51721, "time": 0.65826}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.01, "memory": 3717, "data_time": 0.37152, "loss_rpn_cls": 0.0412, "loss_rpn_bbox": 0.0254, "loss_cls": 0.25434, "acc": 91.36523, "loss_bbox": 0.21076, "loss": 0.5317, "time": 0.66198}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.01, "memory": 3717, "data_time": 0.36012, "loss_rpn_cls": 0.03838, "loss_rpn_bbox": 0.02606, "loss_cls": 0.25879, "acc": 91.15137, "loss_bbox": 0.22092, "loss": 0.54416, "time": 0.66617}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.01, "memory": 3717, "data_time": 0.3587, "loss_rpn_cls": 0.03407, "loss_rpn_bbox": 0.02176, "loss_cls": 0.22865, "acc": 92.00977, "loss_bbox": 0.19152, "loss": 0.476, "time": 0.65686}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.01, "memory": 3717, "data_time": 0.36328, "loss_rpn_cls": 0.036, "loss_rpn_bbox": 0.0236, "loss_cls": 0.25228, "acc": 91.42041, "loss_bbox": 0.21076, "loss": 0.52265, "time": 0.6627}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.01, "memory": 3717, "data_time": 0.36538, "loss_rpn_cls": 0.03855, "loss_rpn_bbox": 0.02442, "loss_cls": 0.2502, "acc": 91.56543, "loss_bbox": 0.20145, "loss": 0.51461, "time": 0.65896}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.01, "memory": 3717, "data_time": 0.35838, "loss_rpn_cls": 0.03714, "loss_rpn_bbox": 0.02413, "loss_cls": 0.24405, "acc": 91.76758, "loss_bbox": 0.20341, "loss": 0.50873, "time": 0.66174}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.01, "memory": 3717, "data_time": 0.36842, "loss_rpn_cls": 0.03831, "loss_rpn_bbox": 0.02499, "loss_cls": 0.23516, "acc": 91.88672, "loss_bbox": 0.20016, "loss": 0.49861, "time": 0.66969}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.01, "memory": 3717, "data_time": 0.36058, "loss_rpn_cls": 0.03519, "loss_rpn_bbox": 0.02454, "loss_cls": 0.24973, "acc": 91.44678, "loss_bbox": 0.20589, "loss": 0.51535, "time": 0.66306}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.01, "memory": 3717, "data_time": 0.36403, "loss_rpn_cls": 0.03717, "loss_rpn_bbox": 0.02454, "loss_cls": 0.24522, "acc": 91.61328, "loss_bbox": 0.2138, "loss": 0.52073, "time": 0.662}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.01, "memory": 3717, "data_time": 0.35224, "loss_rpn_cls": 0.03743, "loss_rpn_bbox": 0.02472, "loss_cls": 0.25436, "acc": 91.12012, "loss_bbox": 0.21822, "loss": 0.53472, "time": 0.66616}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.01, "memory": 3717, "data_time": 0.36891, "loss_rpn_cls": 0.03729, "loss_rpn_bbox": 0.02444, "loss_cls": 0.25974, "acc": 91.3501, "loss_bbox": 0.21384, "loss": 0.53531, "time": 0.66344}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.01, "memory": 3717, "data_time": 0.35741, "loss_rpn_cls": 0.03721, "loss_rpn_bbox": 0.02394, "loss_cls": 0.24452, "acc": 91.86963, "loss_bbox": 0.20193, "loss": 0.50761, "time": 0.66818}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.01, "memory": 3717, "data_time": 0.35167, "loss_rpn_cls": 0.03866, "loss_rpn_bbox": 0.026, "loss_cls": 0.24921, "acc": 91.52783, "loss_bbox": 0.2124, "loss": 0.52627, "time": 0.66501}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.01, "memory": 3717, "data_time": 0.35097, "loss_rpn_cls": 0.03426, "loss_rpn_bbox": 0.02271, "loss_cls": 0.24373, "acc": 91.6123, "loss_bbox": 0.20473, "loss": 0.50543, "time": 0.66646}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.01, "memory": 3717, "data_time": 0.35285, "loss_rpn_cls": 0.03499, "loss_rpn_bbox": 0.02267, "loss_cls": 0.24542, "acc": 91.77197, "loss_bbox": 0.2021, "loss": 0.50518, "time": 0.6598}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.01, "memory": 3717, "data_time": 0.35796, "loss_rpn_cls": 0.03889, "loss_rpn_bbox": 0.02591, "loss_cls": 0.24749, "acc": 91.48389, "loss_bbox": 0.2119, "loss": 0.52418, "time": 0.661}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.01, "memory": 3717, "data_time": 0.36038, "loss_rpn_cls": 0.03596, "loss_rpn_bbox": 0.02297, "loss_cls": 0.24631, "acc": 91.75439, "loss_bbox": 0.19447, "loss": 0.49971, "time": 0.66414}
