{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.4.0\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained=\n    '../mmclassification/work_dirs/tct_full_resnet50_b32x8/epoch_50_pretrained.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=10,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nannotations_root = '../data/TCT_30000/'\nimage_root = '../data/TCT_30000/'\nclasses = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n           'dysbacteriosis_herpes_act', 'ec')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/train30000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/val10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/test10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/tct_full_e50'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "tct_full_e50.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 3716, "data_time": 0.49719, "loss_rpn_cls": 0.55728, "loss_rpn_bbox": 0.04403, "loss_cls": 0.696, "acc": 85.0835, "loss_bbox": 0.0478, "loss": 1.34511, "time": 0.84099}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 3720, "data_time": 0.45977, "loss_rpn_cls": 0.2225, "loss_rpn_bbox": 0.04607, "loss_cls": 0.1781, "acc": 97.80859, "loss_bbox": 0.0636, "loss": 0.51026, "time": 0.77999}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 3720, "data_time": 0.44801, "loss_rpn_cls": 0.17544, "loss_rpn_bbox": 0.04246, "loss_cls": 0.22871, "acc": 96.09766, "loss_bbox": 0.12733, "loss": 0.57393, "time": 0.78613}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 3720, "data_time": 0.44619, "loss_rpn_cls": 0.15548, "loss_rpn_bbox": 0.04063, "loss_cls": 0.32409, "acc": 94.03809, "loss_bbox": 0.21134, "loss": 0.73155, "time": 0.7764}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 3720, "data_time": 0.43508, "loss_rpn_cls": 0.12279, "loss_rpn_bbox": 0.04138, "loss_cls": 0.32897, "acc": 93.21289, "loss_bbox": 0.22966, "loss": 0.7228, "time": 0.76716}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 3720, "data_time": 0.35583, "loss_rpn_cls": 0.11515, "loss_rpn_bbox": 0.03998, "loss_cls": 0.31528, "acc": 92.95801, "loss_bbox": 0.2222, "loss": 0.69262, "time": 0.6596}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 3720, "data_time": 0.34313, "loss_rpn_cls": 0.09584, "loss_rpn_bbox": 0.03596, "loss_cls": 0.33548, "acc": 91.96826, "loss_bbox": 0.24802, "loss": 0.7153, "time": 0.66827}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 3720, "data_time": 0.3663, "loss_rpn_cls": 0.08474, "loss_rpn_bbox": 0.03559, "loss_cls": 0.32085, "acc": 91.7168, "loss_bbox": 0.2511, "loss": 0.69228, "time": 0.67722}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 3720, "data_time": 0.35562, "loss_rpn_cls": 0.09025, "loss_rpn_bbox": 0.03626, "loss_cls": 0.37064, "acc": 91.35742, "loss_bbox": 0.2489, "loss": 0.74604, "time": 0.67752}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00998, "memory": 3720, "data_time": 0.37015, "loss_rpn_cls": 0.08982, "loss_rpn_bbox": 0.0383, "loss_cls": 0.36662, "acc": 90.68115, "loss_bbox": 0.26306, "loss": 0.7578, "time": 0.67505}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 3720, "data_time": 0.36672, "loss_rpn_cls": 0.07363, "loss_rpn_bbox": 0.0331, "loss_cls": 0.33475, "acc": 91.14307, "loss_bbox": 0.25227, "loss": 0.69375, "time": 0.68073}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.01, "memory": 3720, "data_time": 0.36771, "loss_rpn_cls": 0.07576, "loss_rpn_bbox": 0.03303, "loss_cls": 0.33609, "acc": 91.19385, "loss_bbox": 0.24458, "loss": 0.68946, "time": 0.68027}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.01, "memory": 3720, "data_time": 0.35944, "loss_rpn_cls": 0.07262, "loss_rpn_bbox": 0.03329, "loss_cls": 0.34687, "acc": 90.30957, "loss_bbox": 0.268, "loss": 0.72077, "time": 0.67478}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.01, "memory": 3720, "data_time": 0.38164, "loss_rpn_cls": 0.07877, "loss_rpn_bbox": 0.03253, "loss_cls": 0.32451, "acc": 91.17725, "loss_bbox": 0.24198, "loss": 0.67779, "time": 0.67973}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.01, "memory": 3720, "data_time": 0.36507, "loss_rpn_cls": 0.07695, "loss_rpn_bbox": 0.03391, "loss_cls": 0.33009, "acc": 91.01758, "loss_bbox": 0.24215, "loss": 0.6831, "time": 0.6787}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.01, "memory": 3720, "data_time": 0.36289, "loss_rpn_cls": 0.06979, "loss_rpn_bbox": 0.03194, "loss_cls": 0.34027, "acc": 90.20264, "loss_bbox": 0.26616, "loss": 0.70816, "time": 0.6733}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.01, "memory": 3720, "data_time": 0.35758, "loss_rpn_cls": 0.06736, "loss_rpn_bbox": 0.02908, "loss_cls": 0.34473, "acc": 90.25586, "loss_bbox": 0.26103, "loss": 0.7022, "time": 0.68075}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.01, "memory": 3720, "data_time": 0.36494, "loss_rpn_cls": 0.07564, "loss_rpn_bbox": 0.03345, "loss_cls": 0.3447, "acc": 90.38379, "loss_bbox": 0.2573, "loss": 0.7111, "time": 0.67994}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.01, "memory": 3720, "data_time": 0.34987, "loss_rpn_cls": 0.06946, "loss_rpn_bbox": 0.03139, "loss_cls": 0.33268, "acc": 90.48584, "loss_bbox": 0.25507, "loss": 0.68861, "time": 0.67737}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.01, "memory": 3720, "data_time": 0.35053, "loss_rpn_cls": 0.06326, "loss_rpn_bbox": 0.03256, "loss_cls": 0.32733, "acc": 90.4292, "loss_bbox": 0.25609, "loss": 0.67925, "time": 0.67338}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.01, "memory": 3720, "data_time": 0.35306, "loss_rpn_cls": 0.06445, "loss_rpn_bbox": 0.03108, "loss_cls": 0.32823, "acc": 90.25732, "loss_bbox": 0.26628, "loss": 0.69004, "time": 0.67863}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.01, "memory": 3720, "data_time": 0.36108, "loss_rpn_cls": 0.06383, "loss_rpn_bbox": 0.02993, "loss_cls": 0.30624, "acc": 90.79785, "loss_bbox": 0.24636, "loss": 0.64635, "time": 0.68921}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.01, "memory": 3720, "data_time": 0.36002, "loss_rpn_cls": 0.0651, "loss_rpn_bbox": 0.03293, "loss_cls": 0.32969, "acc": 90.71094, "loss_bbox": 0.2429, "loss": 0.67061, "time": 0.67745}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.01, "memory": 3720, "data_time": 0.35662, "loss_rpn_cls": 0.05946, "loss_rpn_bbox": 0.02906, "loss_cls": 0.32289, "acc": 90.3833, "loss_bbox": 0.25261, "loss": 0.66402, "time": 0.67667}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.01, "memory": 3720, "data_time": 0.36575, "loss_rpn_cls": 0.06469, "loss_rpn_bbox": 0.02957, "loss_cls": 0.31843, "acc": 90.67139, "loss_bbox": 0.24328, "loss": 0.65596, "time": 0.67106}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.01, "memory": 3720, "data_time": 0.37546, "loss_rpn_cls": 0.06342, "loss_rpn_bbox": 0.03028, "loss_cls": 0.29989, "acc": 90.96289, "loss_bbox": 0.23852, "loss": 0.63212, "time": 0.67834}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.01, "memory": 3720, "data_time": 0.3668, "loss_rpn_cls": 0.05746, "loss_rpn_bbox": 0.02725, "loss_cls": 0.31573, "acc": 90.53906, "loss_bbox": 0.24016, "loss": 0.6406, "time": 0.6814}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.01, "memory": 3720, "data_time": 0.38452, "loss_rpn_cls": 0.06048, "loss_rpn_bbox": 0.03041, "loss_cls": 0.3135, "acc": 90.646, "loss_bbox": 0.2392, "loss": 0.64359, "time": 0.69883}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.01, "memory": 3720, "data_time": 0.35063, "loss_rpn_cls": 0.06144, "loss_rpn_bbox": 0.02926, "loss_cls": 0.2879, "acc": 91.36865, "loss_bbox": 0.2238, "loss": 0.6024, "time": 0.68849}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.01, "memory": 3720, "data_time": 0.36892, "loss_rpn_cls": 0.06217, "loss_rpn_bbox": 0.03062, "loss_cls": 0.31361, "acc": 90.40625, "loss_bbox": 0.24219, "loss": 0.64859, "time": 0.681}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.01, "memory": 3720, "data_time": 0.37104, "loss_rpn_cls": 0.05732, "loss_rpn_bbox": 0.02819, "loss_cls": 0.31336, "acc": 90.44775, "loss_bbox": 0.23691, "loss": 0.63578, "time": 0.67977}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.01, "memory": 3720, "data_time": 0.38681, "loss_rpn_cls": 0.05861, "loss_rpn_bbox": 0.03053, "loss_cls": 0.32944, "acc": 89.86133, "loss_bbox": 0.25658, "loss": 0.67515, "time": 0.69125}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.01, "memory": 3720, "data_time": 0.37228, "loss_rpn_cls": 0.06135, "loss_rpn_bbox": 0.02935, "loss_cls": 0.30763, "acc": 90.6543, "loss_bbox": 0.2373, "loss": 0.63563, "time": 0.68128}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.01, "memory": 3720, "data_time": 0.36075, "loss_rpn_cls": 0.05784, "loss_rpn_bbox": 0.02961, "loss_cls": 0.32425, "acc": 90.08594, "loss_bbox": 0.25922, "loss": 0.67092, "time": 0.67993}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.01, "memory": 3720, "data_time": 0.37957, "loss_rpn_cls": 0.06225, "loss_rpn_bbox": 0.03021, "loss_cls": 0.29598, "acc": 90.98535, "loss_bbox": 0.23451, "loss": 0.62294, "time": 1.16094}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.01, "memory": 3720, "data_time": 0.36235, "loss_rpn_cls": 0.05887, "loss_rpn_bbox": 0.03051, "loss_cls": 0.32225, "acc": 90.21973, "loss_bbox": 0.24373, "loss": 0.65537, "time": 1.53611}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.01, "memory": 3720, "data_time": 0.36734, "loss_rpn_cls": 0.05716, "loss_rpn_bbox": 0.02811, "loss_cls": 0.30912, "acc": 90.54688, "loss_bbox": 0.236, "loss": 0.63038, "time": 1.51984}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.01, "memory": 3720, "data_time": 0.36547, "loss_rpn_cls": 0.0549, "loss_rpn_bbox": 0.02532, "loss_cls": 0.28654, "acc": 91.2041, "loss_bbox": 0.22394, "loss": 0.59069, "time": 1.50812}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.01, "memory": 3720, "data_time": 0.35167, "loss_rpn_cls": 0.05508, "loss_rpn_bbox": 0.0272, "loss_cls": 0.30543, "acc": 90.71338, "loss_bbox": 0.23198, "loss": 0.6197, "time": 1.53208}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.01, "memory": 3720, "data_time": 0.37562, "loss_rpn_cls": 0.05817, "loss_rpn_bbox": 0.0286, "loss_cls": 0.30254, "acc": 90.61621, "loss_bbox": 0.2369, "loss": 0.62622, "time": 1.51551}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.01, "memory": 3720, "data_time": 0.35872, "loss_rpn_cls": 0.05379, "loss_rpn_bbox": 0.02778, "loss_cls": 0.28502, "acc": 91.12598, "loss_bbox": 0.22674, "loss": 0.59334, "time": 1.52903}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.01, "memory": 3720, "data_time": 0.36316, "loss_rpn_cls": 0.05655, "loss_rpn_bbox": 0.02846, "loss_cls": 0.273, "acc": 91.35205, "loss_bbox": 0.22201, "loss": 0.58003, "time": 1.52176}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.01, "memory": 3720, "data_time": 0.36265, "loss_rpn_cls": 0.05694, "loss_rpn_bbox": 0.02908, "loss_cls": 0.29627, "acc": 90.64502, "loss_bbox": 0.24196, "loss": 0.62425, "time": 1.53532}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.01, "memory": 3720, "data_time": 0.35599, "loss_rpn_cls": 0.05423, "loss_rpn_bbox": 0.02823, "loss_cls": 0.30078, "acc": 90.54053, "loss_bbox": 0.24338, "loss": 0.62662, "time": 1.53745}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.01, "memory": 3720, "data_time": 0.36497, "loss_rpn_cls": 0.0539, "loss_rpn_bbox": 0.02902, "loss_cls": 0.29937, "acc": 90.61865, "loss_bbox": 0.24109, "loss": 0.62339, "time": 1.53842}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.01, "memory": 3720, "data_time": 0.37248, "loss_rpn_cls": 0.05652, "loss_rpn_bbox": 0.02795, "loss_cls": 0.2998, "acc": 90.98193, "loss_bbox": 0.2281, "loss": 0.61238, "time": 1.52752}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.01, "memory": 3720, "data_time": 0.35278, "loss_rpn_cls": 0.05942, "loss_rpn_bbox": 0.02858, "loss_cls": 0.30616, "acc": 90.41797, "loss_bbox": 0.23426, "loss": 0.62842, "time": 1.52751}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.01, "memory": 3720, "data_time": 0.37039, "loss_rpn_cls": 0.05143, "loss_rpn_bbox": 0.02954, "loss_cls": 0.30058, "acc": 90.40186, "loss_bbox": 0.24628, "loss": 0.62782, "time": 1.52284}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.01, "memory": 3720, "data_time": 0.36136, "loss_rpn_cls": 0.05077, "loss_rpn_bbox": 0.02577, "loss_cls": 0.3017, "acc": 90.81494, "loss_bbox": 0.22606, "loss": 0.6043, "time": 1.5157}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.01, "memory": 3720, "data_time": 0.36182, "loss_rpn_cls": 0.05811, "loss_rpn_bbox": 0.02978, "loss_cls": 0.301, "acc": 90.39404, "loss_bbox": 0.2445, "loss": 0.63339, "time": 1.5324}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.01, "memory": 3720, "data_time": 0.36723, "loss_rpn_cls": 0.05682, "loss_rpn_bbox": 0.03119, "loss_cls": 0.30391, "acc": 90.28125, "loss_bbox": 0.24578, "loss": 0.63771, "time": 1.53005}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.01, "memory": 3720, "data_time": 0.37119, "loss_rpn_cls": 0.04967, "loss_rpn_bbox": 0.02589, "loss_cls": 0.29124, "acc": 90.95264, "loss_bbox": 0.22679, "loss": 0.5936, "time": 1.51681}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.01, "memory": 3720, "data_time": 0.35336, "loss_rpn_cls": 0.04938, "loss_rpn_bbox": 0.02638, "loss_cls": 0.27555, "acc": 91.08496, "loss_bbox": 0.2285, "loss": 0.57981, "time": 1.52353}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.01, "memory": 3720, "data_time": 0.3655, "loss_rpn_cls": 0.04941, "loss_rpn_bbox": 0.02667, "loss_cls": 0.28219, "acc": 91.13623, "loss_bbox": 0.23171, "loss": 0.58997, "time": 1.52927}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.01, "memory": 3720, "data_time": 0.36975, "loss_rpn_cls": 0.05192, "loss_rpn_bbox": 0.02698, "loss_cls": 0.26692, "acc": 91.4834, "loss_bbox": 0.21412, "loss": 0.55994, "time": 1.53929}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.01, "memory": 3720, "data_time": 0.38258, "loss_rpn_cls": 0.05384, "loss_rpn_bbox": 0.02711, "loss_cls": 0.27268, "acc": 91.5376, "loss_bbox": 0.21113, "loss": 0.56476, "time": 1.52964}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.01, "memory": 3720, "data_time": 0.37135, "loss_rpn_cls": 0.05023, "loss_rpn_bbox": 0.02687, "loss_cls": 0.2833, "acc": 90.82715, "loss_bbox": 0.22902, "loss": 0.58942, "time": 1.53417}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.01, "memory": 3720, "data_time": 0.36099, "loss_rpn_cls": 0.05145, "loss_rpn_bbox": 0.02959, "loss_cls": 0.29359, "acc": 90.71777, "loss_bbox": 0.23459, "loss": 0.60922, "time": 1.51677}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.01, "memory": 3720, "data_time": 0.36362, "loss_rpn_cls": 0.05405, "loss_rpn_bbox": 0.0254, "loss_cls": 0.28014, "acc": 91.11865, "loss_bbox": 0.21864, "loss": 0.57823, "time": 1.5154}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.01, "memory": 3720, "data_time": 0.35803, "loss_rpn_cls": 0.05485, "loss_rpn_bbox": 0.0262, "loss_cls": 0.29203, "acc": 90.77002, "loss_bbox": 0.2284, "loss": 0.60148, "time": 1.53143}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.01, "memory": 3720, "data_time": 0.3573, "loss_rpn_cls": 0.04868, "loss_rpn_bbox": 0.0265, "loss_cls": 0.28566, "acc": 90.83936, "loss_bbox": 0.22434, "loss": 0.58519, "time": 1.53587}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.01, "memory": 3720, "data_time": 0.37059, "loss_rpn_cls": 0.04888, "loss_rpn_bbox": 0.0279, "loss_cls": 0.28129, "acc": 90.81592, "loss_bbox": 0.22645, "loss": 0.58452, "time": 1.54644}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.01, "memory": 3720, "data_time": 0.36239, "loss_rpn_cls": 0.05093, "loss_rpn_bbox": 0.02565, "loss_cls": 0.29382, "acc": 90.66699, "loss_bbox": 0.23293, "loss": 0.60332, "time": 1.51286}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.01, "memory": 3720, "data_time": 0.364, "loss_rpn_cls": 0.05234, "loss_rpn_bbox": 0.02754, "loss_cls": 0.30001, "acc": 90.57324, "loss_bbox": 0.23681, "loss": 0.6167, "time": 1.53326}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.01, "memory": 3720, "data_time": 0.34233, "loss_rpn_cls": 0.04588, "loss_rpn_bbox": 0.02459, "loss_cls": 0.28171, "acc": 90.91895, "loss_bbox": 0.22711, "loss": 0.5793, "time": 1.5245}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.01, "memory": 3720, "data_time": 0.34957, "loss_rpn_cls": 0.05176, "loss_rpn_bbox": 0.02707, "loss_cls": 0.28773, "acc": 90.72266, "loss_bbox": 0.23135, "loss": 0.5979, "time": 1.53086}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.01, "memory": 3720, "data_time": 0.36748, "loss_rpn_cls": 0.04518, "loss_rpn_bbox": 0.02552, "loss_cls": 0.27224, "acc": 91.33984, "loss_bbox": 0.22281, "loss": 0.56575, "time": 1.52824}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.01, "memory": 3720, "data_time": 0.37409, "loss_rpn_cls": 0.0499, "loss_rpn_bbox": 0.02544, "loss_cls": 0.26421, "acc": 91.60449, "loss_bbox": 0.20607, "loss": 0.54562, "time": 1.52179}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.01, "memory": 3720, "data_time": 0.35762, "loss_rpn_cls": 0.05111, "loss_rpn_bbox": 0.02775, "loss_cls": 0.29507, "acc": 90.96045, "loss_bbox": 0.2255, "loss": 0.59943, "time": 1.52257}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.01, "memory": 3720, "data_time": 0.35631, "loss_rpn_cls": 0.05422, "loss_rpn_bbox": 0.02763, "loss_cls": 0.27385, "acc": 91.26318, "loss_bbox": 0.21872, "loss": 0.57441, "time": 1.52589}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.01, "memory": 3720, "data_time": 0.35918, "loss_rpn_cls": 0.04868, "loss_rpn_bbox": 0.02496, "loss_cls": 0.26845, "acc": 91.41992, "loss_bbox": 0.21913, "loss": 0.56122, "time": 1.52044}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.01, "memory": 3720, "data_time": 0.35342, "loss_rpn_cls": 0.04919, "loss_rpn_bbox": 0.0254, "loss_cls": 0.27058, "acc": 91.38867, "loss_bbox": 0.21729, "loss": 0.56246, "time": 1.51404}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.01, "memory": 3720, "data_time": 0.36156, "loss_rpn_cls": 0.04232, "loss_rpn_bbox": 0.02554, "loss_cls": 0.2751, "acc": 91.16406, "loss_bbox": 0.22537, "loss": 0.56833, "time": 1.51873}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.01, "memory": 3720, "data_time": 0.36796, "loss_rpn_cls": 0.0518, "loss_rpn_bbox": 0.02684, "loss_cls": 0.28011, "acc": 90.96436, "loss_bbox": 0.22798, "loss": 0.58672, "time": 1.51325}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.01, "memory": 3720, "data_time": 0.36809, "loss_rpn_cls": 0.04502, "loss_rpn_bbox": 0.02556, "loss_cls": 0.26625, "acc": 91.21875, "loss_bbox": 0.22394, "loss": 0.56078, "time": 1.5147}
{"mode": "val", "epoch": 1, "iter": 3750, "lr": 0.01, "bbox_mAP": 0.152, "bbox_mAP_50": 0.323, "bbox_mAP_75": 0.122, "bbox_mAP_s": -1.0, "bbox_mAP_m": 0.047, "bbox_mAP_l": 0.162, "bbox_mAP_copypaste": "0.152 0.323 0.122 -1.000 0.047 0.162"}
