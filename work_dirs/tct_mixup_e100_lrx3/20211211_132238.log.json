{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.4.0\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='../mmclassification/work_dirs/mixup/epoch_100_pretrained.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=10,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nannotations_root = '../data/TCT_30000/'\nimage_root = '../data/TCT_30000/'\nclasses = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n           'dysbacteriosis_herpes_act', 'ec')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/train30000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/val10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/test10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.03, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/tct_mixup_e100_lrx3'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "tct_mixup_e100_lrx3.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00297, "memory": 3718, "data_time": 0.519, "loss_rpn_cls": 0.44274, "loss_rpn_bbox": 0.04424, "loss_cls": 0.29306, "acc": 93.4209, "loss_bbox": 0.04396, "loss": 0.82401, "time": 1.18578}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00596, "memory": 3719, "data_time": 0.44161, "loss_rpn_cls": 0.1805, "loss_rpn_bbox": 0.04442, "loss_cls": 0.23258, "acc": 96.34668, "loss_bbox": 0.11949, "loss": 0.57698, "time": 0.97246}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00896, "memory": 3719, "data_time": 0.4226, "loss_rpn_cls": 0.13313, "loss_rpn_bbox": 0.0406, "loss_cls": 0.34957, "acc": 93.62061, "loss_bbox": 0.21972, "loss": 0.74302, "time": 0.8874}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.01196, "memory": 3719, "data_time": 0.40268, "loss_rpn_cls": 0.1043, "loss_rpn_bbox": 0.03878, "loss_cls": 0.38289, "acc": 92.3667, "loss_bbox": 0.24689, "loss": 0.77286, "time": 0.87638}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.01496, "memory": 3719, "data_time": 0.41131, "loss_rpn_cls": 0.09071, "loss_rpn_bbox": 0.03816, "loss_cls": 0.36081, "acc": 92.00391, "loss_bbox": 0.24189, "loss": 0.73157, "time": 0.90126}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01795, "memory": 3719, "data_time": 0.40155, "loss_rpn_cls": 0.08789, "loss_rpn_bbox": 0.03737, "loss_cls": 0.36497, "acc": 91.5542, "loss_bbox": 0.24994, "loss": 0.74017, "time": 1.04507}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.02095, "memory": 3726, "data_time": 0.40717, "loss_rpn_cls": 0.08522, "loss_rpn_bbox": 0.03462, "loss_cls": 0.38008, "acc": 91.26416, "loss_bbox": 0.25157, "loss": 0.75149, "time": 0.87858}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.02395, "memory": 3726, "data_time": 0.39722, "loss_rpn_cls": 0.0737, "loss_rpn_bbox": 0.03467, "loss_cls": 0.35684, "acc": 91.16113, "loss_bbox": 0.24491, "loss": 0.71011, "time": 0.94093}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.02694, "memory": 3726, "data_time": 0.39151, "loss_rpn_cls": 0.07129, "loss_rpn_bbox": 0.03434, "loss_cls": 0.38037, "acc": 90.90088, "loss_bbox": 0.2491, "loss": 0.7351, "time": 0.88494}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.02994, "memory": 3726, "data_time": 0.42392, "loss_rpn_cls": 0.07968, "loss_rpn_bbox": 0.0379, "loss_cls": 0.38779, "acc": 90.5542, "loss_bbox": 0.25799, "loss": 0.76337, "time": 0.86636}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.03, "memory": 3726, "data_time": 0.39855, "loss_rpn_cls": 0.0743, "loss_rpn_bbox": 0.03255, "loss_cls": 0.36004, "acc": 91.15088, "loss_bbox": 0.23593, "loss": 0.70282, "time": 0.88872}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.03, "memory": 3728, "data_time": 0.40871, "loss_rpn_cls": 0.0735, "loss_rpn_bbox": 0.03367, "loss_cls": 0.34242, "acc": 90.94238, "loss_bbox": 0.23198, "loss": 0.68157, "time": 0.99169}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.03, "memory": 3728, "data_time": 0.40797, "loss_rpn_cls": 0.06333, "loss_rpn_bbox": 0.03285, "loss_cls": 0.36901, "acc": 90.10791, "loss_bbox": 0.25311, "loss": 0.7183, "time": 0.97063}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.03, "memory": 3728, "data_time": 0.42157, "loss_rpn_cls": 0.07303, "loss_rpn_bbox": 0.03214, "loss_cls": 0.33052, "acc": 91.125, "loss_bbox": 0.21924, "loss": 0.65494, "time": 0.86877}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.03, "memory": 3728, "data_time": 0.40482, "loss_rpn_cls": 0.06919, "loss_rpn_bbox": 0.03215, "loss_cls": 0.32061, "acc": 91.42236, "loss_bbox": 0.22152, "loss": 0.64348, "time": 0.89213}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.03, "memory": 3728, "data_time": 0.40989, "loss_rpn_cls": 0.06547, "loss_rpn_bbox": 0.03157, "loss_cls": 0.34633, "acc": 90.39014, "loss_bbox": 0.24051, "loss": 0.68389, "time": 0.95721}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.03, "memory": 3728, "data_time": 0.4321, "loss_rpn_cls": 0.06043, "loss_rpn_bbox": 0.0294, "loss_cls": 0.32872, "acc": 90.86182, "loss_bbox": 0.22836, "loss": 0.64692, "time": 0.85928}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.03, "memory": 3728, "data_time": 0.41951, "loss_rpn_cls": 0.0636, "loss_rpn_bbox": 0.03376, "loss_cls": 0.35072, "acc": 90.29199, "loss_bbox": 0.24358, "loss": 0.69166, "time": 0.86903}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.03, "memory": 3728, "data_time": 0.41364, "loss_rpn_cls": 0.06243, "loss_rpn_bbox": 0.03148, "loss_cls": 0.33343, "acc": 90.9917, "loss_bbox": 0.2272, "loss": 0.65455, "time": 0.87081}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.03, "memory": 3728, "data_time": 0.4084, "loss_rpn_cls": 0.06002, "loss_rpn_bbox": 0.03203, "loss_cls": 0.33896, "acc": 90.32959, "loss_bbox": 0.23539, "loss": 0.6664, "time": 0.86915}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.03, "memory": 3728, "data_time": 0.41656, "loss_rpn_cls": 0.05905, "loss_rpn_bbox": 0.03105, "loss_cls": 0.33467, "acc": 90.34424, "loss_bbox": 0.24176, "loss": 0.66653, "time": 0.88607}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.03, "memory": 3728, "data_time": 0.43154, "loss_rpn_cls": 0.05744, "loss_rpn_bbox": 0.02939, "loss_cls": 0.31446, "acc": 91.06055, "loss_bbox": 0.22382, "loss": 0.62511, "time": 0.86802}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.03, "memory": 3728, "data_time": 0.43318, "loss_rpn_cls": 0.05951, "loss_rpn_bbox": 0.03161, "loss_cls": 0.31554, "acc": 90.94141, "loss_bbox": 0.227, "loss": 0.63365, "time": 0.87233}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.03, "memory": 3728, "data_time": 0.42198, "loss_rpn_cls": 0.0517, "loss_rpn_bbox": 0.02778, "loss_cls": 0.31768, "acc": 90.69775, "loss_bbox": 0.23096, "loss": 0.62813, "time": 0.87374}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.03, "memory": 3728, "data_time": 0.42478, "loss_rpn_cls": 0.05684, "loss_rpn_bbox": 0.02888, "loss_cls": 0.30171, "acc": 91.22021, "loss_bbox": 0.21582, "loss": 0.60324, "time": 0.86884}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.03, "memory": 3728, "data_time": 0.41016, "loss_rpn_cls": 0.05469, "loss_rpn_bbox": 0.02931, "loss_cls": 0.31289, "acc": 90.95312, "loss_bbox": 0.22759, "loss": 0.62448, "time": 0.85555}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.03, "memory": 3728, "data_time": 0.41277, "loss_rpn_cls": 0.04809, "loss_rpn_bbox": 0.02631, "loss_cls": 0.30437, "acc": 90.86182, "loss_bbox": 0.22147, "loss": 0.60024, "time": 0.93701}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.03, "memory": 3728, "data_time": 0.41632, "loss_rpn_cls": 0.05121, "loss_rpn_bbox": 0.03059, "loss_cls": 0.31052, "acc": 90.68604, "loss_bbox": 0.22857, "loss": 0.62089, "time": 0.86602}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.03, "memory": 3728, "data_time": 0.41402, "loss_rpn_cls": 0.0516, "loss_rpn_bbox": 0.03007, "loss_cls": 0.29048, "acc": 91.37109, "loss_bbox": 0.21441, "loss": 0.58657, "time": 0.88532}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.03, "memory": 3728, "data_time": 0.4226, "loss_rpn_cls": 0.05153, "loss_rpn_bbox": 0.029, "loss_cls": 0.31349, "acc": 90.54199, "loss_bbox": 0.22336, "loss": 0.61737, "time": 0.87291}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.03, "memory": 3728, "data_time": 0.39279, "loss_rpn_cls": 0.04973, "loss_rpn_bbox": 0.02704, "loss_cls": 0.29422, "acc": 90.83594, "loss_bbox": 0.21315, "loss": 0.58414, "time": 1.07489}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.03, "memory": 3728, "data_time": 0.42791, "loss_rpn_cls": 0.05059, "loss_rpn_bbox": 0.02956, "loss_cls": 0.31457, "acc": 90.60596, "loss_bbox": 0.22968, "loss": 0.6244, "time": 0.90062}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.03, "memory": 3728, "data_time": 0.4496, "loss_rpn_cls": 0.04982, "loss_rpn_bbox": 0.02876, "loss_cls": 0.29344, "acc": 91.31641, "loss_bbox": 0.21127, "loss": 0.58329, "time": 0.95597}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.03, "memory": 3728, "data_time": 0.42603, "loss_rpn_cls": 0.047, "loss_rpn_bbox": 0.02827, "loss_cls": 0.30596, "acc": 90.58252, "loss_bbox": 0.2366, "loss": 0.61783, "time": 0.89213}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.03, "memory": 3728, "data_time": 0.39186, "loss_rpn_cls": 0.05021, "loss_rpn_bbox": 0.02903, "loss_cls": 0.28765, "acc": 91.21436, "loss_bbox": 0.21573, "loss": 0.58262, "time": 0.94848}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.03, "memory": 3728, "data_time": 0.41921, "loss_rpn_cls": 0.04819, "loss_rpn_bbox": 0.02941, "loss_cls": 0.29937, "acc": 90.64697, "loss_bbox": 0.22942, "loss": 0.6064, "time": 0.87712}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.03, "memory": 3728, "data_time": 0.42357, "loss_rpn_cls": 0.04985, "loss_rpn_bbox": 0.02865, "loss_cls": 0.29761, "acc": 90.99951, "loss_bbox": 0.21386, "loss": 0.58997, "time": 0.87685}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.03, "memory": 3728, "data_time": 0.40824, "loss_rpn_cls": 0.04684, "loss_rpn_bbox": 0.0248, "loss_cls": 0.27693, "acc": 91.71533, "loss_bbox": 0.19897, "loss": 0.54753, "time": 0.86766}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.03, "memory": 3728, "data_time": 0.41362, "loss_rpn_cls": 0.04636, "loss_rpn_bbox": 0.02544, "loss_cls": 0.2858, "acc": 91.52686, "loss_bbox": 0.20572, "loss": 0.56332, "time": 0.86072}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.03, "memory": 3728, "data_time": 0.42137, "loss_rpn_cls": 0.05172, "loss_rpn_bbox": 0.02887, "loss_cls": 0.28375, "acc": 91.39551, "loss_bbox": 0.2123, "loss": 0.57663, "time": 0.86301}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.03, "memory": 3728, "data_time": 0.41982, "loss_rpn_cls": 0.04216, "loss_rpn_bbox": 0.02781, "loss_cls": 0.28594, "acc": 91.29248, "loss_bbox": 0.2064, "loss": 0.5623, "time": 0.86265}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.03, "memory": 3728, "data_time": 0.43991, "loss_rpn_cls": 0.0487, "loss_rpn_bbox": 0.02806, "loss_cls": 0.27469, "acc": 91.39893, "loss_bbox": 0.20123, "loss": 0.55268, "time": 0.87302}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.03, "memory": 3728, "data_time": 0.44174, "loss_rpn_cls": 0.04129, "loss_rpn_bbox": 0.02838, "loss_cls": 0.27837, "acc": 91.27686, "loss_bbox": 0.21985, "loss": 0.56789, "time": 0.8647}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.03, "memory": 3728, "data_time": 0.43058, "loss_rpn_cls": 0.04335, "loss_rpn_bbox": 0.02831, "loss_cls": 0.28183, "acc": 91.27686, "loss_bbox": 0.22055, "loss": 0.57404, "time": 0.87184}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.03, "memory": 3728, "data_time": 0.43173, "loss_rpn_cls": 0.04317, "loss_rpn_bbox": 0.02739, "loss_cls": 0.28773, "acc": 91.04541, "loss_bbox": 0.22362, "loss": 0.58191, "time": 0.87018}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.03, "memory": 3728, "data_time": 0.41959, "loss_rpn_cls": 0.04149, "loss_rpn_bbox": 0.02608, "loss_cls": 0.28638, "acc": 91.4126, "loss_bbox": 0.20495, "loss": 0.55889, "time": 0.86062}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.03, "memory": 3728, "data_time": 0.41406, "loss_rpn_cls": 0.04581, "loss_rpn_bbox": 0.02772, "loss_cls": 0.29998, "acc": 90.90723, "loss_bbox": 0.2153, "loss": 0.5888, "time": 0.8709}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.03, "memory": 3728, "data_time": 0.43058, "loss_rpn_cls": 0.04092, "loss_rpn_bbox": 0.02797, "loss_cls": 0.28914, "acc": 90.8042, "loss_bbox": 0.22786, "loss": 0.58589, "time": 0.89082}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.03, "memory": 3728, "data_time": 0.41561, "loss_rpn_cls": 0.04279, "loss_rpn_bbox": 0.02493, "loss_cls": 0.3004, "acc": 90.93994, "loss_bbox": 0.21535, "loss": 0.58346, "time": 0.86473}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.03, "memory": 3728, "data_time": 0.40721, "loss_rpn_cls": 0.04977, "loss_rpn_bbox": 0.02928, "loss_cls": 0.29528, "acc": 90.84473, "loss_bbox": 0.22734, "loss": 0.60167, "time": 0.87575}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.03, "memory": 3728, "data_time": 0.41593, "loss_rpn_cls": 0.04554, "loss_rpn_bbox": 0.02916, "loss_cls": 0.2902, "acc": 91.00537, "loss_bbox": 0.2257, "loss": 0.5906, "time": 0.88587}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.03, "memory": 3728, "data_time": 0.41333, "loss_rpn_cls": 0.03804, "loss_rpn_bbox": 0.02477, "loss_cls": 0.28401, "acc": 91.44287, "loss_bbox": 0.20332, "loss": 0.55015, "time": 0.87425}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.03, "memory": 3728, "data_time": 0.42598, "loss_rpn_cls": 0.04162, "loss_rpn_bbox": 0.02659, "loss_cls": 0.27485, "acc": 91.4541, "loss_bbox": 0.20492, "loss": 0.54798, "time": 0.85776}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.03, "memory": 3728, "data_time": 0.40871, "loss_rpn_cls": 0.03983, "loss_rpn_bbox": 0.02551, "loss_cls": 0.27131, "acc": 91.47021, "loss_bbox": 0.21262, "loss": 0.54927, "time": 0.86266}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.03, "memory": 3728, "data_time": 0.42624, "loss_rpn_cls": 0.04004, "loss_rpn_bbox": 0.02658, "loss_cls": 0.26323, "acc": 91.69629, "loss_bbox": 0.19967, "loss": 0.52952, "time": 0.88425}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.03, "memory": 3728, "data_time": 0.42109, "loss_rpn_cls": 0.04107, "loss_rpn_bbox": 0.02662, "loss_cls": 0.25927, "acc": 91.86768, "loss_bbox": 0.19353, "loss": 0.52049, "time": 0.86663}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.03, "memory": 3728, "data_time": 0.44978, "loss_rpn_cls": 0.04065, "loss_rpn_bbox": 0.02681, "loss_cls": 0.27671, "acc": 91.33398, "loss_bbox": 0.20956, "loss": 0.55373, "time": 0.86843}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.03, "memory": 3728, "data_time": 0.42387, "loss_rpn_cls": 0.04347, "loss_rpn_bbox": 0.02857, "loss_cls": 0.27685, "acc": 91.26611, "loss_bbox": 0.2186, "loss": 0.56749, "time": 0.85542}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.03, "memory": 3728, "data_time": 0.42483, "loss_rpn_cls": 0.04383, "loss_rpn_bbox": 0.02525, "loss_cls": 0.2675, "acc": 91.70605, "loss_bbox": 0.19736, "loss": 0.53395, "time": 0.86016}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.03, "memory": 3728, "data_time": 0.41966, "loss_rpn_cls": 0.04329, "loss_rpn_bbox": 0.02547, "loss_cls": 0.28209, "acc": 91.15039, "loss_bbox": 0.2133, "loss": 0.56415, "time": 0.8579}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.03, "memory": 3728, "data_time": 0.419, "loss_rpn_cls": 0.03969, "loss_rpn_bbox": 0.0261, "loss_cls": 0.27378, "acc": 91.27441, "loss_bbox": 0.20773, "loss": 0.5473, "time": 0.88347}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.03, "memory": 3728, "data_time": 0.42955, "loss_rpn_cls": 0.03853, "loss_rpn_bbox": 0.02643, "loss_cls": 0.2784, "acc": 91.11865, "loss_bbox": 0.21572, "loss": 0.55909, "time": 0.86523}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.03, "memory": 3728, "data_time": 0.42199, "loss_rpn_cls": 0.04006, "loss_rpn_bbox": 0.02474, "loss_cls": 0.27142, "acc": 91.3335, "loss_bbox": 0.2156, "loss": 0.55181, "time": 0.86109}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.03, "memory": 3728, "data_time": 0.41623, "loss_rpn_cls": 0.04127, "loss_rpn_bbox": 0.02697, "loss_cls": 0.29329, "acc": 90.76416, "loss_bbox": 0.222, "loss": 0.58353, "time": 0.87087}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.03, "memory": 3728, "data_time": 0.4116, "loss_rpn_cls": 0.03803, "loss_rpn_bbox": 0.02402, "loss_cls": 0.27017, "acc": 91.53467, "loss_bbox": 0.20167, "loss": 0.53391, "time": 0.86489}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.03, "memory": 3728, "data_time": 0.40664, "loss_rpn_cls": 0.04318, "loss_rpn_bbox": 0.02623, "loss_cls": 0.28206, "acc": 91.02832, "loss_bbox": 0.21364, "loss": 0.56511, "time": 0.8729}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.03, "memory": 3728, "data_time": 0.41065, "loss_rpn_cls": 0.03693, "loss_rpn_bbox": 0.02424, "loss_cls": 0.27834, "acc": 91.00439, "loss_bbox": 0.21044, "loss": 0.54996, "time": 0.86444}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.03, "memory": 3728, "data_time": 0.42137, "loss_rpn_cls": 0.04021, "loss_rpn_bbox": 0.02482, "loss_cls": 0.25845, "acc": 91.84131, "loss_bbox": 0.19331, "loss": 0.51679, "time": 0.86195}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.03, "memory": 3728, "data_time": 0.42378, "loss_rpn_cls": 0.04224, "loss_rpn_bbox": 0.0269, "loss_cls": 0.29239, "acc": 91.08545, "loss_bbox": 0.21702, "loss": 0.57856, "time": 0.84951}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.03, "memory": 3728, "data_time": 0.43979, "loss_rpn_cls": 0.04442, "loss_rpn_bbox": 0.02791, "loss_cls": 0.24702, "acc": 92.07812, "loss_bbox": 0.19044, "loss": 0.50979, "time": 0.85504}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.03, "memory": 3728, "data_time": 0.43141, "loss_rpn_cls": 0.03899, "loss_rpn_bbox": 0.02382, "loss_cls": 0.26339, "acc": 91.71338, "loss_bbox": 0.2074, "loss": 0.53359, "time": 0.8716}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.03, "memory": 3728, "data_time": 0.41612, "loss_rpn_cls": 0.04166, "loss_rpn_bbox": 0.02497, "loss_cls": 0.28024, "acc": 91.23633, "loss_bbox": 0.20803, "loss": 0.55489, "time": 0.85227}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.03, "memory": 3728, "data_time": 0.44743, "loss_rpn_cls": 0.03755, "loss_rpn_bbox": 0.02522, "loss_cls": 0.27387, "acc": 91.43164, "loss_bbox": 0.20996, "loss": 0.54661, "time": 0.88973}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.03, "memory": 3728, "data_time": 0.43268, "loss_rpn_cls": 0.04593, "loss_rpn_bbox": 0.02726, "loss_cls": 0.27187, "acc": 91.29004, "loss_bbox": 0.20812, "loss": 0.55318, "time": 0.874}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.03, "memory": 3728, "data_time": 0.48, "loss_rpn_cls": 0.04091, "loss_rpn_bbox": 0.0257, "loss_cls": 0.26103, "acc": 91.52979, "loss_bbox": 0.20488, "loss": 0.53252, "time": 0.87644}
{"mode": "val", "epoch": 1, "iter": 3750, "lr": 0.03, "bbox_mAP": 0.167, "bbox_mAP_50": 0.338, "bbox_mAP_75": 0.143, "bbox_mAP_s": -1.0, "bbox_mAP_m": 0.05, "bbox_mAP_l": 0.175, "bbox_mAP_copypaste": "0.167 0.338 0.143 -1.000 0.050 0.175"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.03, "memory": 3728, "data_time": 0.43366, "loss_rpn_cls": 0.03638, "loss_rpn_bbox": 0.02328, "loss_cls": 0.26621, "acc": 91.51172, "loss_bbox": 0.20649, "loss": 0.53236, "time": 0.93631}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.03, "memory": 3728, "data_time": 0.39246, "loss_rpn_cls": 0.03815, "loss_rpn_bbox": 0.02637, "loss_cls": 0.29424, "acc": 90.47266, "loss_bbox": 0.2211, "loss": 0.57987, "time": 0.87214}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.03, "memory": 3728, "data_time": 0.38706, "loss_rpn_cls": 0.0374, "loss_rpn_bbox": 0.02426, "loss_cls": 0.27742, "acc": 91.11279, "loss_bbox": 0.20991, "loss": 0.549, "time": 0.88519}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.03, "memory": 3728, "data_time": 0.40166, "loss_rpn_cls": 0.04339, "loss_rpn_bbox": 0.02727, "loss_cls": 0.26445, "acc": 91.4126, "loss_bbox": 0.21121, "loss": 0.54632, "time": 0.86607}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.03, "memory": 3728, "data_time": 0.38976, "loss_rpn_cls": 0.03942, "loss_rpn_bbox": 0.02658, "loss_cls": 0.28228, "acc": 90.82275, "loss_bbox": 0.22128, "loss": 0.56956, "time": 0.8701}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.03, "memory": 3728, "data_time": 0.39256, "loss_rpn_cls": 0.03872, "loss_rpn_bbox": 0.02661, "loss_cls": 0.27274, "acc": 91.39404, "loss_bbox": 0.20371, "loss": 0.54179, "time": 0.88103}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.03, "memory": 3728, "data_time": 0.41071, "loss_rpn_cls": 0.03746, "loss_rpn_bbox": 0.02559, "loss_cls": 0.26293, "acc": 91.42529, "loss_bbox": 0.20216, "loss": 0.52814, "time": 0.87702}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.03, "memory": 3728, "data_time": 0.40516, "loss_rpn_cls": 0.03813, "loss_rpn_bbox": 0.02455, "loss_cls": 0.26259, "acc": 91.62646, "loss_bbox": 0.21392, "loss": 0.53918, "time": 0.89533}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.03, "memory": 3728, "data_time": 0.40999, "loss_rpn_cls": 0.03935, "loss_rpn_bbox": 0.02372, "loss_cls": 0.25041, "acc": 92.16943, "loss_bbox": 0.19, "loss": 0.50348, "time": 0.89286}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.03, "memory": 3728, "data_time": 0.39661, "loss_rpn_cls": 0.03975, "loss_rpn_bbox": 0.02391, "loss_cls": 0.25618, "acc": 91.51025, "loss_bbox": 0.20276, "loss": 0.52261, "time": 0.90051}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.03, "memory": 3728, "data_time": 0.41748, "loss_rpn_cls": 0.03928, "loss_rpn_bbox": 0.02757, "loss_cls": 0.27436, "acc": 90.99951, "loss_bbox": 0.2211, "loss": 0.56231, "time": 0.92572}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.03, "memory": 3728, "data_time": 0.41586, "loss_rpn_cls": 0.03452, "loss_rpn_bbox": 0.0243, "loss_cls": 0.25658, "acc": 91.74316, "loss_bbox": 0.20155, "loss": 0.51695, "time": 0.88775}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.03, "memory": 3728, "data_time": 0.38468, "loss_rpn_cls": 0.03561, "loss_rpn_bbox": 0.02516, "loss_cls": 0.25196, "acc": 91.85107, "loss_bbox": 0.19565, "loss": 0.50838, "time": 0.90587}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.03, "memory": 3728, "data_time": 0.40079, "loss_rpn_cls": 0.03198, "loss_rpn_bbox": 0.0248, "loss_cls": 0.26255, "acc": 91.37012, "loss_bbox": 0.20704, "loss": 0.52637, "time": 0.86444}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.03, "memory": 3728, "data_time": 0.40029, "loss_rpn_cls": 0.03544, "loss_rpn_bbox": 0.02676, "loss_cls": 0.27316, "acc": 91.12842, "loss_bbox": 0.2122, "loss": 0.54755, "time": 0.8773}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.03, "memory": 3728, "data_time": 0.37057, "loss_rpn_cls": 0.03717, "loss_rpn_bbox": 0.02422, "loss_cls": 0.26355, "acc": 91.48438, "loss_bbox": 0.2001, "loss": 0.52504, "time": 0.87671}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.03, "memory": 3728, "data_time": 0.37241, "loss_rpn_cls": 0.03698, "loss_rpn_bbox": 0.02515, "loss_cls": 0.25403, "acc": 91.74219, "loss_bbox": 0.19662, "loss": 0.51278, "time": 0.8568}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.03, "memory": 3728, "data_time": 0.38647, "loss_rpn_cls": 0.03664, "loss_rpn_bbox": 0.02432, "loss_cls": 0.25587, "acc": 91.5415, "loss_bbox": 0.19959, "loss": 0.51642, "time": 0.86319}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.03, "memory": 3728, "data_time": 0.39774, "loss_rpn_cls": 0.03772, "loss_rpn_bbox": 0.02707, "loss_cls": 0.26272, "acc": 91.18311, "loss_bbox": 0.21028, "loss": 0.5378, "time": 0.87495}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.03, "memory": 3728, "data_time": 0.42309, "loss_rpn_cls": 0.0361, "loss_rpn_bbox": 0.02436, "loss_cls": 0.2702, "acc": 91.19238, "loss_bbox": 0.20829, "loss": 0.53895, "time": 0.90653}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.03, "memory": 3728, "data_time": 0.41612, "loss_rpn_cls": 0.03365, "loss_rpn_bbox": 0.02365, "loss_cls": 0.27485, "acc": 91.23242, "loss_bbox": 0.20668, "loss": 0.53883, "time": 0.88632}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.03, "memory": 3728, "data_time": 0.42862, "loss_rpn_cls": 0.03965, "loss_rpn_bbox": 0.0247, "loss_cls": 0.25164, "acc": 91.89551, "loss_bbox": 0.19155, "loss": 0.50754, "time": 0.89166}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.03, "memory": 3728, "data_time": 0.40628, "loss_rpn_cls": 0.03573, "loss_rpn_bbox": 0.02319, "loss_cls": 0.24761, "acc": 92.02002, "loss_bbox": 0.18808, "loss": 0.49462, "time": 0.88289}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.03, "memory": 3728, "data_time": 0.386, "loss_rpn_cls": 0.03721, "loss_rpn_bbox": 0.0246, "loss_cls": 0.25557, "acc": 91.68896, "loss_bbox": 0.19852, "loss": 0.5159, "time": 0.86182}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.03, "memory": 3728, "data_time": 0.40167, "loss_rpn_cls": 0.03631, "loss_rpn_bbox": 0.02434, "loss_cls": 0.26045, "acc": 91.48535, "loss_bbox": 0.21005, "loss": 0.53115, "time": 0.86999}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.03, "memory": 3728, "data_time": 0.41981, "loss_rpn_cls": 0.03575, "loss_rpn_bbox": 0.02571, "loss_cls": 0.26695, "acc": 91.29443, "loss_bbox": 0.213, "loss": 0.54142, "time": 0.88776}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.03, "memory": 3728, "data_time": 0.43815, "loss_rpn_cls": 0.03722, "loss_rpn_bbox": 0.02617, "loss_cls": 0.28383, "acc": 90.70508, "loss_bbox": 0.2171, "loss": 0.56432, "time": 0.89992}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.03, "memory": 3728, "data_time": 0.41974, "loss_rpn_cls": 0.0415, "loss_rpn_bbox": 0.0274, "loss_cls": 0.26899, "acc": 90.97266, "loss_bbox": 0.21418, "loss": 0.55208, "time": 0.8967}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.03, "memory": 3728, "data_time": 0.42327, "loss_rpn_cls": 0.03469, "loss_rpn_bbox": 0.02552, "loss_cls": 0.26905, "acc": 91.11475, "loss_bbox": 0.20497, "loss": 0.53424, "time": 0.89203}
