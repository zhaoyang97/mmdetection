2021-05-07 12:10:35,982 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.6.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.7.0
OpenCV: 4.4.0
MMCV: 1.3.3
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.2
MMDetection: 2.12.0+
------------------------------------------------------------

2021-05-07 12:10:36,429 - mmdet - INFO - Distributed training: True
2021-05-07 12:10:36,770 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained=
    'work_dirs/imagenet_resnet50_carafed/imagenet_resnet50_carafed_pretrained.pth',
    backbone=dict(
        type='ResNet_carafed',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=80,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = '../data/coco/'
annotations_root = '../data/coco/annotations/'
image_root = '../data/coco/'
img_scale = (1333, 800)
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=0,
    train=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_train2017.json',
        img_prefix='../data/coco/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_val2017.json',
        img_prefix='../data/coco/val2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/image_info_test-dev2017.json',
        img_prefix='../data/coco/test2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/carafed_coco_faster_r50_1x'
gpu_ids = range(0, 8)

2021-05-07 12:11:03,934 - mmdet - INFO - Start running, host: root@c29bb9d22aa7, work_dir: /root/userfolder/mmdetection/work_dirs/carafed_coco_faster_r50_1x
2021-05-07 12:11:03,934 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2021-05-07 12:11:35,914 - mmdet - INFO - Epoch [1][50/7330]	lr: 1.978e-03, eta: 15:34:56, time: 0.638, data_time: 0.211, memory: 8625, loss_rpn_cls: 0.5351, loss_rpn_bbox: 0.1040, loss_cls: 0.9551, acc: 89.8079, loss_bbox: 0.1123, loss: 1.7066
2021-05-07 12:12:03,266 - mmdet - INFO - Epoch [1][100/7330]	lr: 3.976e-03, eta: 14:27:41, time: 0.547, data_time: 0.149, memory: 8625, loss_rpn_cls: 0.2200, loss_rpn_bbox: 0.0947, loss_cls: 0.4464, acc: 94.0764, loss_bbox: 0.2259, loss: 0.9870
2021-05-07 12:12:30,374 - mmdet - INFO - Epoch [1][150/7330]	lr: 5.974e-03, eta: 14:02:47, time: 0.543, data_time: 0.152, memory: 8625, loss_rpn_cls: 0.1786, loss_rpn_bbox: 0.0950, loss_cls: 0.4886, acc: 93.2986, loss_bbox: 0.2503, loss: 1.0125
2021-05-07 12:12:57,439 - mmdet - INFO - Epoch [1][200/7330]	lr: 7.972e-03, eta: 13:49:26, time: 0.541, data_time: 0.154, memory: 8625, loss_rpn_cls: 0.1500, loss_rpn_bbox: 0.0980, loss_cls: 0.4836, acc: 92.0493, loss_bbox: 0.2971, loss: 1.0287
2021-05-07 12:13:24,459 - mmdet - INFO - Epoch [1][250/7330]	lr: 9.970e-03, eta: 13:41:19, time: 0.541, data_time: 0.145, memory: 8625, loss_rpn_cls: 0.1337, loss_rpn_bbox: 0.0984, loss_cls: 0.4864, acc: 91.5454, loss_bbox: 0.3173, loss: 1.0358
2021-05-07 12:13:51,413 - mmdet - INFO - Epoch [1][300/7330]	lr: 1.197e-02, eta: 13:35:18, time: 0.539, data_time: 0.144, memory: 8625, loss_rpn_cls: 0.1132, loss_rpn_bbox: 0.0887, loss_cls: 0.5143, acc: 90.7585, loss_bbox: 0.3490, loss: 1.0652
2021-05-07 12:14:18,658 - mmdet - INFO - Epoch [1][350/7330]	lr: 1.397e-02, eta: 13:32:00, time: 0.544, data_time: 0.147, memory: 8625, loss_rpn_cls: 0.1046, loss_rpn_bbox: 0.0872, loss_cls: 0.5043, acc: 90.8245, loss_bbox: 0.3501, loss: 1.0461
2021-05-07 12:14:45,608 - mmdet - INFO - Epoch [1][400/7330]	lr: 1.596e-02, eta: 13:28:28, time: 0.539, data_time: 0.145, memory: 8625, loss_rpn_cls: 0.1058, loss_rpn_bbox: 0.0885, loss_cls: 0.5345, acc: 89.8142, loss_bbox: 0.3853, loss: 1.1142
2021-05-07 12:15:12,496 - mmdet - INFO - Epoch [1][450/7330]	lr: 1.796e-02, eta: 13:25:24, time: 0.538, data_time: 0.144, memory: 8625, loss_rpn_cls: 0.1006, loss_rpn_bbox: 0.0864, loss_cls: 0.5014, acc: 90.1064, loss_bbox: 0.3810, loss: 1.0695
2021-05-07 12:15:39,390 - mmdet - INFO - Epoch [1][500/7330]	lr: 1.996e-02, eta: 13:22:48, time: 0.538, data_time: 0.147, memory: 8625, loss_rpn_cls: 0.0947, loss_rpn_bbox: 0.0816, loss_cls: 0.5055, acc: 89.7668, loss_bbox: 0.3851, loss: 1.0669
2021-05-07 12:16:06,297 - mmdet - INFO - Epoch [1][550/7330]	lr: 2.000e-02, eta: 13:20:39, time: 0.538, data_time: 0.144, memory: 8625, loss_rpn_cls: 0.0945, loss_rpn_bbox: 0.0805, loss_cls: 0.4943, acc: 89.7429, loss_bbox: 0.3849, loss: 1.0540
2021-05-07 12:16:33,290 - mmdet - INFO - Epoch [1][600/7330]	lr: 2.000e-02, eta: 13:19:02, time: 0.540, data_time: 0.148, memory: 8625, loss_rpn_cls: 0.0951, loss_rpn_bbox: 0.0825, loss_cls: 0.4890, acc: 89.7896, loss_bbox: 0.3766, loss: 1.0432
2021-05-07 12:17:00,092 - mmdet - INFO - Epoch [1][650/7330]	lr: 2.000e-02, eta: 13:17:12, time: 0.536, data_time: 0.145, memory: 8625, loss_rpn_cls: 0.0901, loss_rpn_bbox: 0.0854, loss_cls: 0.4645, acc: 89.8137, loss_bbox: 0.3790, loss: 1.0191
2021-05-07 12:17:27,273 - mmdet - INFO - Epoch [1][700/7330]	lr: 2.000e-02, eta: 13:16:16, time: 0.543, data_time: 0.148, memory: 8625, loss_rpn_cls: 0.0904, loss_rpn_bbox: 0.0835, loss_cls: 0.4675, acc: 89.4431, loss_bbox: 0.3888, loss: 1.0301
2021-05-07 12:17:54,237 - mmdet - INFO - Epoch [1][750/7330]	lr: 2.000e-02, eta: 13:14:59, time: 0.539, data_time: 0.149, memory: 8625, loss_rpn_cls: 0.0845, loss_rpn_bbox: 0.0822, loss_cls: 0.4484, acc: 89.6941, loss_bbox: 0.3772, loss: 0.9923
2021-05-07 12:18:21,207 - mmdet - INFO - Epoch [1][800/7330]	lr: 2.000e-02, eta: 13:13:53, time: 0.540, data_time: 0.151, memory: 8625, loss_rpn_cls: 0.0833, loss_rpn_bbox: 0.0827, loss_cls: 0.4597, acc: 89.3643, loss_bbox: 0.3825, loss: 1.0082
2021-05-07 12:18:48,324 - mmdet - INFO - Epoch [1][850/7330]	lr: 2.000e-02, eta: 13:13:04, time: 0.542, data_time: 0.153, memory: 8625, loss_rpn_cls: 0.0781, loss_rpn_bbox: 0.0787, loss_cls: 0.4376, acc: 89.6345, loss_bbox: 0.3749, loss: 0.9692
2021-05-07 12:19:15,355 - mmdet - INFO - Epoch [1][900/7330]	lr: 2.000e-02, eta: 13:12:08, time: 0.540, data_time: 0.153, memory: 8625, loss_rpn_cls: 0.0772, loss_rpn_bbox: 0.0788, loss_cls: 0.4330, acc: 89.5764, loss_bbox: 0.3747, loss: 0.9637
2021-05-07 12:19:42,297 - mmdet - INFO - Epoch [1][950/7330]	lr: 2.000e-02, eta: 13:11:07, time: 0.539, data_time: 0.151, memory: 8625, loss_rpn_cls: 0.0787, loss_rpn_bbox: 0.0775, loss_cls: 0.4283, acc: 89.6633, loss_bbox: 0.3676, loss: 0.9520
2021-05-07 12:20:09,303 - mmdet - INFO - Exp name: carafed_coco_faster_r50_1x.py
2021-05-07 12:20:09,303 - mmdet - INFO - Epoch [1][1000/7330]	lr: 2.000e-02, eta: 13:10:17, time: 0.540, data_time: 0.151, memory: 8625, loss_rpn_cls: 0.0767, loss_rpn_bbox: 0.0769, loss_cls: 0.4169, acc: 89.6418, loss_bbox: 0.3707, loss: 0.9412
2021-05-07 12:20:36,372 - mmdet - INFO - Epoch [1][1050/7330]	lr: 2.000e-02, eta: 13:09:35, time: 0.542, data_time: 0.145, memory: 8625, loss_rpn_cls: 0.0778, loss_rpn_bbox: 0.0766, loss_cls: 0.4160, acc: 89.8083, loss_bbox: 0.3603, loss: 0.9307
2021-05-07 12:21:03,427 - mmdet - INFO - Epoch [1][1100/7330]	lr: 2.000e-02, eta: 13:08:52, time: 0.541, data_time: 0.150, memory: 8625, loss_rpn_cls: 0.0688, loss_rpn_bbox: 0.0730, loss_cls: 0.4044, acc: 89.8357, loss_bbox: 0.3644, loss: 0.9107
2021-05-07 12:21:30,372 - mmdet - INFO - Epoch [1][1150/7330]	lr: 2.000e-02, eta: 13:08:02, time: 0.539, data_time: 0.146, memory: 8625, loss_rpn_cls: 0.0766, loss_rpn_bbox: 0.0803, loss_cls: 0.4240, acc: 89.2520, loss_bbox: 0.3805, loss: 0.9614
2021-05-07 12:21:57,437 - mmdet - INFO - Epoch [1][1200/7330]	lr: 2.000e-02, eta: 13:07:22, time: 0.541, data_time: 0.155, memory: 8625, loss_rpn_cls: 0.0794, loss_rpn_bbox: 0.0811, loss_cls: 0.4192, acc: 89.3245, loss_bbox: 0.3775, loss: 0.9573
2021-05-07 12:22:24,517 - mmdet - INFO - Epoch [1][1250/7330]	lr: 2.000e-02, eta: 13:06:44, time: 0.542, data_time: 0.152, memory: 8625, loss_rpn_cls: 0.0701, loss_rpn_bbox: 0.0722, loss_cls: 0.3867, acc: 90.0730, loss_bbox: 0.3511, loss: 0.8801
2021-05-07 12:22:51,695 - mmdet - INFO - Epoch [1][1300/7330]	lr: 2.000e-02, eta: 13:06:14, time: 0.543, data_time: 0.150, memory: 8625, loss_rpn_cls: 0.0704, loss_rpn_bbox: 0.0732, loss_cls: 0.3805, acc: 89.9360, loss_bbox: 0.3603, loss: 0.8845
2021-05-07 12:23:18,629 - mmdet - INFO - Epoch [1][1350/7330]	lr: 2.000e-02, eta: 13:05:29, time: 0.539, data_time: 0.150, memory: 8625, loss_rpn_cls: 0.0829, loss_rpn_bbox: 0.0801, loss_cls: 0.4006, acc: 89.6101, loss_bbox: 0.3588, loss: 0.9225
2021-05-07 12:23:45,653 - mmdet - INFO - Epoch [1][1400/7330]	lr: 2.000e-02, eta: 13:04:51, time: 0.541, data_time: 0.147, memory: 8625, loss_rpn_cls: 0.0696, loss_rpn_bbox: 0.0726, loss_cls: 0.3773, acc: 90.1079, loss_bbox: 0.3488, loss: 0.8683
2021-05-07 12:24:12,543 - mmdet - INFO - Epoch [1][1450/7330]	lr: 2.000e-02, eta: 13:04:05, time: 0.538, data_time: 0.155, memory: 8625, loss_rpn_cls: 0.0698, loss_rpn_bbox: 0.0745, loss_cls: 0.3834, acc: 89.6145, loss_bbox: 0.3680, loss: 0.8957
2021-05-07 12:24:39,391 - mmdet - INFO - Epoch [1][1500/7330]	lr: 2.000e-02, eta: 13:03:17, time: 0.537, data_time: 0.149, memory: 8625, loss_rpn_cls: 0.0782, loss_rpn_bbox: 0.0805, loss_cls: 0.3746, acc: 89.9678, loss_bbox: 0.3572, loss: 0.8906
2021-05-07 12:25:06,458 - mmdet - INFO - Epoch [1][1550/7330]	lr: 2.000e-02, eta: 13:02:45, time: 0.542, data_time: 0.150, memory: 8625, loss_rpn_cls: 0.0666, loss_rpn_bbox: 0.0737, loss_cls: 0.3718, acc: 89.9348, loss_bbox: 0.3517, loss: 0.8638
2021-05-07 12:25:33,336 - mmdet - INFO - Epoch [1][1600/7330]	lr: 2.000e-02, eta: 13:02:01, time: 0.537, data_time: 0.147, memory: 8625, loss_rpn_cls: 0.0724, loss_rpn_bbox: 0.0759, loss_cls: 0.3799, acc: 89.8223, loss_bbox: 0.3551, loss: 0.8833
2021-05-07 12:26:00,351 - mmdet - INFO - Epoch [1][1650/7330]	lr: 2.000e-02, eta: 13:01:26, time: 0.540, data_time: 0.149, memory: 8625, loss_rpn_cls: 0.0698, loss_rpn_bbox: 0.0752, loss_cls: 0.3658, acc: 90.1045, loss_bbox: 0.3427, loss: 0.8536
2021-05-07 12:26:27,403 - mmdet - INFO - Epoch [1][1700/7330]	lr: 2.000e-02, eta: 13:00:53, time: 0.541, data_time: 0.154, memory: 8625, loss_rpn_cls: 0.0701, loss_rpn_bbox: 0.0713, loss_cls: 0.3848, acc: 89.7451, loss_bbox: 0.3530, loss: 0.8792
2021-05-07 12:26:54,436 - mmdet - INFO - Epoch [1][1750/7330]	lr: 2.000e-02, eta: 13:00:19, time: 0.541, data_time: 0.149, memory: 8625, loss_rpn_cls: 0.0731, loss_rpn_bbox: 0.0754, loss_cls: 0.3803, acc: 89.5171, loss_bbox: 0.3586, loss: 0.8874
2021-05-07 12:27:21,382 - mmdet - INFO - Epoch [1][1800/7330]	lr: 2.000e-02, eta: 12:59:42, time: 0.539, data_time: 0.152, memory: 8625, loss_rpn_cls: 0.0695, loss_rpn_bbox: 0.0760, loss_cls: 0.3696, acc: 89.9866, loss_bbox: 0.3457, loss: 0.8608
2021-05-07 12:27:48,387 - mmdet - INFO - Epoch [1][1850/7330]	lr: 2.000e-02, eta: 12:59:09, time: 0.541, data_time: 0.153, memory: 8625, loss_rpn_cls: 0.0679, loss_rpn_bbox: 0.0756, loss_cls: 0.3776, acc: 89.6050, loss_bbox: 0.3557, loss: 0.8768
2021-05-07 12:28:15,335 - mmdet - INFO - Epoch [1][1900/7330]	lr: 2.000e-02, eta: 12:58:33, time: 0.539, data_time: 0.142, memory: 8625, loss_rpn_cls: 0.0663, loss_rpn_bbox: 0.0733, loss_cls: 0.3572, acc: 90.2219, loss_bbox: 0.3367, loss: 0.8335
