2021-05-04 12:55:33,525 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.4.0
MMCV: 1.1.5
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2021-05-04 12:55:33,954 - mmdet - INFO - Distributed training: True
2021-05-04 12:55:34,340 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained=
    'work_dirs/carafed_coco_faster_r50_1x_3_kernelexp/pretrained.pth',
    backbone=dict(
        type='ResNet_carafed',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=80,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = '../data/coco/'
annotations_root = '../data/coco/annotations/'
image_root = '../data/coco/'
img_scale = (1333, 800)
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=0,
    train=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_train2017.json',
        img_prefix='../data/coco/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_val2017.json',
        img_prefix='../data/coco/val2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/image_info_test-dev2017.json',
        img_prefix='../data/coco/test2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 12
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/carafed_coco_faster_r50_1x'
gpu_ids = range(0, 1)

2021-05-04 12:55:34,786 - mmdet - INFO - load model from: work_dirs/carafed_coco_faster_r50_1x_3_kernelexp/pretrained.pth
2021-05-04 12:55:34,959 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: lateral_convs.0.conv.weight, lateral_convs.0.conv.bias, lateral_convs.1.conv.weight, lateral_convs.1.conv.bias, lateral_convs.2.conv.weight, lateral_convs.2.conv.bias, lateral_convs.3.conv.weight, lateral_convs.3.conv.bias, fpn_convs.0.conv.weight, fpn_convs.0.conv.bias, fpn_convs.1.conv.weight, fpn_convs.1.conv.bias, fpn_convs.2.conv.weight, fpn_convs.2.conv.bias, fpn_convs.3.conv.weight, fpn_convs.3.conv.bias, rpn_head.rpn_conv.weight, rpn_head.rpn_conv.bias, rpn_head.rpn_cls.weight, rpn_head.rpn_cls.bias, rpn_head.rpn_reg.weight, rpn_head.rpn_reg.bias, roi_head.bbox_head.fc_cls.weight, roi_head.bbox_head.fc_cls.bias, roi_head.bbox_head.fc_reg.weight, roi_head.bbox_head.fc_reg.bias, roi_head.bbox_head.shared_fcs.0.weight, roi_head.bbox_head.shared_fcs.0.bias, roi_head.bbox_head.shared_fcs.1.weight, roi_head.bbox_head.shared_fcs.1.bias, carafe.kernel_encoder.weight, carafe.kernel_encoder.bias, carafe.PI.conv.weight, layer2.0.conv2.0.kernel_encoder.weight, layer2.0.conv2.0.kernel_encoder.bias, layer2.0.conv2.0.PI.conv.weight, layer2.0.downsample.0.kernel_encoder.weight, layer2.0.downsample.0.kernel_encoder.bias, layer2.0.downsample.0.PI.conv.weight, layer3.0.conv2.0.kernel_encoder.weight, layer3.0.conv2.0.kernel_encoder.bias, layer3.0.conv2.0.PI.conv.weight, layer3.0.downsample.0.kernel_encoder.weight, layer3.0.downsample.0.kernel_encoder.bias, layer3.0.downsample.0.PI.conv.weight, layer4.0.conv2.0.kernel_encoder.weight, layer4.0.conv2.0.kernel_encoder.bias, layer4.0.conv2.0.PI.conv.weight, layer4.0.downsample.0.kernel_encoder.weight, layer4.0.downsample.0.kernel_encoder.bias, layer4.0.downsample.0.PI.conv.weight

2021-05-04 12:56:00,070 - mmdet - INFO - Start running, host: root@48311a6e91ab, work_dir: /root/userfolder/mmdetection/work_dirs/carafed_coco_faster_r50_1x
2021-05-04 12:56:00,070 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2021-05-04 12:56:32,347 - mmdet - INFO - Epoch [1][50/7330]	lr: 1.978e-03, eta: 15:43:42, time: 0.644, data_time: 0.208, memory: 8626, loss_rpn_cls: 0.4453, loss_rpn_bbox: 0.1050, loss_cls: 0.9222, acc: 90.0215, loss_bbox: 0.0754, loss: 1.5479
2021-05-04 12:56:58,831 - mmdet - INFO - Epoch [1][100/7330]	lr: 3.976e-03, eta: 14:19:06, time: 0.529, data_time: 0.131, memory: 8626, loss_rpn_cls: 0.2011, loss_rpn_bbox: 0.0974, loss_cls: 0.4256, acc: 94.4463, loss_bbox: 0.1875, loss: 0.9116
2021-05-04 12:57:25,160 - mmdet - INFO - Epoch [1][150/7330]	lr: 5.974e-03, eta: 13:49:41, time: 0.527, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.1570, loss_rpn_bbox: 0.0947, loss_cls: 0.4772, acc: 92.9509, loss_bbox: 0.2484, loss: 0.9773
2021-05-04 12:57:51,594 - mmdet - INFO - Epoch [1][200/7330]	lr: 7.972e-03, eta: 13:34:52, time: 0.528, data_time: 0.140, memory: 8626, loss_rpn_cls: 0.1152, loss_rpn_bbox: 0.0932, loss_cls: 0.5292, acc: 90.9167, loss_bbox: 0.3442, loss: 1.0818
2021-05-04 12:58:18,129 - mmdet - INFO - Epoch [1][250/7330]	lr: 9.970e-03, eta: 13:26:56, time: 0.532, data_time: 0.138, memory: 8626, loss_rpn_cls: 0.0948, loss_rpn_bbox: 0.0882, loss_cls: 0.5877, acc: 89.3696, loss_bbox: 0.4060, loss: 1.1767
2021-05-04 12:58:44,520 - mmdet - INFO - Epoch [1][300/7330]	lr: 1.197e-02, eta: 13:20:35, time: 0.528, data_time: 0.132, memory: 8626, loss_rpn_cls: 0.0825, loss_rpn_bbox: 0.0800, loss_cls: 0.5763, acc: 89.3362, loss_bbox: 0.4019, loss: 1.1406
2021-05-04 12:59:11,009 - mmdet - INFO - Epoch [1][350/7330]	lr: 1.397e-02, eta: 13:16:10, time: 0.529, data_time: 0.133, memory: 8626, loss_rpn_cls: 0.0784, loss_rpn_bbox: 0.0792, loss_cls: 0.5488, acc: 89.8032, loss_bbox: 0.3793, loss: 1.0856
2021-05-04 12:59:37,455 - mmdet - INFO - Epoch [1][400/7330]	lr: 1.596e-02, eta: 13:12:50, time: 0.530, data_time: 0.139, memory: 8626, loss_rpn_cls: 0.0834, loss_rpn_bbox: 0.0821, loss_cls: 0.5487, acc: 89.5349, loss_bbox: 0.3803, loss: 1.0944
2021-05-04 13:00:04,017 - mmdet - INFO - Epoch [1][450/7330]	lr: 1.796e-02, eta: 13:10:25, time: 0.531, data_time: 0.135, memory: 8626, loss_rpn_cls: 0.0838, loss_rpn_bbox: 0.0798, loss_cls: 0.5064, acc: 89.7461, loss_bbox: 0.3657, loss: 1.0357
2021-05-04 13:00:30,281 - mmdet - INFO - Epoch [1][500/7330]	lr: 1.996e-02, eta: 13:07:32, time: 0.525, data_time: 0.138, memory: 8626, loss_rpn_cls: 0.0780, loss_rpn_bbox: 0.0762, loss_cls: 0.5073, acc: 89.7834, loss_bbox: 0.3659, loss: 1.0273
2021-05-04 13:00:56,634 - mmdet - INFO - Epoch [1][550/7330]	lr: 2.000e-02, eta: 13:05:16, time: 0.527, data_time: 0.128, memory: 8626, loss_rpn_cls: 0.0774, loss_rpn_bbox: 0.0762, loss_cls: 0.4979, acc: 89.7766, loss_bbox: 0.3497, loss: 1.0011
2021-05-04 13:01:23,091 - mmdet - INFO - Epoch [1][600/7330]	lr: 2.000e-02, eta: 13:03:41, time: 0.530, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.0802, loss_rpn_bbox: 0.0769, loss_cls: 0.4977, acc: 89.6899, loss_bbox: 0.3506, loss: 1.0055
2021-05-04 13:01:49,453 - mmdet - INFO - Epoch [1][650/7330]	lr: 2.000e-02, eta: 13:02:00, time: 0.527, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.0815, loss_rpn_bbox: 0.0796, loss_cls: 0.4946, acc: 89.5444, loss_bbox: 0.3514, loss: 1.0071
2021-05-04 13:02:15,980 - mmdet - INFO - Epoch [1][700/7330]	lr: 2.000e-02, eta: 13:00:49, time: 0.530, data_time: 0.139, memory: 8626, loss_rpn_cls: 0.0791, loss_rpn_bbox: 0.0758, loss_cls: 0.4814, acc: 89.2317, loss_bbox: 0.3593, loss: 0.9956
2021-05-04 13:02:42,435 - mmdet - INFO - Epoch [1][750/7330]	lr: 2.000e-02, eta: 12:59:35, time: 0.529, data_time: 0.135, memory: 8626, loss_rpn_cls: 0.0780, loss_rpn_bbox: 0.0777, loss_cls: 0.4638, acc: 89.5781, loss_bbox: 0.3446, loss: 0.9640
2021-05-04 13:03:08,959 - mmdet - INFO - Epoch [1][800/7330]	lr: 2.000e-02, eta: 12:58:39, time: 0.531, data_time: 0.138, memory: 8626, loss_rpn_cls: 0.0756, loss_rpn_bbox: 0.0776, loss_cls: 0.4671, acc: 89.6067, loss_bbox: 0.3399, loss: 0.9601
2021-05-04 13:03:35,347 - mmdet - INFO - Epoch [1][850/7330]	lr: 2.000e-02, eta: 12:57:30, time: 0.528, data_time: 0.135, memory: 8626, loss_rpn_cls: 0.0764, loss_rpn_bbox: 0.0746, loss_cls: 0.4602, acc: 89.9478, loss_bbox: 0.3246, loss: 0.9358
2021-05-04 13:04:01,810 - mmdet - INFO - Epoch [1][900/7330]	lr: 2.000e-02, eta: 12:56:33, time: 0.529, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.0733, loss_rpn_bbox: 0.0735, loss_cls: 0.4701, acc: 89.5146, loss_bbox: 0.3439, loss: 0.9608
2021-05-04 13:04:28,150 - mmdet - INFO - Epoch [1][950/7330]	lr: 2.000e-02, eta: 12:55:25, time: 0.526, data_time: 0.138, memory: 8626, loss_rpn_cls: 0.0767, loss_rpn_bbox: 0.0733, loss_cls: 0.4572, acc: 89.9868, loss_bbox: 0.3250, loss: 0.9322
2021-05-04 13:04:54,417 - mmdet - INFO - Exp name: carafed_coco_faster_r50_1x.py
2021-05-04 13:04:54,418 - mmdet - INFO - Epoch [1][1000/7330]	lr: 2.000e-02, eta: 12:54:20, time: 0.526, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.0759, loss_rpn_bbox: 0.0725, loss_cls: 0.4415, acc: 89.9104, loss_bbox: 0.3243, loss: 0.9142
2021-05-04 13:05:20,633 - mmdet - INFO - Epoch [1][1050/7330]	lr: 2.000e-02, eta: 12:53:13, time: 0.524, data_time: 0.134, memory: 8626, loss_rpn_cls: 0.0741, loss_rpn_bbox: 0.0728, loss_cls: 0.4609, acc: 89.6802, loss_bbox: 0.3258, loss: 0.9337
2021-05-04 13:05:46,989 - mmdet - INFO - Epoch [1][1100/7330]	lr: 2.000e-02, eta: 12:52:18, time: 0.527, data_time: 0.135, memory: 8626, loss_rpn_cls: 0.0670, loss_rpn_bbox: 0.0675, loss_cls: 0.4349, acc: 89.9717, loss_bbox: 0.3183, loss: 0.8877
