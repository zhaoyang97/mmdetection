{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=21,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/voc0712/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1000, 600),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'\n            ],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ])),\n    val=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\ntotal_epochs = 12\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/faster_rcnn_r50_fpn_1x_voc_moco'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "faster_rcnn_r50_fpn_1x_voc_moco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 2569, "data_time": 0.14102, "loss_rpn_cls": 0.47342, "loss_rpn_bbox": 0.02946, "loss_cls": 1.68873, "acc": 82.07275, "loss_bbox": 0.04482, "loss": 2.23642, "time": 0.35219}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 2569, "data_time": 0.09413, "loss_rpn_cls": 0.08962, "loss_rpn_bbox": 0.02436, "loss_cls": 0.37423, "acc": 96.08057, "loss_bbox": 0.15385, "loss": 0.64206, "time": 0.28294}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 2569, "data_time": 0.09461, "loss_rpn_cls": 0.08005, "loss_rpn_bbox": 0.02102, "loss_cls": 0.35063, "acc": 96.14404, "loss_bbox": 0.15185, "loss": 0.60356, "time": 0.28061}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 2569, "data_time": 0.0963, "loss_rpn_cls": 0.07337, "loss_rpn_bbox": 0.02035, "loss_cls": 0.34447, "acc": 95.94824, "loss_bbox": 0.16118, "loss": 0.59937, "time": 0.28211}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 2569, "data_time": 0.09993, "loss_rpn_cls": 0.07911, "loss_rpn_bbox": 0.02418, "loss_cls": 0.29678, "acc": 95.92236, "loss_bbox": 0.15908, "loss": 0.55914, "time": 0.28579}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 2569, "data_time": 0.09782, "loss_rpn_cls": 0.07128, "loss_rpn_bbox": 0.02, "loss_cls": 0.27127, "acc": 96.09863, "loss_bbox": 0.1538, "loss": 0.51635, "time": 0.28172}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 2569, "data_time": 0.09901, "loss_rpn_cls": 0.07004, "loss_rpn_bbox": 0.02336, "loss_cls": 0.29646, "acc": 95.37305, "loss_bbox": 0.18369, "loss": 0.57356, "time": 0.30645}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 2569, "data_time": 0.09938, "loss_rpn_cls": 0.06258, "loss_rpn_bbox": 0.02099, "loss_cls": 0.27756, "acc": 95.51465, "loss_bbox": 0.17691, "loss": 0.53804, "time": 0.31758}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 2569, "data_time": 0.09426, "loss_rpn_cls": 0.0675, "loss_rpn_bbox": 0.02205, "loss_cls": 0.28269, "acc": 95.62842, "loss_bbox": 0.17288, "loss": 0.54511, "time": 0.32423}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 2569, "data_time": 0.08568, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 72.97803, "loss_bbox": NaN, "loss": NaN, "time": 0.32828}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 2569, "data_time": 0.0933, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00928, "loss_bbox": NaN, "loss": NaN, "time": 0.32253}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 2569, "data_time": 0.09919, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00928, "loss_bbox": NaN, "loss": NaN, "time": 0.32199}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 2569, "data_time": 0.10054, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.50439, "loss_bbox": NaN, "loss": NaN, "time": 0.29346}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 2569, "data_time": 0.09771, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.50684, "loss_bbox": NaN, "loss": NaN, "time": 0.28225}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 2569, "data_time": 0.09572, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.76123, "loss_bbox": NaN, "loss": NaN, "time": 0.27696}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 2569, "data_time": 0.09348, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.51172, "loss_bbox": NaN, "loss": NaN, "time": 0.28414}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 2569, "data_time": 0.09822, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01318, "loss_bbox": NaN, "loss": NaN, "time": 0.28737}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 2569, "data_time": 0.09546, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.51074, "loss_bbox": NaN, "loss": NaN, "time": 0.28118}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 2569, "data_time": 0.09715, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00537, "loss_bbox": NaN, "loss": NaN, "time": 0.28216}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 2569, "data_time": 0.10426, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.75488, "loss_bbox": NaN, "loss": NaN, "time": 0.2859}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 2569, "data_time": 0.09406, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51074, "loss_bbox": NaN, "loss": NaN, "time": 0.28645}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 2569, "data_time": 0.09403, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00732, "loss_bbox": NaN, "loss": NaN, "time": 0.27723}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 2569, "data_time": 0.0945, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.25684, "loss_bbox": NaN, "loss": NaN, "time": 0.27803}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 2569, "data_time": 0.09311, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00781, "loss_bbox": NaN, "loss": NaN, "time": 0.2743}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 2569, "data_time": 0.0974, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01123, "loss_bbox": NaN, "loss": NaN, "time": 0.28371}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 2570, "data_time": 0.09748, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.25732, "loss_bbox": NaN, "loss": NaN, "time": 0.28212}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 2570, "data_time": 0.09328, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.51025, "loss_bbox": NaN, "loss": NaN, "time": 0.27742}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 2570, "data_time": 0.09765, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.26025, "loss_bbox": NaN, "loss": NaN, "time": 0.2789}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 2570, "data_time": 0.09421, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50879, "loss_bbox": NaN, "loss": NaN, "time": 0.28044}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 2570, "data_time": 0.09533, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.76465, "loss_bbox": NaN, "loss": NaN, "time": 0.27844}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 2570, "data_time": 0.09403, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75244, "loss_bbox": NaN, "loss": NaN, "time": 0.2863}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 2570, "data_time": 0.09435, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50977, "loss_bbox": NaN, "loss": NaN, "time": 0.28205}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 2570, "data_time": 0.09617, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.7627, "loss_bbox": NaN, "loss": NaN, "time": 0.27648}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 2570, "data_time": 0.09122, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.77588, "loss_bbox": NaN, "loss": NaN, "time": 0.27522}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 2570, "data_time": 0.09117, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.75781, "loss_bbox": NaN, "loss": NaN, "time": 0.27679}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 2570, "data_time": 0.09755, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75781, "loss_bbox": NaN, "loss": NaN, "time": 0.2796}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 2570, "data_time": 0.09675, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.00537, "loss_bbox": NaN, "loss": NaN, "time": 0.28174}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 2570, "data_time": 0.10254, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50732, "loss_bbox": NaN, "loss": NaN, "time": 0.2986}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 2570, "data_time": 0.0946, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.63477, "loss_bbox": NaN, "loss": NaN, "time": 0.28052}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 2570, "data_time": 0.09194, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75732, "loss_bbox": NaN, "loss": NaN, "time": 0.27647}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 2570, "data_time": 0.09947, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50781, "loss_bbox": NaN, "loss": NaN, "time": 0.28616}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 2570, "data_time": 0.09309, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75781, "loss_bbox": NaN, "loss": NaN, "time": 0.27884}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.02, "memory": 2570, "data_time": 0.10007, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.76172, "loss_bbox": NaN, "loss": NaN, "time": 0.28491}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.02, "memory": 2570, "data_time": 0.09311, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01074, "loss_bbox": NaN, "loss": NaN, "time": 0.27853}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.02, "memory": 2570, "data_time": 0.09625, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.38281, "loss_bbox": NaN, "loss": NaN, "time": 0.28281}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.02, "memory": 2570, "data_time": 0.09266, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51758, "loss_bbox": NaN, "loss": NaN, "time": 0.27701}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.02, "memory": 2570, "data_time": 0.09749, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.75586, "loss_bbox": NaN, "loss": NaN, "time": 0.28368}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.02, "memory": 2570, "data_time": 0.08949, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.75781, "loss_bbox": NaN, "loss": NaN, "time": 0.27927}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.02, "memory": 2570, "data_time": 0.09524, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25586, "loss_bbox": NaN, "loss": NaN, "time": 0.28177}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.02, "memory": 2570, "data_time": 0.09281, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50732, "loss_bbox": NaN, "loss": NaN, "time": 0.2789}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.02, "memory": 2570, "data_time": 0.09479, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.76025, "loss_bbox": NaN, "loss": NaN, "time": 0.27986}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.02, "memory": 2570, "data_time": 0.09345, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 3.50977, "loss_bbox": NaN, "loss": NaN, "time": 0.27998}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.02, "memory": 2570, "data_time": 0.09745, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25586, "loss_bbox": NaN, "loss": NaN, "time": 0.283}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.02, "memory": 2570, "data_time": 0.09288, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.5083, "loss_bbox": NaN, "loss": NaN, "time": 0.27898}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.02, "memory": 2570, "data_time": 0.09304, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.50781, "loss_bbox": NaN, "loss": NaN, "time": 0.27644}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.02, "memory": 2570, "data_time": 0.09496, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01123, "loss_bbox": NaN, "loss": NaN, "time": 0.28282}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.02, "memory": 2570, "data_time": 0.09586, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25635, "loss_bbox": NaN, "loss": NaN, "time": 0.27886}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.02, "memory": 2570, "data_time": 0.09643, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.50342, "loss_bbox": NaN, "loss": NaN, "time": 0.27935}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.02, "memory": 2570, "data_time": 0.09542, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.13135, "loss_bbox": NaN, "loss": NaN, "time": 0.27909}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.02, "memory": 2570, "data_time": 0.0981, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75977, "loss_bbox": NaN, "loss": NaN, "time": 0.29055}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.02, "memory": 2570, "data_time": 0.09807, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.76123, "loss_bbox": NaN, "loss": NaN, "time": 0.29909}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.02, "memory": 2570, "data_time": 0.09613, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.25488, "loss_bbox": NaN, "loss": NaN, "time": 0.29}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.02, "memory": 2570, "data_time": 0.09498, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.7583, "loss_bbox": NaN, "loss": NaN, "time": 0.28138}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.02, "memory": 2570, "data_time": 0.10445, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.76367, "loss_bbox": NaN, "loss": NaN, "time": 0.29334}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.02, "memory": 2570, "data_time": 0.09788, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.00781, "loss_bbox": NaN, "loss": NaN, "time": 0.29229}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.02, "memory": 2570, "data_time": 0.08846, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50684, "loss_bbox": NaN, "loss": NaN, "time": 0.27685}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.02, "memory": 2570, "data_time": 0.09559, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.25586, "loss_bbox": NaN, "loss": NaN, "time": 0.27986}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.02, "memory": 2570, "data_time": 0.09702, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.75537, "loss_bbox": NaN, "loss": NaN, "time": 0.28125}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.02, "memory": 2570, "data_time": 0.09414, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01611, "loss_bbox": NaN, "loss": NaN, "time": 0.28118}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.02, "memory": 2570, "data_time": 0.0933, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.26123, "loss_bbox": NaN, "loss": NaN, "time": 0.28396}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.02, "memory": 2570, "data_time": 0.09858, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.26074, "loss_bbox": NaN, "loss": NaN, "time": 0.28268}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.02, "memory": 2570, "data_time": 0.09967, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50537, "loss_bbox": NaN, "loss": NaN, "time": 0.28376}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.02, "memory": 2570, "data_time": 0.09713, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51855, "loss_bbox": NaN, "loss": NaN, "time": 0.28626}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.02, "memory": 2570, "data_time": 0.10099, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.26123, "loss_bbox": NaN, "loss": NaN, "time": 0.29087}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.02, "memory": 2570, "data_time": 0.09422, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.50146, "loss_bbox": NaN, "loss": NaN, "time": 0.28185}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.02, "memory": 2570, "data_time": 0.09504, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50684, "loss_bbox": NaN, "loss": NaN, "time": 0.28323}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.02, "memory": 2570, "data_time": 0.09594, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.75391, "loss_bbox": NaN, "loss": NaN, "time": 0.28624}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.02, "memory": 2570, "data_time": 0.09108, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 3.26318, "loss_bbox": NaN, "loss": NaN, "time": 0.28093}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.02, "memory": 2570, "data_time": 0.09625, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51855, "loss_bbox": NaN, "loss": NaN, "time": 0.28758}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.02, "memory": 2570, "data_time": 0.09768, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25879, "loss_bbox": NaN, "loss": NaN, "time": 0.28348}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.02, "memory": 2570, "data_time": 0.1057, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75977, "loss_bbox": NaN, "loss": NaN, "time": 0.29407}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.02, "memory": 2570, "data_time": 0.09931, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.76367, "loss_bbox": NaN, "loss": NaN, "time": 0.29325}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.02, "memory": 2570, "data_time": 0.09894, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01123, "loss_bbox": NaN, "loss": NaN, "time": 0.28431}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.02, "memory": 2570, "data_time": 0.09696, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01025, "loss_bbox": NaN, "loss": NaN, "time": 0.28699}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.02, "memory": 2570, "data_time": 0.0984, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51416, "loss_bbox": NaN, "loss": NaN, "time": 0.28131}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.02, "memory": 2570, "data_time": 0.09919, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.76465, "loss_bbox": NaN, "loss": NaN, "time": 0.28245}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.02, "memory": 2570, "data_time": 0.09997, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00781, "loss_bbox": NaN, "loss": NaN, "time": 0.28824}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.02, "memory": 2570, "data_time": 0.11504, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51025, "loss_bbox": NaN, "loss": NaN, "time": 0.30008}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.02, "memory": 2570, "data_time": 0.10231, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25586, "loss_bbox": NaN, "loss": NaN, "time": 0.3029}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.02, "memory": 2570, "data_time": 0.09082, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.50781, "loss_bbox": NaN, "loss": NaN, "time": 0.32683}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.02, "memory": 2570, "data_time": 0.10276, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75684, "loss_bbox": NaN, "loss": NaN, "time": 0.32574}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.02, "memory": 2570, "data_time": 0.10286, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.51074, "loss_bbox": NaN, "loss": NaN, "time": 0.32139}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.02, "memory": 2570, "data_time": 0.10308, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75781, "loss_bbox": NaN, "loss": NaN, "time": 0.32028}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.02, "memory": 2570, "data_time": 0.10402, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01025, "loss_bbox": NaN, "loss": NaN, "time": 0.32304}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.02, "memory": 2570, "data_time": 0.09912, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01074, "loss_bbox": NaN, "loss": NaN, "time": 0.31794}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.02, "memory": 2570, "data_time": 0.0985, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00928, "loss_bbox": NaN, "loss": NaN, "time": 0.289}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.02, "memory": 2570, "data_time": 0.10543, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.25732, "loss_bbox": NaN, "loss": NaN, "time": 0.31172}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.02, "memory": 2570, "data_time": 0.09239, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.6333, "loss_bbox": NaN, "loss": NaN, "time": 0.31475}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.02, "memory": 2570, "data_time": 0.09542, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00146, "loss_bbox": NaN, "loss": NaN, "time": 0.30986}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.02, "memory": 2570, "data_time": 0.09543, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.26123, "loss_bbox": NaN, "loss": NaN, "time": 0.31462}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.02, "memory": 2570, "data_time": 0.09458, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75732, "loss_bbox": NaN, "loss": NaN, "time": 0.31393}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.02, "memory": 2570, "data_time": 0.09452, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.0083, "loss_bbox": NaN, "loss": NaN, "time": 0.31009}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.02, "memory": 2570, "data_time": 0.10361, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.63477, "loss_bbox": NaN, "loss": NaN, "time": 0.31433}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.02, "memory": 2570, "data_time": 0.09173, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00879, "loss_bbox": NaN, "loss": NaN, "time": 0.30899}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.02, "memory": 2570, "data_time": 0.09585, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.00879, "loss_bbox": NaN, "loss": NaN, "time": 0.31315}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.02, "memory": 2570, "data_time": 0.09145, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.50879, "loss_bbox": NaN, "loss": NaN, "time": 0.31048}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.02, "memory": 2570, "data_time": 0.09723, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75684, "loss_bbox": NaN, "loss": NaN, "time": 0.31506}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.02, "memory": 2570, "data_time": 0.09776, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.62988, "loss_bbox": NaN, "loss": NaN, "time": 0.311}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.02, "memory": 2570, "data_time": 0.09974, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.00732, "loss_bbox": NaN, "loss": NaN, "time": 0.28763}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.02, "memory": 2570, "data_time": 0.10274, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.50781, "loss_bbox": NaN, "loss": NaN, "time": 0.28987}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.02, "memory": 2570, "data_time": 0.10065, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.13428, "loss_bbox": NaN, "loss": NaN, "time": 0.28696}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.02, "memory": 2570, "data_time": 0.10077, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.01416, "loss_bbox": NaN, "loss": NaN, "time": 0.28636}
{"mode": "train", "epoch": 1, "iter": 5650, "lr": 0.02, "memory": 2570, "data_time": 0.09769, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.88086, "loss_bbox": NaN, "loss": NaN, "time": 0.28805}
{"mode": "train", "epoch": 1, "iter": 5700, "lr": 0.02, "memory": 2570, "data_time": 0.10055, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01025, "loss_bbox": NaN, "loss": NaN, "time": 0.29176}
{"mode": "train", "epoch": 1, "iter": 5750, "lr": 0.02, "memory": 2570, "data_time": 0.10037, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.7627, "loss_bbox": NaN, "loss": NaN, "time": 0.2884}
{"mode": "train", "epoch": 1, "iter": 5800, "lr": 0.02, "memory": 2570, "data_time": 0.10216, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.25586, "loss_bbox": NaN, "loss": NaN, "time": 0.2905}
{"mode": "train", "epoch": 1, "iter": 5850, "lr": 0.02, "memory": 2570, "data_time": 0.10067, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.75488, "loss_bbox": NaN, "loss": NaN, "time": 0.28898}
{"mode": "train", "epoch": 1, "iter": 5900, "lr": 0.02, "memory": 2570, "data_time": 0.10001, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.01562, "loss_bbox": NaN, "loss": NaN, "time": 0.29008}
{"mode": "train", "epoch": 1, "iter": 5950, "lr": 0.02, "memory": 2570, "data_time": 0.10135, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.0127, "loss_bbox": NaN, "loss": NaN, "time": 0.29209}
{"mode": "train", "epoch": 1, "iter": 6000, "lr": 0.02, "memory": 2570, "data_time": 0.1031, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.99219, "loss_bbox": NaN, "loss": NaN, "time": 0.29081}
{"mode": "train", "epoch": 1, "iter": 6050, "lr": 0.02, "memory": 2570, "data_time": 0.10212, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.26221, "loss_bbox": NaN, "loss": NaN, "time": 0.29409}
{"mode": "train", "epoch": 1, "iter": 6100, "lr": 0.02, "memory": 2570, "data_time": 0.10244, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 0.26318, "loss_bbox": NaN, "loss": NaN, "time": 0.28792}
{"mode": "train", "epoch": 1, "iter": 6150, "lr": 0.02, "memory": 2570, "data_time": 0.10006, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 2.00146, "loss_bbox": NaN, "loss": NaN, "time": 0.28983}
{"mode": "train", "epoch": 1, "iter": 6200, "lr": 0.02, "memory": 2570, "data_time": 0.10125, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "loss_cls": NaN, "acc": 1.50391, "loss_bbox": NaN, "loss": NaN, "time": 0.28907}
