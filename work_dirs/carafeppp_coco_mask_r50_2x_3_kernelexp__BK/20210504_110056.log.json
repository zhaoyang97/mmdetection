{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='MaskRCNN',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet_carafed_3_kernelexp',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=80,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0),\n            upsample_cfg=dict(type='deconv', scale_factor=2))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        mask_size=28,\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100,\n        mask_thr_binary=0.5))\ndataset_type = 'CocoDataset'\ndata_root = '../data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        ann_file='../data/coco/annotations/instances_train2017.json',\n        img_prefix='../data/coco/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='../data/coco/annotations/instances_val2017.json',\n        img_prefix='../data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='../data/coco/annotations/image_info_test-dev2017.json',\n        img_prefix='../data/coco/test2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[16, 22])\ntotal_epochs = 24\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/carafeppp_coco_mask_r50_2x_3_kernelexp__BK'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "carafeppp_coco_mask_r50_2x_3_kernelexp__BK.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 8909, "data_time": 0.38597, "loss_rpn_cls": 0.44721, "loss_rpn_bbox": 0.10422, "loss_cls": 1.30266, "acc": 88.20532, "loss_bbox": 0.11035, "loss_mask": 0.75314, "loss": 2.71759, "time": 0.98449}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 8909, "data_time": 0.31285, "loss_rpn_cls": 0.26695, "loss_rpn_bbox": 0.0936, "loss_cls": 0.57925, "acc": 94.91553, "loss_bbox": 0.16818, "loss_mask": 0.68381, "loss": 1.79179, "time": 0.87168}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 8909, "data_time": 0.3316, "loss_rpn_cls": 0.26545, "loss_rpn_bbox": 0.09701, "loss_cls": 0.59714, "acc": 94.62476, "loss_bbox": 0.17525, "loss_mask": 0.67514, "loss": 1.80999, "time": 0.89147}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 8909, "data_time": 0.33166, "loss_rpn_cls": 0.27213, "loss_rpn_bbox": 0.10032, "loss_cls": 0.49817, "acc": 94.1604, "loss_bbox": 0.19155, "loss_mask": 0.66711, "loss": 1.72928, "time": 0.90403}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 8909, "data_time": 0.34401, "loss_rpn_cls": 0.26789, "loss_rpn_bbox": 0.10159, "loss_cls": 0.46261, "acc": 94.36133, "loss_bbox": 0.18457, "loss_mask": 0.65831, "loss": 1.67495, "time": 0.89598}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 8909, "data_time": 0.35065, "loss_rpn_cls": 0.26032, "loss_rpn_bbox": 0.09778, "loss_cls": 0.44991, "acc": 94.18335, "loss_bbox": 0.19463, "loss_mask": 0.65193, "loss": 1.65457, "time": 0.89184}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 8909, "data_time": 0.31386, "loss_rpn_cls": 0.24208, "loss_rpn_bbox": 0.09608, "loss_cls": 0.43346, "acc": 94.06812, "loss_bbox": 0.20327, "loss_mask": 0.64477, "loss": 1.61967, "time": 0.87396}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 8912, "data_time": 0.33985, "loss_rpn_cls": 0.26194, "loss_rpn_bbox": 0.09901, "loss_cls": 0.46401, "acc": 93.93018, "loss_bbox": 0.20448, "loss_mask": 0.63547, "loss": 1.66491, "time": 0.89928}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 8912, "data_time": 0.30276, "loss_rpn_cls": 0.2269, "loss_rpn_bbox": 0.09801, "loss_cls": 0.44402, "acc": 93.7915, "loss_bbox": 0.21378, "loss_mask": 0.62952, "loss": 1.61223, "time": 0.88726}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 8912, "data_time": 0.32154, "loss_rpn_cls": 0.22877, "loss_rpn_bbox": 0.09418, "loss_cls": 0.4493, "acc": 93.72388, "loss_bbox": 0.21568, "loss_mask": 0.62731, "loss": 1.61524, "time": 0.89211}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 8912, "data_time": 0.31627, "loss_rpn_cls": 0.22133, "loss_rpn_bbox": 0.09218, "loss_cls": 0.43951, "acc": 93.76587, "loss_bbox": 0.21344, "loss_mask": 0.6181, "loss": 1.58455, "time": 0.8723}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 8912, "data_time": 0.31308, "loss_rpn_cls": 0.21505, "loss_rpn_bbox": 0.09474, "loss_cls": 0.4367, "acc": 93.65234, "loss_bbox": 0.21505, "loss_mask": 0.61352, "loss": 1.57506, "time": 0.88015}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 8912, "data_time": 0.33947, "loss_rpn_cls": 0.22798, "loss_rpn_bbox": 0.09948, "loss_cls": 0.41884, "acc": 93.79688, "loss_bbox": 0.20799, "loss_mask": 0.60762, "loss": 1.56191, "time": 0.89079}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 8922, "data_time": 0.32621, "loss_rpn_cls": 0.22332, "loss_rpn_bbox": 0.09716, "loss_cls": 0.42372, "acc": 93.52905, "loss_bbox": 0.21665, "loss_mask": 0.59309, "loss": 1.55394, "time": 0.90735}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 8922, "data_time": 0.3251, "loss_rpn_cls": 0.22389, "loss_rpn_bbox": 0.09643, "loss_cls": 0.44378, "acc": 93.26392, "loss_bbox": 0.22892, "loss_mask": 0.60041, "loss": 1.59343, "time": 0.89423}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 8922, "data_time": 0.32275, "loss_rpn_cls": 0.2072, "loss_rpn_bbox": 0.0964, "loss_cls": 0.44052, "acc": 93.2832, "loss_bbox": 0.22832, "loss_mask": 0.59145, "loss": 1.56389, "time": 0.89334}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 8922, "data_time": 0.32648, "loss_rpn_cls": 0.21947, "loss_rpn_bbox": 0.09518, "loss_cls": 0.41296, "acc": 93.76709, "loss_bbox": 0.20787, "loss_mask": 0.58452, "loss": 1.52, "time": 0.89795}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 8922, "data_time": 0.33068, "loss_rpn_cls": 0.20168, "loss_rpn_bbox": 0.09354, "loss_cls": 0.41855, "acc": 93.62939, "loss_bbox": 0.21317, "loss_mask": 0.59116, "loss": 1.51809, "time": 0.88644}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 8922, "data_time": 0.32796, "loss_rpn_cls": 0.20275, "loss_rpn_bbox": 0.09311, "loss_cls": 0.43269, "acc": 93.45459, "loss_bbox": 0.22161, "loss_mask": 0.58379, "loss": 1.53395, "time": 0.90018}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 9079, "data_time": 0.29927, "loss_rpn_cls": 0.20522, "loss_rpn_bbox": 0.09191, "loss_cls": 0.43822, "acc": 93.17749, "loss_bbox": 0.22993, "loss_mask": 0.58033, "loss": 1.5456, "time": 0.89161}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 9079, "data_time": 0.32169, "loss_rpn_cls": 0.19921, "loss_rpn_bbox": 0.09088, "loss_cls": 0.4449, "acc": 93.06592, "loss_bbox": 0.23308, "loss_mask": 0.57517, "loss": 1.54323, "time": 0.8994}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 9079, "data_time": 0.33371, "loss_rpn_cls": 0.17374, "loss_rpn_bbox": 0.08789, "loss_cls": 0.43788, "acc": 93.00537, "loss_bbox": 0.23929, "loss_mask": 0.57586, "loss": 1.51466, "time": 0.87846}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 9079, "data_time": 0.32586, "loss_rpn_cls": 0.18774, "loss_rpn_bbox": 0.0971, "loss_cls": 0.44171, "acc": 93.07153, "loss_bbox": 0.23426, "loss_mask": 0.57104, "loss": 1.53186, "time": 0.89717}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 9079, "data_time": 0.32725, "loss_rpn_cls": 0.19424, "loss_rpn_bbox": 0.09701, "loss_cls": 0.44361, "acc": 92.8064, "loss_bbox": 0.24006, "loss_mask": 0.5657, "loss": 1.54063, "time": 0.90029}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 9079, "data_time": 0.32647, "loss_rpn_cls": 0.17614, "loss_rpn_bbox": 0.08716, "loss_cls": 0.44603, "acc": 92.88574, "loss_bbox": 0.24172, "loss_mask": 0.56185, "loss": 1.51289, "time": 0.88674}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 9079, "data_time": 0.34286, "loss_rpn_cls": 0.17548, "loss_rpn_bbox": 0.08803, "loss_cls": 0.44531, "acc": 92.90747, "loss_bbox": 0.23949, "loss_mask": 0.55104, "loss": 1.49934, "time": 0.89734}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 9079, "data_time": 0.32316, "loss_rpn_cls": 0.18909, "loss_rpn_bbox": 0.09589, "loss_cls": 0.46179, "acc": 92.48193, "loss_bbox": 0.25436, "loss_mask": 0.55635, "loss": 1.55748, "time": 0.90541}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 9079, "data_time": 0.30525, "loss_rpn_cls": 0.17381, "loss_rpn_bbox": 0.08733, "loss_cls": 0.4371, "acc": 92.88672, "loss_bbox": 0.24006, "loss_mask": 0.54531, "loss": 1.48362, "time": 0.87463}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 9079, "data_time": 0.32768, "loss_rpn_cls": 0.17448, "loss_rpn_bbox": 0.089, "loss_cls": 0.45283, "acc": 92.4436, "loss_bbox": 0.25594, "loss_mask": 0.54883, "loss": 1.52109, "time": 0.89896}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 9079, "data_time": 0.33176, "loss_rpn_cls": 0.18497, "loss_rpn_bbox": 0.09545, "loss_cls": 0.46377, "acc": 92.38354, "loss_bbox": 0.25623, "loss_mask": 0.54799, "loss": 1.54842, "time": 0.89494}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 9079, "data_time": 0.32907, "loss_rpn_cls": 0.16279, "loss_rpn_bbox": 0.08875, "loss_cls": 0.44119, "acc": 92.79102, "loss_bbox": 0.24191, "loss_mask": 0.54688, "loss": 1.48152, "time": 0.88866}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 9079, "data_time": 0.33568, "loss_rpn_cls": 0.17149, "loss_rpn_bbox": 0.09074, "loss_cls": 0.45741, "acc": 92.45215, "loss_bbox": 0.25357, "loss_mask": 0.54162, "loss": 1.51483, "time": 0.89851}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 9079, "data_time": 0.34697, "loss_rpn_cls": 0.16206, "loss_rpn_bbox": 0.08903, "loss_cls": 0.44082, "acc": 92.6604, "loss_bbox": 0.2437, "loss_mask": 0.54247, "loss": 1.47809, "time": 0.89451}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 9079, "data_time": 0.34324, "loss_rpn_cls": 0.16218, "loss_rpn_bbox": 0.08438, "loss_cls": 0.45992, "acc": 92.37744, "loss_bbox": 0.25325, "loss_mask": 0.54607, "loss": 1.5058, "time": 0.90689}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 9079, "data_time": 0.33607, "loss_rpn_cls": 0.1647, "loss_rpn_bbox": 0.09108, "loss_cls": 0.48586, "acc": 91.88257, "loss_bbox": 0.2714, "loss_mask": 0.5338, "loss": 1.54683, "time": 0.89853}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 9079, "data_time": 0.33012, "loss_rpn_cls": 0.16806, "loss_rpn_bbox": 0.09094, "loss_cls": 0.45379, "acc": 92.48853, "loss_bbox": 0.24921, "loss_mask": 0.53825, "loss": 1.50024, "time": 0.89736}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 9079, "data_time": 0.33473, "loss_rpn_cls": 0.15995, "loss_rpn_bbox": 0.0901, "loss_cls": 0.45635, "acc": 92.36768, "loss_bbox": 0.25383, "loss_mask": 0.52818, "loss": 1.48841, "time": 0.90052}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 9079, "data_time": 0.32467, "loss_rpn_cls": 0.15818, "loss_rpn_bbox": 0.08851, "loss_cls": 0.45, "acc": 92.43579, "loss_bbox": 0.25062, "loss_mask": 0.52784, "loss": 1.47514, "time": 0.8953}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 9079, "data_time": 0.33435, "loss_rpn_cls": 0.15514, "loss_rpn_bbox": 0.09059, "loss_cls": 0.4602, "acc": 91.93262, "loss_bbox": 0.26816, "loss_mask": 0.52676, "loss": 1.50085, "time": 0.89157}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 9079, "data_time": 0.33461, "loss_rpn_cls": 0.1547, "loss_rpn_bbox": 0.08534, "loss_cls": 0.46739, "acc": 91.93262, "loss_bbox": 0.26596, "loss_mask": 0.52579, "loss": 1.49918, "time": 0.89315}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 9079, "data_time": 0.32648, "loss_rpn_cls": 0.15562, "loss_rpn_bbox": 0.08831, "loss_cls": 0.4596, "acc": 92.16699, "loss_bbox": 0.25877, "loss_mask": 0.52955, "loss": 1.49185, "time": 0.89699}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 9079, "data_time": 0.3167, "loss_rpn_cls": 0.14081, "loss_rpn_bbox": 0.08234, "loss_cls": 0.45438, "acc": 92.11328, "loss_bbox": 0.26016, "loss_mask": 0.51094, "loss": 1.44863, "time": 0.88107}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.02, "memory": 9079, "data_time": 0.32389, "loss_rpn_cls": 0.14526, "loss_rpn_bbox": 0.0825, "loss_cls": 0.44893, "acc": 92.10913, "loss_bbox": 0.25736, "loss_mask": 0.51139, "loss": 1.44543, "time": 0.87643}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.02, "memory": 9079, "data_time": 0.32479, "loss_rpn_cls": 0.15136, "loss_rpn_bbox": 0.08958, "loss_cls": 0.46741, "acc": 91.95459, "loss_bbox": 0.26432, "loss_mask": 0.51178, "loss": 1.48445, "time": 0.90591}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.02, "memory": 9079, "data_time": 0.3256, "loss_rpn_cls": 0.14123, "loss_rpn_bbox": 0.08431, "loss_cls": 0.44982, "acc": 92.25659, "loss_bbox": 0.24942, "loss_mask": 0.50979, "loss": 1.43456, "time": 0.88977}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.02, "memory": 9079, "data_time": 0.31423, "loss_rpn_cls": 0.14353, "loss_rpn_bbox": 0.08671, "loss_cls": 0.45764, "acc": 91.85156, "loss_bbox": 0.26585, "loss_mask": 0.51184, "loss": 1.46557, "time": 0.90356}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.02, "memory": 9079, "data_time": 0.29659, "loss_rpn_cls": 0.14052, "loss_rpn_bbox": 0.08617, "loss_cls": 0.45149, "acc": 92.13672, "loss_bbox": 0.25661, "loss_mask": 0.50785, "loss": 1.44264, "time": 0.88557}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.02, "memory": 9079, "data_time": 0.32077, "loss_rpn_cls": 0.14168, "loss_rpn_bbox": 0.08623, "loss_cls": 0.45751, "acc": 91.90479, "loss_bbox": 0.26236, "loss_mask": 0.50479, "loss": 1.45257, "time": 0.89043}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.02, "memory": 9079, "data_time": 0.31623, "loss_rpn_cls": 0.14427, "loss_rpn_bbox": 0.08412, "loss_cls": 0.46326, "acc": 91.72803, "loss_bbox": 0.2682, "loss_mask": 0.50398, "loss": 1.46382, "time": 0.89139}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.02, "memory": 9079, "data_time": 0.31502, "loss_rpn_cls": 0.14415, "loss_rpn_bbox": 0.08274, "loss_cls": 0.45705, "acc": 91.89795, "loss_bbox": 0.26061, "loss_mask": 0.48985, "loss": 1.4344, "time": 0.89557}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.02, "memory": 9079, "data_time": 0.33396, "loss_rpn_cls": 0.1378, "loss_rpn_bbox": 0.08381, "loss_cls": 0.46114, "acc": 91.87646, "loss_bbox": 0.26309, "loss_mask": 0.50757, "loss": 1.45341, "time": 0.90295}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.02, "memory": 9079, "data_time": 0.32324, "loss_rpn_cls": 0.13578, "loss_rpn_bbox": 0.08224, "loss_cls": 0.46626, "acc": 91.58594, "loss_bbox": 0.2735, "loss_mask": 0.49734, "loss": 1.45513, "time": 0.90429}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.02, "memory": 9079, "data_time": 0.32576, "loss_rpn_cls": 0.14314, "loss_rpn_bbox": 0.08633, "loss_cls": 0.47172, "acc": 91.52075, "loss_bbox": 0.27256, "loss_mask": 0.49276, "loss": 1.46651, "time": 0.90801}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.02, "memory": 9079, "data_time": 0.34163, "loss_rpn_cls": 0.14476, "loss_rpn_bbox": 0.08584, "loss_cls": 0.4623, "acc": 91.54028, "loss_bbox": 0.27142, "loss_mask": 0.49887, "loss": 1.46319, "time": 0.9182}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.02, "memory": 9079, "data_time": 0.31285, "loss_rpn_cls": 0.13531, "loss_rpn_bbox": 0.08071, "loss_cls": 0.44152, "acc": 91.92188, "loss_bbox": 0.25549, "loss_mask": 0.47898, "loss": 1.39201, "time": 0.89283}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.02, "memory": 9079, "data_time": 0.31664, "loss_rpn_cls": 0.13253, "loss_rpn_bbox": 0.08232, "loss_cls": 0.45126, "acc": 91.75708, "loss_bbox": 0.26101, "loss_mask": 0.48879, "loss": 1.41591, "time": 0.88331}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.02, "memory": 9088, "data_time": 0.29497, "loss_rpn_cls": 0.13242, "loss_rpn_bbox": 0.08397, "loss_cls": 0.46224, "acc": 91.5083, "loss_bbox": 0.27168, "loss_mask": 0.48708, "loss": 1.43737, "time": 0.90246}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.02, "memory": 9088, "data_time": 0.3209, "loss_rpn_cls": 0.12965, "loss_rpn_bbox": 0.08148, "loss_cls": 0.45156, "acc": 91.66235, "loss_bbox": 0.26594, "loss_mask": 0.48651, "loss": 1.41515, "time": 0.89528}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.02, "memory": 9088, "data_time": 0.31155, "loss_rpn_cls": 0.12727, "loss_rpn_bbox": 0.08459, "loss_cls": 0.45989, "acc": 91.44653, "loss_bbox": 0.27014, "loss_mask": 0.47746, "loss": 1.41935, "time": 0.89958}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.02, "memory": 9088, "data_time": 0.30846, "loss_rpn_cls": 0.14002, "loss_rpn_bbox": 0.09004, "loss_cls": 0.45367, "acc": 91.62988, "loss_bbox": 0.26356, "loss_mask": 0.48329, "loss": 1.43057, "time": 0.90449}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.02, "memory": 9088, "data_time": 0.33558, "loss_rpn_cls": 0.13283, "loss_rpn_bbox": 0.08258, "loss_cls": 0.4724, "acc": 91.12378, "loss_bbox": 0.28262, "loss_mask": 0.48379, "loss": 1.45421, "time": 0.90819}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.02, "memory": 9088, "data_time": 0.32004, "loss_rpn_cls": 0.12712, "loss_rpn_bbox": 0.08005, "loss_cls": 0.44499, "acc": 91.6001, "loss_bbox": 0.26655, "loss_mask": 0.47541, "loss": 1.39413, "time": 0.90685}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.02, "memory": 9088, "data_time": 0.32054, "loss_rpn_cls": 0.11866, "loss_rpn_bbox": 0.0835, "loss_cls": 0.45502, "acc": 91.51318, "loss_bbox": 0.27137, "loss_mask": 0.4802, "loss": 1.40874, "time": 0.88989}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.02, "memory": 9088, "data_time": 0.32095, "loss_rpn_cls": 0.13212, "loss_rpn_bbox": 0.08309, "loss_cls": 0.45475, "acc": 91.52344, "loss_bbox": 0.26776, "loss_mask": 0.47764, "loss": 1.41535, "time": 0.89409}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.02, "memory": 9088, "data_time": 0.32278, "loss_rpn_cls": 0.12194, "loss_rpn_bbox": 0.08003, "loss_cls": 0.4764, "acc": 90.82031, "loss_bbox": 0.28805, "loss_mask": 0.47291, "loss": 1.43933, "time": 0.89735}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.02, "memory": 9088, "data_time": 0.32278, "loss_rpn_cls": 0.12852, "loss_rpn_bbox": 0.0851, "loss_cls": 0.46696, "acc": 91.11743, "loss_bbox": 0.2813, "loss_mask": 0.47909, "loss": 1.44097, "time": 0.90792}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.02, "memory": 9088, "data_time": 0.32853, "loss_rpn_cls": 0.12902, "loss_rpn_bbox": 0.07737, "loss_cls": 0.45676, "acc": 91.51318, "loss_bbox": 0.26607, "loss_mask": 0.47195, "loss": 1.40117, "time": 0.88471}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.02, "memory": 9088, "data_time": 0.33962, "loss_rpn_cls": 0.12963, "loss_rpn_bbox": 0.08579, "loss_cls": 0.44292, "acc": 91.43481, "loss_bbox": 0.26598, "loss_mask": 0.4683, "loss": 1.39262, "time": 0.90729}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.02, "memory": 9088, "data_time": 0.30194, "loss_rpn_cls": 0.12736, "loss_rpn_bbox": 0.08542, "loss_cls": 0.4597, "acc": 91.18457, "loss_bbox": 0.279, "loss_mask": 0.4705, "loss": 1.42198, "time": 0.89277}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.02, "memory": 9088, "data_time": 0.33371, "loss_rpn_cls": 0.12402, "loss_rpn_bbox": 0.07959, "loss_cls": 0.45397, "acc": 91.04077, "loss_bbox": 0.28074, "loss_mask": 0.46714, "loss": 1.40545, "time": 0.89868}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.02, "memory": 9088, "data_time": 0.33251, "loss_rpn_cls": 0.12006, "loss_rpn_bbox": 0.08076, "loss_cls": 0.46692, "acc": 91.00708, "loss_bbox": 0.28049, "loss_mask": 0.47016, "loss": 1.4184, "time": 0.90058}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.02, "memory": 9088, "data_time": 0.3229, "loss_rpn_cls": 0.12069, "loss_rpn_bbox": 0.07741, "loss_cls": 0.45256, "acc": 91.12451, "loss_bbox": 0.27347, "loss_mask": 0.46229, "loss": 1.38641, "time": 0.90534}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.02, "memory": 9088, "data_time": 0.34097, "loss_rpn_cls": 0.12572, "loss_rpn_bbox": 0.0847, "loss_cls": 0.45555, "acc": 91.19946, "loss_bbox": 0.2733, "loss_mask": 0.45963, "loss": 1.3989, "time": 0.91665}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.02, "memory": 9088, "data_time": 0.3355, "loss_rpn_cls": 0.11873, "loss_rpn_bbox": 0.0818, "loss_cls": 0.45386, "acc": 91.05542, "loss_bbox": 0.27819, "loss_mask": 0.45365, "loss": 1.38623, "time": 0.91548}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.02, "memory": 9088, "data_time": 0.33613, "loss_rpn_cls": 0.12738, "loss_rpn_bbox": 0.08633, "loss_cls": 0.46406, "acc": 90.98779, "loss_bbox": 0.28091, "loss_mask": 0.46713, "loss": 1.42581, "time": 0.90295}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.02, "memory": 9088, "data_time": 0.32555, "loss_rpn_cls": 0.11378, "loss_rpn_bbox": 0.0795, "loss_cls": 0.4552, "acc": 91.04883, "loss_bbox": 0.27928, "loss_mask": 0.45636, "loss": 1.38412, "time": 0.89416}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.02, "memory": 9088, "data_time": 0.3334, "loss_rpn_cls": 0.12223, "loss_rpn_bbox": 0.08214, "loss_cls": 0.45869, "acc": 91.03833, "loss_bbox": 0.27975, "loss_mask": 0.46508, "loss": 1.40789, "time": 0.91207}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.02, "memory": 9088, "data_time": 0.32029, "loss_rpn_cls": 0.11104, "loss_rpn_bbox": 0.07689, "loss_cls": 0.46652, "acc": 90.65234, "loss_bbox": 0.29174, "loss_mask": 0.45605, "loss": 1.40225, "time": 0.89708}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.02, "memory": 9088, "data_time": 0.31559, "loss_rpn_cls": 0.11484, "loss_rpn_bbox": 0.07722, "loss_cls": 0.43988, "acc": 91.40771, "loss_bbox": 0.26707, "loss_mask": 0.45622, "loss": 1.35522, "time": 0.89306}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.02, "memory": 9088, "data_time": 0.31842, "loss_rpn_cls": 0.1134, "loss_rpn_bbox": 0.07883, "loss_cls": 0.44804, "acc": 91.26538, "loss_bbox": 0.26955, "loss_mask": 0.45844, "loss": 1.36825, "time": 0.89417}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.02, "memory": 9088, "data_time": 0.31432, "loss_rpn_cls": 0.11668, "loss_rpn_bbox": 0.08047, "loss_cls": 0.43101, "acc": 91.46362, "loss_bbox": 0.26562, "loss_mask": 0.45507, "loss": 1.34886, "time": 0.88665}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.02, "memory": 9088, "data_time": 0.30092, "loss_rpn_cls": 0.11773, "loss_rpn_bbox": 0.07944, "loss_cls": 0.43195, "acc": 91.38647, "loss_bbox": 0.26467, "loss_mask": 0.4555, "loss": 1.3493, "time": 0.87957}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.02, "memory": 9088, "data_time": 0.32173, "loss_rpn_cls": 0.11875, "loss_rpn_bbox": 0.08109, "loss_cls": 0.46547, "acc": 90.78198, "loss_bbox": 0.28205, "loss_mask": 0.46005, "loss": 1.40741, "time": 0.8895}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.02, "memory": 9088, "data_time": 0.29521, "loss_rpn_cls": 0.1167, "loss_rpn_bbox": 0.07751, "loss_cls": 0.43796, "acc": 91.25122, "loss_bbox": 0.27052, "loss_mask": 0.44502, "loss": 1.34771, "time": 0.87389}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.02, "memory": 9100, "data_time": 0.30276, "loss_rpn_cls": 0.11842, "loss_rpn_bbox": 0.08036, "loss_cls": 0.44487, "acc": 91.08276, "loss_bbox": 0.27556, "loss_mask": 0.45233, "loss": 1.37155, "time": 0.8817}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.02, "memory": 9100, "data_time": 0.29956, "loss_rpn_cls": 0.11937, "loss_rpn_bbox": 0.0788, "loss_cls": 0.44527, "acc": 91.05444, "loss_bbox": 0.27852, "loss_mask": 0.45304, "loss": 1.37499, "time": 0.88574}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.02, "memory": 9100, "data_time": 0.32205, "loss_rpn_cls": 0.11327, "loss_rpn_bbox": 0.07511, "loss_cls": 0.43536, "acc": 91.32397, "loss_bbox": 0.26759, "loss_mask": 0.44734, "loss": 1.33867, "time": 0.87122}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.02, "memory": 9100, "data_time": 0.30007, "loss_rpn_cls": 0.1132, "loss_rpn_bbox": 0.0774, "loss_cls": 0.44553, "acc": 91.03442, "loss_bbox": 0.27571, "loss_mask": 0.44762, "loss": 1.35946, "time": 0.87364}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.02, "memory": 9100, "data_time": 0.31835, "loss_rpn_cls": 0.11741, "loss_rpn_bbox": 0.07565, "loss_cls": 0.4411, "acc": 91.2041, "loss_bbox": 0.26862, "loss_mask": 0.44095, "loss": 1.34373, "time": 0.89058}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.02, "memory": 9100, "data_time": 0.32695, "loss_rpn_cls": 0.11482, "loss_rpn_bbox": 0.079, "loss_cls": 0.42862, "acc": 91.2439, "loss_bbox": 0.26764, "loss_mask": 0.43475, "loss": 1.32483, "time": 0.88205}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.02, "memory": 9100, "data_time": 0.31871, "loss_rpn_cls": 0.11144, "loss_rpn_bbox": 0.07422, "loss_cls": 0.41668, "acc": 91.54077, "loss_bbox": 0.25667, "loss_mask": 0.44316, "loss": 1.30216, "time": 0.87755}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.02, "memory": 9100, "data_time": 0.297, "loss_rpn_cls": 0.10493, "loss_rpn_bbox": 0.07364, "loss_cls": 0.41918, "acc": 91.56689, "loss_bbox": 0.25847, "loss_mask": 0.44396, "loss": 1.30018, "time": 0.86162}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.02, "memory": 9100, "data_time": 0.31931, "loss_rpn_cls": 0.11589, "loss_rpn_bbox": 0.08001, "loss_cls": 0.44314, "acc": 90.94312, "loss_bbox": 0.27699, "loss_mask": 0.44288, "loss": 1.3589, "time": 0.89492}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.02, "memory": 9100, "data_time": 0.31074, "loss_rpn_cls": 0.10884, "loss_rpn_bbox": 0.0734, "loss_cls": 0.43213, "acc": 91.27734, "loss_bbox": 0.26812, "loss_mask": 0.43992, "loss": 1.3224, "time": 0.8718}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.02, "memory": 9100, "data_time": 0.32933, "loss_rpn_cls": 0.11677, "loss_rpn_bbox": 0.08149, "loss_cls": 0.4467, "acc": 90.89795, "loss_bbox": 0.28361, "loss_mask": 0.4462, "loss": 1.37478, "time": 0.8855}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.02, "memory": 9100, "data_time": 0.31707, "loss_rpn_cls": 0.11004, "loss_rpn_bbox": 0.07996, "loss_cls": 0.41104, "acc": 91.57959, "loss_bbox": 0.25591, "loss_mask": 0.4429, "loss": 1.29986, "time": 0.87524}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.02, "memory": 9100, "data_time": 0.34877, "loss_rpn_cls": 0.11597, "loss_rpn_bbox": 0.07643, "loss_cls": 0.43709, "acc": 90.99902, "loss_bbox": 0.2765, "loss_mask": 0.43544, "loss": 1.34143, "time": 0.88995}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.02, "memory": 9100, "data_time": 0.33344, "loss_rpn_cls": 0.11309, "loss_rpn_bbox": 0.08335, "loss_cls": 0.42294, "acc": 91.22485, "loss_bbox": 0.26683, "loss_mask": 0.43915, "loss": 1.32536, "time": 0.89622}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.02, "memory": 9100, "data_time": 0.33099, "loss_rpn_cls": 0.11558, "loss_rpn_bbox": 0.08241, "loss_cls": 0.43198, "acc": 90.88428, "loss_bbox": 0.27916, "loss_mask": 0.4411, "loss": 1.35024, "time": 0.90203}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.02, "memory": 9100, "data_time": 0.31851, "loss_rpn_cls": 0.10391, "loss_rpn_bbox": 0.07192, "loss_cls": 0.42527, "acc": 91.3562, "loss_bbox": 0.26367, "loss_mask": 0.43159, "loss": 1.29636, "time": 0.87351}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.02, "memory": 9101, "data_time": 0.34334, "loss_rpn_cls": 0.10653, "loss_rpn_bbox": 0.07658, "loss_cls": 0.43598, "acc": 90.97729, "loss_bbox": 0.27769, "loss_mask": 0.43273, "loss": 1.32951, "time": 0.88793}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.02, "memory": 9101, "data_time": 0.31834, "loss_rpn_cls": 0.10387, "loss_rpn_bbox": 0.07159, "loss_cls": 0.43884, "acc": 91.06055, "loss_bbox": 0.27347, "loss_mask": 0.43442, "loss": 1.32218, "time": 0.87541}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.02, "memory": 9101, "data_time": 0.33732, "loss_rpn_cls": 0.10961, "loss_rpn_bbox": 0.07868, "loss_cls": 0.42308, "acc": 91.15381, "loss_bbox": 0.27213, "loss_mask": 0.43583, "loss": 1.31932, "time": 0.89078}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.02, "memory": 9101, "data_time": 0.34793, "loss_rpn_cls": 0.1152, "loss_rpn_bbox": 0.07994, "loss_cls": 0.43468, "acc": 90.97559, "loss_bbox": 0.2696, "loss_mask": 0.43336, "loss": 1.33278, "time": 0.89989}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.02, "memory": 9101, "data_time": 0.3343, "loss_rpn_cls": 0.1109, "loss_rpn_bbox": 0.07976, "loss_cls": 0.44768, "acc": 90.73682, "loss_bbox": 0.28317, "loss_mask": 0.44024, "loss": 1.36175, "time": 0.90265}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.02, "memory": 9101, "data_time": 0.34291, "loss_rpn_cls": 0.10433, "loss_rpn_bbox": 0.07815, "loss_cls": 0.44051, "acc": 90.86865, "loss_bbox": 0.28015, "loss_mask": 0.44725, "loss": 1.35039, "time": 0.89712}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.02, "memory": 9101, "data_time": 0.33166, "loss_rpn_cls": 0.10729, "loss_rpn_bbox": 0.0768, "loss_cls": 0.43618, "acc": 90.87915, "loss_bbox": 0.28143, "loss_mask": 0.43211, "loss": 1.33381, "time": 0.87337}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.02, "memory": 9101, "data_time": 0.32729, "loss_rpn_cls": 0.10526, "loss_rpn_bbox": 0.07386, "loss_cls": 0.43275, "acc": 90.98633, "loss_bbox": 0.27458, "loss_mask": 0.43263, "loss": 1.31908, "time": 0.89319}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.02, "memory": 9101, "data_time": 0.31848, "loss_rpn_cls": 0.11035, "loss_rpn_bbox": 0.08027, "loss_cls": 0.42721, "acc": 90.95215, "loss_bbox": 0.27598, "loss_mask": 0.42594, "loss": 1.31975, "time": 0.8827}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.02, "memory": 9101, "data_time": 0.32879, "loss_rpn_cls": 0.10397, "loss_rpn_bbox": 0.07727, "loss_cls": 0.43186, "acc": 90.8103, "loss_bbox": 0.28226, "loss_mask": 0.43031, "loss": 1.32567, "time": 0.88423}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.02, "memory": 9101, "data_time": 0.31029, "loss_rpn_cls": 0.1041, "loss_rpn_bbox": 0.07777, "loss_cls": 0.42939, "acc": 90.95386, "loss_bbox": 0.27938, "loss_mask": 0.43081, "loss": 1.32145, "time": 0.86553}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.02, "memory": 9101, "data_time": 0.32936, "loss_rpn_cls": 0.10546, "loss_rpn_bbox": 0.07314, "loss_cls": 0.42525, "acc": 91.05933, "loss_bbox": 0.27125, "loss_mask": 0.42136, "loss": 1.29646, "time": 0.88246}
{"mode": "train", "epoch": 1, "iter": 5650, "lr": 0.02, "memory": 9101, "data_time": 0.33041, "loss_rpn_cls": 0.11446, "loss_rpn_bbox": 0.08179, "loss_cls": 0.44715, "acc": 90.90845, "loss_bbox": 0.27426, "loss_mask": 0.432, "loss": 1.34966, "time": 0.89844}
{"mode": "train", "epoch": 1, "iter": 5700, "lr": 0.02, "memory": 9127, "data_time": 0.32061, "loss_rpn_cls": 0.10315, "loss_rpn_bbox": 0.07571, "loss_cls": 0.42553, "acc": 90.74731, "loss_bbox": 0.28213, "loss_mask": 0.42016, "loss": 1.30669, "time": 0.89339}
{"mode": "train", "epoch": 1, "iter": 5750, "lr": 0.02, "memory": 9127, "data_time": 0.33425, "loss_rpn_cls": 0.10666, "loss_rpn_bbox": 0.07846, "loss_cls": 0.43327, "acc": 90.81567, "loss_bbox": 0.28019, "loss_mask": 0.43448, "loss": 1.33306, "time": 0.89522}
{"mode": "train", "epoch": 1, "iter": 5800, "lr": 0.02, "memory": 9127, "data_time": 0.33655, "loss_rpn_cls": 0.11024, "loss_rpn_bbox": 0.08058, "loss_cls": 0.44255, "acc": 90.63354, "loss_bbox": 0.28449, "loss_mask": 0.42727, "loss": 1.34514, "time": 0.89816}
{"mode": "train", "epoch": 1, "iter": 5850, "lr": 0.02, "memory": 9127, "data_time": 0.31508, "loss_rpn_cls": 0.10016, "loss_rpn_bbox": 0.07318, "loss_cls": 0.41906, "acc": 91.03198, "loss_bbox": 0.26968, "loss_mask": 0.41533, "loss": 1.27741, "time": 0.87824}
{"mode": "train", "epoch": 1, "iter": 5900, "lr": 0.02, "memory": 9127, "data_time": 0.33426, "loss_rpn_cls": 0.10605, "loss_rpn_bbox": 0.0819, "loss_cls": 0.4473, "acc": 90.36011, "loss_bbox": 0.29121, "loss_mask": 0.42851, "loss": 1.35497, "time": 0.91311}
{"mode": "train", "epoch": 1, "iter": 5950, "lr": 0.02, "memory": 9127, "data_time": 0.33161, "loss_rpn_cls": 0.09546, "loss_rpn_bbox": 0.07191, "loss_cls": 0.41544, "acc": 90.92261, "loss_bbox": 0.27709, "loss_mask": 0.42233, "loss": 1.28223, "time": 0.88579}
{"mode": "train", "epoch": 1, "iter": 6000, "lr": 0.02, "memory": 9127, "data_time": 0.33104, "loss_rpn_cls": 0.10114, "loss_rpn_bbox": 0.07373, "loss_cls": 0.43196, "acc": 90.86133, "loss_bbox": 0.27954, "loss_mask": 0.42073, "loss": 1.3071, "time": 0.88357}
{"mode": "train", "epoch": 1, "iter": 6050, "lr": 0.02, "memory": 9127, "data_time": 0.3326, "loss_rpn_cls": 0.10296, "loss_rpn_bbox": 0.07548, "loss_cls": 0.42865, "acc": 90.76294, "loss_bbox": 0.27852, "loss_mask": 0.42101, "loss": 1.30662, "time": 0.89131}
{"mode": "train", "epoch": 1, "iter": 6100, "lr": 0.02, "memory": 9127, "data_time": 0.3322, "loss_rpn_cls": 0.098, "loss_rpn_bbox": 0.07599, "loss_cls": 0.41922, "acc": 90.85913, "loss_bbox": 0.27504, "loss_mask": 0.40918, "loss": 1.27743, "time": 0.88717}
{"mode": "train", "epoch": 1, "iter": 6150, "lr": 0.02, "memory": 9127, "data_time": 0.32817, "loss_rpn_cls": 0.09709, "loss_rpn_bbox": 0.07085, "loss_cls": 0.41176, "acc": 91.16382, "loss_bbox": 0.26843, "loss_mask": 0.42064, "loss": 1.26878, "time": 0.87902}
{"mode": "train", "epoch": 1, "iter": 6200, "lr": 0.02, "memory": 9127, "data_time": 0.34183, "loss_rpn_cls": 0.10715, "loss_rpn_bbox": 0.08136, "loss_cls": 0.43184, "acc": 90.75195, "loss_bbox": 0.27929, "loss_mask": 0.42233, "loss": 1.32198, "time": 0.89345}
{"mode": "train", "epoch": 1, "iter": 6250, "lr": 0.02, "memory": 9127, "data_time": 0.33887, "loss_rpn_cls": 0.09622, "loss_rpn_bbox": 0.07476, "loss_cls": 0.42225, "acc": 90.90967, "loss_bbox": 0.27681, "loss_mask": 0.41916, "loss": 1.2892, "time": 0.88564}
{"mode": "train", "epoch": 1, "iter": 6300, "lr": 0.02, "memory": 9127, "data_time": 0.32625, "loss_rpn_cls": 0.10164, "loss_rpn_bbox": 0.07271, "loss_cls": 0.42429, "acc": 90.95996, "loss_bbox": 0.27392, "loss_mask": 0.41734, "loss": 1.2899, "time": 0.88878}
{"mode": "train", "epoch": 1, "iter": 6350, "lr": 0.02, "memory": 9127, "data_time": 0.31488, "loss_rpn_cls": 0.10132, "loss_rpn_bbox": 0.07576, "loss_cls": 0.41715, "acc": 90.9834, "loss_bbox": 0.27232, "loss_mask": 0.41414, "loss": 1.28069, "time": 0.87885}
{"mode": "train", "epoch": 1, "iter": 6400, "lr": 0.02, "memory": 9127, "data_time": 0.32138, "loss_rpn_cls": 0.09283, "loss_rpn_bbox": 0.07294, "loss_cls": 0.40216, "acc": 91.34424, "loss_bbox": 0.26561, "loss_mask": 0.41967, "loss": 1.25321, "time": 0.86304}
{"mode": "train", "epoch": 1, "iter": 6450, "lr": 0.02, "memory": 9127, "data_time": 0.42713, "loss_rpn_cls": 0.09871, "loss_rpn_bbox": 0.07053, "loss_cls": 0.40587, "acc": 91.12109, "loss_bbox": 0.27292, "loss_mask": 0.41085, "loss": 1.25888, "time": 1.02886}
{"mode": "train", "epoch": 1, "iter": 6500, "lr": 0.02, "memory": 9127, "data_time": 0.38589, "loss_rpn_cls": 0.09742, "loss_rpn_bbox": 0.07515, "loss_cls": 0.41896, "acc": 90.86499, "loss_bbox": 0.27808, "loss_mask": 0.41129, "loss": 1.28089, "time": 0.9714}
{"mode": "train", "epoch": 1, "iter": 6550, "lr": 0.02, "memory": 9127, "data_time": 0.33026, "loss_rpn_cls": 0.09626, "loss_rpn_bbox": 0.07307, "loss_cls": 0.39896, "acc": 91.34717, "loss_bbox": 0.26493, "loss_mask": 0.41872, "loss": 1.25194, "time": 0.8741}
{"mode": "train", "epoch": 1, "iter": 6600, "lr": 0.02, "memory": 9127, "data_time": 0.32801, "loss_rpn_cls": 0.09658, "loss_rpn_bbox": 0.07318, "loss_cls": 0.41187, "acc": 90.94995, "loss_bbox": 0.27782, "loss_mask": 0.41372, "loss": 1.27316, "time": 0.89581}
{"mode": "train", "epoch": 1, "iter": 6650, "lr": 0.02, "memory": 9127, "data_time": 0.33494, "loss_rpn_cls": 0.09865, "loss_rpn_bbox": 0.07562, "loss_cls": 0.41642, "acc": 90.90674, "loss_bbox": 0.27757, "loss_mask": 0.41413, "loss": 1.28239, "time": 0.88893}
{"mode": "train", "epoch": 1, "iter": 6700, "lr": 0.02, "memory": 9127, "data_time": 0.32075, "loss_rpn_cls": 0.09918, "loss_rpn_bbox": 0.07882, "loss_cls": 0.41288, "acc": 91.06226, "loss_bbox": 0.27349, "loss_mask": 0.41716, "loss": 1.28152, "time": 0.88047}
{"mode": "train", "epoch": 1, "iter": 6750, "lr": 0.02, "memory": 9127, "data_time": 0.34974, "loss_rpn_cls": 0.1018, "loss_rpn_bbox": 0.07496, "loss_cls": 0.4261, "acc": 90.60449, "loss_bbox": 0.28066, "loss_mask": 0.41091, "loss": 1.29442, "time": 0.89906}
{"mode": "train", "epoch": 1, "iter": 6800, "lr": 0.02, "memory": 9127, "data_time": 0.32614, "loss_rpn_cls": 0.09875, "loss_rpn_bbox": 0.07906, "loss_cls": 0.42807, "acc": 90.70288, "loss_bbox": 0.28623, "loss_mask": 0.41808, "loss": 1.3102, "time": 0.8966}
{"mode": "train", "epoch": 1, "iter": 6850, "lr": 0.02, "memory": 9127, "data_time": 0.35346, "loss_rpn_cls": 0.10304, "loss_rpn_bbox": 0.07581, "loss_cls": 0.43291, "acc": 90.26758, "loss_bbox": 0.29307, "loss_mask": 0.40888, "loss": 1.31371, "time": 0.91307}
{"mode": "train", "epoch": 1, "iter": 6900, "lr": 0.02, "memory": 9127, "data_time": 0.33223, "loss_rpn_cls": 0.09623, "loss_rpn_bbox": 0.07728, "loss_cls": 0.41258, "acc": 90.97095, "loss_bbox": 0.27015, "loss_mask": 0.40757, "loss": 1.26381, "time": 0.89097}
{"mode": "train", "epoch": 1, "iter": 6950, "lr": 0.02, "memory": 9127, "data_time": 0.33796, "loss_rpn_cls": 0.09185, "loss_rpn_bbox": 0.07165, "loss_cls": 0.41939, "acc": 90.67529, "loss_bbox": 0.28624, "loss_mask": 0.40546, "loss": 1.2746, "time": 0.88097}
{"mode": "train", "epoch": 1, "iter": 7000, "lr": 0.02, "memory": 9127, "data_time": 0.3399, "loss_rpn_cls": 0.10004, "loss_rpn_bbox": 0.07809, "loss_cls": 0.4055, "acc": 91.19214, "loss_bbox": 0.27034, "loss_mask": 0.41001, "loss": 1.26397, "time": 0.88853}
{"mode": "train", "epoch": 1, "iter": 7050, "lr": 0.02, "memory": 9127, "data_time": 0.33126, "loss_rpn_cls": 0.09709, "loss_rpn_bbox": 0.07508, "loss_cls": 0.42214, "acc": 90.67847, "loss_bbox": 0.28248, "loss_mask": 0.41124, "loss": 1.28802, "time": 0.88599}
{"mode": "train", "epoch": 1, "iter": 7100, "lr": 0.02, "memory": 9127, "data_time": 0.34331, "loss_rpn_cls": 0.09162, "loss_rpn_bbox": 0.07028, "loss_cls": 0.42099, "acc": 90.77173, "loss_bbox": 0.27671, "loss_mask": 0.40305, "loss": 1.26265, "time": 0.87833}
{"mode": "train", "epoch": 1, "iter": 7150, "lr": 0.02, "memory": 9127, "data_time": 0.33236, "loss_rpn_cls": 0.09527, "loss_rpn_bbox": 0.0767, "loss_cls": 0.41505, "acc": 90.71729, "loss_bbox": 0.2814, "loss_mask": 0.41924, "loss": 1.28766, "time": 0.87706}
{"mode": "train", "epoch": 1, "iter": 7200, "lr": 0.02, "memory": 9127, "data_time": 0.27381, "loss_rpn_cls": 0.09627, "loss_rpn_bbox": 0.07285, "loss_cls": 0.41264, "acc": 90.92578, "loss_bbox": 0.27395, "loss_mask": 0.403, "loss": 1.25872, "time": 0.82332}
{"mode": "train", "epoch": 1, "iter": 7250, "lr": 0.02, "memory": 9127, "data_time": 0.27612, "loss_rpn_cls": 0.09659, "loss_rpn_bbox": 0.07188, "loss_cls": 0.40538, "acc": 91.10742, "loss_bbox": 0.26904, "loss_mask": 0.40845, "loss": 1.25134, "time": 0.83646}
{"mode": "train", "epoch": 1, "iter": 7300, "lr": 0.02, "memory": 9127, "data_time": 0.33194, "loss_rpn_cls": 0.09289, "loss_rpn_bbox": 0.07405, "loss_cls": 0.4225, "acc": 90.55103, "loss_bbox": 0.28659, "loss_mask": 0.41011, "loss": 1.28612, "time": 0.88566}
{"mode": "val", "epoch": 1, "iter": 7330, "lr": 0.02, "bbox_mAP": 0.056, "bbox_mAP_50": 0.116, "bbox_mAP_75": 0.05, "bbox_mAP_s": 0.024, "bbox_mAP_m": 0.059, "bbox_mAP_l": 0.081, "bbox_mAP_copypaste": "0.056 0.116 0.050 0.024 0.059 0.081", "segm_mAP": 0.054, "segm_mAP_50": 0.106, "segm_mAP_75": 0.05, "segm_mAP_s": 0.019, "segm_mAP_m": 0.058, "segm_mAP_l": 0.081, "segm_mAP_copypaste": "0.054 0.106 0.050 0.019 0.058 0.081"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 9127, "data_time": 0.39381, "loss_rpn_cls": 0.09852, "loss_rpn_bbox": 0.07563, "loss_cls": 0.42786, "acc": 90.63794, "loss_bbox": 0.28231, "loss_mask": 0.40772, "loss": 1.29204, "time": 0.95589}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 9127, "data_time": 0.33517, "loss_rpn_cls": 0.09493, "loss_rpn_bbox": 0.07599, "loss_cls": 0.42066, "acc": 90.67749, "loss_bbox": 0.2808, "loss_mask": 0.40391, "loss": 1.27629, "time": 0.87746}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 9127, "data_time": 0.32687, "loss_rpn_cls": 0.09882, "loss_rpn_bbox": 0.07594, "loss_cls": 0.41943, "acc": 90.62817, "loss_bbox": 0.28758, "loss_mask": 0.40651, "loss": 1.28828, "time": 0.89864}
