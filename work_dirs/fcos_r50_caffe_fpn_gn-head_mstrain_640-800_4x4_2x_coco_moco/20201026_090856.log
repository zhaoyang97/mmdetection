2020-10-26 09:08:56,852 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]
CUDA available: True
GPU 0,1: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.4.0
MMCV: 1.1.5
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2020-10-26 09:08:57,307 - mmdet - INFO - Distributed training: True
2020-10-26 09:08:57,675 - mmdet - INFO - Config:
dataset_type = 'VOCDataset'
data_root = '/root/userfolder/data/'
img_norm_cfg = dict(
    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='Resize',
        img_scale=[(1333, 640), (1333, 800)],
        multiscale_mode='value',
        keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[102.9801, 115.9465, 122.7717],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=0,
    train=dict(
        type='RepeatDataset',
        times=3,
        dataset=dict(
            type='VOCDataset',
            ann_file=[
                '/root/userfolder/data/VOC2012/ImageSets/Main/trainval.txt'
            ],
            img_prefix=['/root/userfolder/data/VOC2012/'],
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', with_bbox=True),
                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),
                dict(type='RandomFlip', flip_ratio=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='Pad', size_divisor=32),
                dict(type='DefaultFormatBundle'),
                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='Resize',
                img_scale=[(1333, 640), (1333, 800)],
                multiscale_mode='value',
                keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='VOCDataset',
        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',
        img_prefix='/root/userfolder/data/VOC2012/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='VOCDataset',
        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',
        img_prefix='/root/userfolder/data/VOC2012/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='mAP')
optimizer = dict(
    type='SGD',
    lr=0.00125,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='constant',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[16, 22])
total_epochs = 24
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
model = dict(
    type='FCOS',
    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs=True,
        extra_convs_on_inputs=False,
        num_outs=5,
        relu_before_extra_convs=True),
    bbox_head=dict(
        type='FCOSHead',
        num_classes=20,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        strides=[8, 16, 32, 64, 128],
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='IoULoss', loss_weight=1.0),
        loss_centerness=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))
train_cfg = dict(
    assigner=dict(
        type='MaxIoUAssigner',
        pos_iou_thr=0.5,
        neg_iou_thr=0.4,
        min_pos_iou=0,
        ignore_iof_thr=-1),
    allowed_border=-1,
    pos_weight=-1,
    debug=False)
test_cfg = dict(
    nms_pre=1000,
    min_bbox_size=0,
    score_thr=0.05,
    nms=dict(type='nms', iou_threshold=0.5),
    max_per_img=100)
work_dir = './work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco'
gpu_ids = range(0, 1)

2020-10-26 09:08:58,005 - mmdet - INFO - load model from: icode/moco_v2_800ep_pretrain_rename.pth
2020-10-26 09:08:58,096 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.0.weight, fc.0.bias, fc.2.weight, fc.2.bias

2020-10-26 09:09:13,817 - mmdet - INFO - Start running, host: root@48311a6e91ab, work_dir: /root/userfolder/mmdetection/work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco
2020-10-26 09:09:13,817 - mmdet - INFO - workflow: [('train', 1)], max: 24 epochs
2020-10-26 09:09:42,606 - mmdet - INFO - Epoch [1][50/4328]	lr: 4.167e-04, eta: 16:36:09, time: 0.576, data_time: 0.159, memory: 3937, loss_cls: 0.8331, loss_bbox: 1.9042, loss_centerness: 0.6787, loss: 3.4160, grad_norm: 30.6308
2020-10-26 09:10:02,748 - mmdet - INFO - Epoch [1][100/4328]	lr: 4.167e-04, eta: 14:06:11, time: 0.403, data_time: 0.103, memory: 3937, loss_cls: 0.6667, loss_bbox: 0.8390, loss_centerness: 0.6562, loss: 2.1620, grad_norm: 15.9008
2020-10-26 09:10:22,242 - mmdet - INFO - Epoch [1][150/4328]	lr: 4.167e-04, eta: 13:08:31, time: 0.390, data_time: 0.101, memory: 3937, loss_cls: 0.6340, loss_bbox: 0.8539, loss_centerness: 0.6510, loss: 2.1388, grad_norm: 17.8491
2020-10-26 09:10:41,671 - mmdet - INFO - Epoch [1][200/4328]	lr: 4.167e-04, eta: 12:38:57, time: 0.389, data_time: 0.097, memory: 3937, loss_cls: 0.6102, loss_bbox: 0.8044, loss_centerness: 0.6499, loss: 2.0646, grad_norm: 14.0174
2020-10-26 09:11:01,051 - mmdet - INFO - Epoch [1][250/4328]	lr: 4.167e-04, eta: 12:20:44, time: 0.388, data_time: 0.098, memory: 3937, loss_cls: 0.6040, loss_bbox: 0.7534, loss_centerness: 0.6477, loss: 2.0051, grad_norm: 14.6219
2020-10-26 09:11:20,574 - mmdet - INFO - Epoch [1][300/4328]	lr: 4.167e-04, eta: 12:09:19, time: 0.390, data_time: 0.103, memory: 3941, loss_cls: 0.5980, loss_bbox: 0.7376, loss_centerness: 0.6456, loss: 1.9811, grad_norm: 14.4945
2020-10-26 09:11:40,296 - mmdet - INFO - Epoch [1][350/4328]	lr: 4.167e-04, eta: 12:02:03, time: 0.394, data_time: 0.102, memory: 3941, loss_cls: 0.6010, loss_bbox: 0.7249, loss_centerness: 0.6477, loss: 1.9736, grad_norm: 14.6576
2020-10-26 09:12:00,028 - mmdet - INFO - Epoch [1][400/4328]	lr: 4.167e-04, eta: 11:56:33, time: 0.395, data_time: 0.103, memory: 3941, loss_cls: 0.6074, loss_bbox: 0.6929, loss_centerness: 0.6434, loss: 1.9438, grad_norm: 13.4361
2020-10-26 09:12:20,227 - mmdet - INFO - Epoch [1][450/4328]	lr: 4.167e-04, eta: 11:53:34, time: 0.402, data_time: 0.107, memory: 3941, loss_cls: 0.5735, loss_bbox: 0.7054, loss_centerness: 0.6396, loss: 1.9185, grad_norm: 15.0158
2020-10-26 09:12:39,744 - mmdet - INFO - Epoch [1][500/4328]	lr: 4.167e-04, eta: 11:49:32, time: 0.393, data_time: 0.101, memory: 3941, loss_cls: 0.5677, loss_bbox: 0.6720, loss_centerness: 0.6405, loss: 1.8802, grad_norm: 14.3872
2020-10-26 09:12:59,444 - mmdet - INFO - Epoch [1][550/4328]	lr: 1.250e-03, eta: 11:46:24, time: 0.394, data_time: 0.099, memory: 3941, loss_cls: 0.6004, loss_bbox: 0.9323, loss_centerness: 0.6462, loss: 2.1789, grad_norm: 19.4204
2020-10-26 09:13:19,131 - mmdet - INFO - Epoch [1][600/4328]	lr: 1.250e-03, eta: 11:43:42, time: 0.394, data_time: 0.101, memory: 3941, loss_cls: 0.6123, loss_bbox: 0.7286, loss_centerness: 0.6417, loss: 1.9827, grad_norm: 13.0739
2020-10-26 09:13:38,877 - mmdet - INFO - Epoch [1][650/4328]	lr: 1.250e-03, eta: 11:41:31, time: 0.395, data_time: 0.100, memory: 3941, loss_cls: 0.5866, loss_bbox: 0.7109, loss_centerness: 0.6352, loss: 1.9326, grad_norm: 13.4375
2020-10-26 09:13:58,557 - mmdet - INFO - Epoch [1][700/4328]	lr: 1.250e-03, eta: 11:39:26, time: 0.394, data_time: 0.098, memory: 3941, loss_cls: 0.5951, loss_bbox: 0.7864, loss_centerness: 0.6348, loss: 2.0163, grad_norm: 15.0210
2020-10-26 09:14:18,060 - mmdet - INFO - Epoch [1][750/4328]	lr: 1.250e-03, eta: 11:37:11, time: 0.390, data_time: 0.095, memory: 3941, loss_cls: 0.5810, loss_bbox: 0.7200, loss_centerness: 0.6353, loss: 1.9363, grad_norm: 13.3298
2020-10-26 09:14:37,839 - mmdet - INFO - Epoch [1][800/4328]	lr: 1.250e-03, eta: 11:35:45, time: 0.396, data_time: 0.098, memory: 3941, loss_cls: 0.5579, loss_bbox: 0.6518, loss_centerness: 0.6311, loss: 1.8407, grad_norm: 11.7819
2020-10-26 09:14:57,734 - mmdet - INFO - Epoch [1][850/4328]	lr: 1.250e-03, eta: 11:34:42, time: 0.398, data_time: 0.100, memory: 3941, loss_cls: 0.5442, loss_bbox: 0.6016, loss_centerness: 0.6253, loss: 1.7711, grad_norm: 10.6838
2020-10-26 09:15:17,718 - mmdet - INFO - Epoch [1][900/4328]	lr: 1.250e-03, eta: 11:33:54, time: 0.400, data_time: 0.104, memory: 3957, loss_cls: 0.5445, loss_bbox: 0.6618, loss_centerness: 0.6270, loss: 1.8333, grad_norm: 12.5423
2020-10-26 09:15:37,269 - mmdet - INFO - Epoch [1][950/4328]	lr: 1.250e-03, eta: 11:32:21, time: 0.391, data_time: 0.097, memory: 3957, loss_cls: 0.5206, loss_bbox: 0.5710, loss_centerness: 0.6249, loss: 1.7166, grad_norm: 10.3262
2020-10-26 09:15:56,871 - mmdet - INFO - Exp name: fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco.py
2020-10-26 09:15:56,871 - mmdet - INFO - Epoch [1][1000/4328]	lr: 1.250e-03, eta: 11:31:02, time: 0.392, data_time: 0.103, memory: 3957, loss_cls: 0.5112, loss_bbox: 0.5971, loss_centerness: 0.6248, loss: 1.7331, grad_norm: 11.0816
2020-10-26 09:16:17,460 - mmdet - INFO - Epoch [1][1050/4328]	lr: 1.250e-03, eta: 11:31:24, time: 0.412, data_time: 0.108, memory: 3957, loss_cls: 0.5086, loss_bbox: 0.5559, loss_centerness: 0.6229, loss: 1.6874, grad_norm: 10.3201
2020-10-26 09:16:41,469 - mmdet - INFO - Epoch [1][1100/4328]	lr: 1.250e-03, eta: 11:37:02, time: 0.480, data_time: 0.111, memory: 3957, loss_cls: 0.4808, loss_bbox: 0.5547, loss_centerness: 0.6219, loss: 1.6575, grad_norm: 10.9420
2020-10-26 09:17:09,052 - mmdet - INFO - Epoch [1][1150/4328]	lr: 1.250e-03, eta: 11:47:28, time: 0.552, data_time: 0.102, memory: 3957, loss_cls: 0.4992, loss_bbox: 0.5291, loss_centerness: 0.6169, loss: 1.6451, grad_norm: 11.1396
2020-10-26 09:17:28,804 - mmdet - INFO - Epoch [1][1200/4328]	lr: 1.250e-03, eta: 11:45:50, time: 0.395, data_time: 0.099, memory: 3957, loss_cls: 0.4907, loss_bbox: 0.5687, loss_centerness: 0.6192, loss: 1.6786, grad_norm: 11.1064
2020-10-26 09:17:48,526 - mmdet - INFO - Epoch [1][1250/4328]	lr: 1.250e-03, eta: 11:44:15, time: 0.394, data_time: 0.095, memory: 3957, loss_cls: 0.4742, loss_bbox: 0.5942, loss_centerness: 0.6151, loss: 1.6835, grad_norm: 12.6830
2020-10-26 09:18:08,115 - mmdet - INFO - Epoch [1][1300/4328]	lr: 1.250e-03, eta: 11:42:36, time: 0.392, data_time: 0.101, memory: 3957, loss_cls: 0.4568, loss_bbox: 0.5476, loss_centerness: 0.6166, loss: 1.6210, grad_norm: 10.7252
