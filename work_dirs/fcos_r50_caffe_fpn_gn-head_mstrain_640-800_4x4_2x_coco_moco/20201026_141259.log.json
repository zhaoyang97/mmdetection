{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "dataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/'\nimg_norm_cfg = dict(\n    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[102.9801, 115.9465, 122.7717],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[102.9801, 115.9465, 122.7717],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=['/root/userfolder/data/VOC2012/'],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ]),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[102.9801, 115.9465, 122.7717],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='VOCDataset',\n        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',\n        img_prefix='/root/userfolder/data/VOC2012/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[102.9801, 115.9465, 122.7717],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file='/root/userfolder/data/VOC2012/ImageSets/Main/val.txt',\n        img_prefix='/root/userfolder/data/VOC2012/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[102.9801, 115.9465, 122.7717],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(\n    type='SGD',\n    lr=0.00125,\n    momentum=0.9,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='constant',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[16, 22])\ntotal_epochs = 24\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nmodel = dict(\n    type='FCOS',\n    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs=True,\n        extra_convs_on_inputs=False,\n        num_outs=5,\n        relu_before_extra_convs=True),\n    bbox_head=dict(\n        type='FCOSHead',\n        num_classes=20,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        strides=[8, 16, 32, 64, 128],\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='IoULoss', loss_weight=1.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))\ntrain_cfg = dict(\n    assigner=dict(\n        type='MaxIoUAssigner',\n        pos_iou_thr=0.5,\n        neg_iou_thr=0.4,\n        min_pos_iou=0,\n        ignore_iof_thr=-1),\n    allowed_border=-1,\n    pos_weight=-1,\n    debug=False)\ntest_cfg = dict(\n    nms_pre=1000,\n    min_bbox_size=0,\n    score_thr=0.05,\n    nms=dict(type='nms', iou_threshold=0.5),\n    max_per_img=100)\nwork_dir = './work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00042, "memory": 3934, "data_time": 0.22136, "loss_cls": 0.86262, "loss_bbox": 2.02804, "loss_centerness": 0.67649, "loss": 3.56715, "grad_norm": 28.51307, "time": 0.64904}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00042, "memory": 3934, "data_time": 0.15377, "loss_cls": 0.67272, "loss_bbox": 0.86548, "loss_centerness": 0.65485, "loss": 2.19305, "grad_norm": 15.46386, "time": 0.46399}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00042, "memory": 3934, "data_time": 0.15051, "loss_cls": 0.63927, "loss_bbox": 0.80948, "loss_centerness": 0.65106, "loss": 2.0998, "grad_norm": 14.12938, "time": 0.45427}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00042, "memory": 3934, "data_time": 0.15471, "loss_cls": 0.61527, "loss_bbox": 0.79053, "loss_centerness": 0.64957, "loss": 2.05537, "grad_norm": 13.75022, "time": 0.45799}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00042, "memory": 3934, "data_time": 0.14737, "loss_cls": 0.60717, "loss_bbox": 0.76182, "loss_centerness": 0.64722, "loss": 2.01621, "grad_norm": 15.0767, "time": 0.45111}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00042, "memory": 3938, "data_time": 0.15012, "loss_cls": 0.60479, "loss_bbox": 0.74234, "loss_centerness": 0.6448, "loss": 1.99193, "grad_norm": 14.06867, "time": 0.45039}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00042, "memory": 3938, "data_time": 0.14641, "loss_cls": 0.60966, "loss_bbox": 0.73224, "loss_centerness": 0.64732, "loss": 1.98921, "grad_norm": 14.63682, "time": 0.44685}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00042, "memory": 3938, "data_time": 0.14597, "loss_cls": 0.60919, "loss_bbox": 0.70636, "loss_centerness": 0.64421, "loss": 1.95976, "grad_norm": 12.37642, "time": 0.44072}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00042, "memory": 3938, "data_time": 0.14696, "loss_cls": 0.58378, "loss_bbox": 0.71137, "loss_centerness": 0.64242, "loss": 1.93757, "grad_norm": 14.06289, "time": 0.44928}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00042, "memory": 3938, "data_time": 0.14133, "loss_cls": 0.57937, "loss_bbox": 0.69875, "loss_centerness": 0.64309, "loss": 1.92121, "grad_norm": 14.42432, "time": 0.44547}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00125, "memory": 3938, "data_time": 0.14084, "loss_cls": 0.60604, "loss_bbox": 0.86199, "loss_centerness": 0.64591, "loss": 2.11394, "grad_norm": 16.9676, "time": 0.44063}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00125, "memory": 3938, "data_time": 0.1397, "loss_cls": 0.62466, "loss_bbox": 0.72893, "loss_centerness": 0.64313, "loss": 1.99671, "grad_norm": 13.02244, "time": 0.4431}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00125, "memory": 3938, "data_time": 0.14199, "loss_cls": 0.59213, "loss_bbox": 0.71172, "loss_centerness": 0.63929, "loss": 1.94314, "grad_norm": 13.14895, "time": 0.43804}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00125, "memory": 3938, "data_time": 0.13748, "loss_cls": 0.60558, "loss_bbox": 0.81942, "loss_centerness": 0.64076, "loss": 2.06576, "grad_norm": 15.39872, "time": 0.44151}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00125, "memory": 3938, "data_time": 0.13921, "loss_cls": 0.58424, "loss_bbox": 0.75531, "loss_centerness": 0.63936, "loss": 1.97891, "grad_norm": 13.33875, "time": 0.44051}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00125, "memory": 3938, "data_time": 0.1507, "loss_cls": 0.57157, "loss_bbox": 0.69885, "loss_centerness": 0.63498, "loss": 1.9054, "grad_norm": 12.00925, "time": 0.45176}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00125, "memory": 3938, "data_time": 0.1366, "loss_cls": 0.55694, "loss_bbox": 0.6363, "loss_centerness": 0.62948, "loss": 1.82272, "grad_norm": 10.52368, "time": 0.43896}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00125, "memory": 3954, "data_time": 0.13895, "loss_cls": 0.54584, "loss_bbox": 0.64147, "loss_centerness": 0.62992, "loss": 1.81723, "grad_norm": 11.32098, "time": 0.43964}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00125, "memory": 3954, "data_time": 0.1495, "loss_cls": 0.53522, "loss_bbox": 0.58089, "loss_centerness": 0.62534, "loss": 1.74146, "grad_norm": 10.08867, "time": 0.45411}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00125, "memory": 3954, "data_time": 0.14241, "loss_cls": 0.52763, "loss_bbox": 0.62408, "loss_centerness": 0.62693, "loss": 1.77863, "grad_norm": 11.12809, "time": 0.44851}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00125, "memory": 3954, "data_time": 0.14651, "loss_cls": 0.52481, "loss_bbox": 0.58301, "loss_centerness": 0.62329, "loss": 1.73111, "grad_norm": 10.81479, "time": 0.44381}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00125, "memory": 3954, "data_time": 0.13687, "loss_cls": 0.49472, "loss_bbox": 0.58148, "loss_centerness": 0.62383, "loss": 1.70003, "grad_norm": 11.40117, "time": 0.45148}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00125, "memory": 3954, "data_time": 0.13553, "loss_cls": 0.50786, "loss_bbox": 0.55554, "loss_centerness": 0.6191, "loss": 1.68249, "grad_norm": 11.34846, "time": 0.44347}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00125, "memory": 3954, "data_time": 0.12809, "loss_cls": 0.49629, "loss_bbox": 0.5845, "loss_centerness": 0.62081, "loss": 1.7016, "grad_norm": 10.72718, "time": 0.43195}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00125, "memory": 3954, "data_time": 0.14086, "loss_cls": 0.48026, "loss_bbox": 0.61082, "loss_centerness": 0.61728, "loss": 1.70837, "grad_norm": 13.37609, "time": 0.44911}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00125, "memory": 3954, "data_time": 0.13018, "loss_cls": 0.46489, "loss_bbox": 0.56509, "loss_centerness": 0.61855, "loss": 1.64854, "grad_norm": 10.88769, "time": 0.43608}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00125, "memory": 3954, "data_time": 0.1362, "loss_cls": 0.4747, "loss_bbox": 0.53074, "loss_centerness": 0.6175, "loss": 1.62294, "grad_norm": 11.16825, "time": 0.43653}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00125, "memory": 3954, "data_time": 0.1357, "loss_cls": 0.47083, "loss_bbox": 0.52832, "loss_centerness": 0.61622, "loss": 1.61537, "grad_norm": 10.89, "time": 0.44129}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00125, "memory": 3954, "data_time": 0.13845, "loss_cls": 0.44611, "loss_bbox": 0.53097, "loss_centerness": 0.6159, "loss": 1.59299, "grad_norm": 11.06883, "time": 0.43462}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00125, "memory": 3954, "data_time": 0.12779, "loss_cls": 0.4734, "loss_bbox": 0.5173, "loss_centerness": 0.61641, "loss": 1.60711, "grad_norm": 10.66636, "time": 0.43732}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.00125, "memory": 3954, "data_time": 0.1271, "loss_cls": 0.45864, "loss_bbox": 0.52033, "loss_centerness": 0.61655, "loss": 1.59552, "grad_norm": 10.55852, "time": 0.42872}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.00125, "memory": 3954, "data_time": 0.13061, "loss_cls": 0.45936, "loss_bbox": 0.53096, "loss_centerness": 0.61535, "loss": 1.60568, "grad_norm": 11.51729, "time": 0.43212}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.00125, "memory": 3954, "data_time": 0.1276, "loss_cls": 0.44838, "loss_bbox": 0.53939, "loss_centerness": 0.61581, "loss": 1.60358, "grad_norm": 11.13113, "time": 0.43299}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.00125, "memory": 3954, "data_time": 0.12834, "loss_cls": 0.43848, "loss_bbox": 0.48298, "loss_centerness": 0.61367, "loss": 1.53513, "grad_norm": 9.46469, "time": 0.42963}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.00125, "memory": 3954, "data_time": 0.12951, "loss_cls": 0.44111, "loss_bbox": 0.45363, "loss_centerness": 0.61189, "loss": 1.50664, "grad_norm": 9.92942, "time": 0.43297}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.00125, "memory": 3954, "data_time": 0.11848, "loss_cls": 0.42222, "loss_bbox": 0.47048, "loss_centerness": 0.61441, "loss": 1.50711, "grad_norm": 9.76624, "time": 0.42712}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.00125, "memory": 3954, "data_time": 0.11976, "loss_cls": 0.43087, "loss_bbox": 0.50516, "loss_centerness": 0.61506, "loss": 1.55109, "grad_norm": 9.88725, "time": 0.42103}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.00125, "memory": 3954, "data_time": 0.12208, "loss_cls": 0.4083, "loss_bbox": 0.4628, "loss_centerness": 0.61134, "loss": 1.48244, "grad_norm": 10.05952, "time": 0.41564}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.00125, "memory": 3954, "data_time": 0.12808, "loss_cls": 0.42544, "loss_bbox": 0.46066, "loss_centerness": 0.61288, "loss": 1.49898, "grad_norm": 9.69242, "time": 0.42791}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.00125, "memory": 3954, "data_time": 0.12346, "loss_cls": 0.41866, "loss_bbox": 0.46825, "loss_centerness": 0.60732, "loss": 1.49423, "grad_norm": 10.60498, "time": 0.42267}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.00125, "memory": 3954, "data_time": 0.12131, "loss_cls": 0.41227, "loss_bbox": 0.47378, "loss_centerness": 0.61057, "loss": 1.49662, "grad_norm": 10.10219, "time": 0.41986}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.00125, "memory": 3954, "data_time": 0.12351, "loss_cls": 0.4083, "loss_bbox": 0.47628, "loss_centerness": 0.61384, "loss": 1.49842, "grad_norm": 10.28061, "time": 0.43122}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.00125, "memory": 3954, "data_time": 0.11895, "loss_cls": 0.40632, "loss_bbox": 0.49179, "loss_centerness": 0.61259, "loss": 1.5107, "grad_norm": 11.01027, "time": 0.42087}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.00125, "memory": 3954, "data_time": 0.12394, "loss_cls": 0.39375, "loss_bbox": 0.45423, "loss_centerness": 0.61164, "loss": 1.45962, "grad_norm": 9.92654, "time": 0.42249}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.00125, "memory": 3954, "data_time": 0.11433, "loss_cls": 0.40724, "loss_bbox": 0.46007, "loss_centerness": 0.61203, "loss": 1.47934, "grad_norm": 10.32336, "time": 0.41841}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.00125, "memory": 3954, "data_time": 0.1162, "loss_cls": 0.42147, "loss_bbox": 0.4382, "loss_centerness": 0.60916, "loss": 1.46884, "grad_norm": 10.29377, "time": 0.41613}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.00125, "memory": 3954, "data_time": 0.12489, "loss_cls": 0.3885, "loss_bbox": 0.4403, "loss_centerness": 0.60707, "loss": 1.43587, "grad_norm": 10.20265, "time": 0.42472}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.00125, "memory": 3954, "data_time": 0.1206, "loss_cls": 0.3805, "loss_bbox": 0.42581, "loss_centerness": 0.60756, "loss": 1.41387, "grad_norm": 9.41326, "time": 0.41923}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.00125, "memory": 3954, "data_time": 0.11581, "loss_cls": 0.38867, "loss_bbox": 0.43739, "loss_centerness": 0.60757, "loss": 1.43364, "grad_norm": 10.05876, "time": 0.41297}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.00125, "memory": 3954, "data_time": 0.10936, "loss_cls": 0.37817, "loss_bbox": 0.43698, "loss_centerness": 0.60737, "loss": 1.42251, "grad_norm": 10.37183, "time": 0.40755}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.00125, "memory": 3954, "data_time": 0.11411, "loss_cls": 0.39101, "loss_bbox": 0.47233, "loss_centerness": 0.60825, "loss": 1.4716, "grad_norm": 11.43206, "time": 0.41608}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.00125, "memory": 3954, "data_time": 0.11313, "loss_cls": 0.37658, "loss_bbox": 0.44895, "loss_centerness": 0.60756, "loss": 1.4331, "grad_norm": 9.98274, "time": 0.41744}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.00125, "memory": 3954, "data_time": 0.11167, "loss_cls": 0.37194, "loss_bbox": 0.45243, "loss_centerness": 0.60801, "loss": 1.43238, "grad_norm": 10.13145, "time": 0.41321}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.00125, "memory": 3954, "data_time": 0.11436, "loss_cls": 0.38287, "loss_bbox": 0.44212, "loss_centerness": 0.60769, "loss": 1.43267, "grad_norm": 10.6433, "time": 0.41341}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.00125, "memory": 3954, "data_time": 0.10699, "loss_cls": 0.37258, "loss_bbox": 0.43178, "loss_centerness": 0.60462, "loss": 1.40898, "grad_norm": 10.73235, "time": 0.4126}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.00125, "memory": 3954, "data_time": 0.11428, "loss_cls": 0.37241, "loss_bbox": 0.4727, "loss_centerness": 0.60751, "loss": 1.45262, "grad_norm": 11.10891, "time": 0.412}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.00125, "memory": 3954, "data_time": 0.11382, "loss_cls": 0.37177, "loss_bbox": 0.43232, "loss_centerness": 0.60961, "loss": 1.4137, "grad_norm": 9.7873, "time": 0.40718}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.00125, "memory": 3954, "data_time": 0.11799, "loss_cls": 0.36804, "loss_bbox": 0.41682, "loss_centerness": 0.60776, "loss": 1.39263, "grad_norm": 9.73422, "time": 0.41234}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.00125, "memory": 3954, "data_time": 0.10951, "loss_cls": 0.35634, "loss_bbox": 0.46044, "loss_centerness": 0.60806, "loss": 1.42485, "grad_norm": 10.97577, "time": 0.41409}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.00125, "memory": 3954, "data_time": 0.11884, "loss_cls": 0.35413, "loss_bbox": 0.43803, "loss_centerness": 0.60719, "loss": 1.39935, "grad_norm": 9.35536, "time": 0.41211}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.00125, "memory": 3954, "data_time": 0.10585, "loss_cls": 0.35262, "loss_bbox": 0.42624, "loss_centerness": 0.6043, "loss": 1.38316, "grad_norm": 10.4928, "time": 0.40506}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.00125, "memory": 3954, "data_time": 0.11425, "loss_cls": 0.35002, "loss_bbox": 0.41095, "loss_centerness": 0.60663, "loss": 1.36761, "grad_norm": 9.36028, "time": 0.41047}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.00125, "memory": 3954, "data_time": 0.11067, "loss_cls": 0.33867, "loss_bbox": 0.42329, "loss_centerness": 0.60895, "loss": 1.3709, "grad_norm": 9.32018, "time": 0.40286}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.00125, "memory": 3954, "data_time": 0.10323, "loss_cls": 0.33912, "loss_bbox": 0.45069, "loss_centerness": 0.60578, "loss": 1.39558, "grad_norm": 10.28403, "time": 0.40597}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.00125, "memory": 3954, "data_time": 0.09832, "loss_cls": 0.33935, "loss_bbox": 0.38725, "loss_centerness": 0.60265, "loss": 1.32925, "grad_norm": 9.52157, "time": 0.39827}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.00125, "memory": 3954, "data_time": 0.11106, "loss_cls": 0.3357, "loss_bbox": 0.428, "loss_centerness": 0.60771, "loss": 1.37141, "grad_norm": 10.03661, "time": 0.40953}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.00125, "memory": 3954, "data_time": 0.10662, "loss_cls": 0.33303, "loss_bbox": 0.43268, "loss_centerness": 0.60703, "loss": 1.37274, "grad_norm": 10.60784, "time": 0.39933}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.00125, "memory": 3954, "data_time": 0.09892, "loss_cls": 0.33542, "loss_bbox": 0.42364, "loss_centerness": 0.60532, "loss": 1.36437, "grad_norm": 9.78215, "time": 0.39319}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.00125, "memory": 3954, "data_time": 0.09518, "loss_cls": 0.35233, "loss_bbox": 0.41949, "loss_centerness": 0.60559, "loss": 1.3774, "grad_norm": 10.18619, "time": 0.40261}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.00125, "memory": 3954, "data_time": 0.09879, "loss_cls": 0.33772, "loss_bbox": 0.39552, "loss_centerness": 0.60363, "loss": 1.33687, "grad_norm": 9.61069, "time": 0.40355}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.00125, "memory": 3954, "data_time": 0.10343, "loss_cls": 0.33723, "loss_bbox": 0.41785, "loss_centerness": 0.60848, "loss": 1.36356, "grad_norm": 8.91999, "time": 0.40375}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.00125, "memory": 3954, "data_time": 0.09838, "loss_cls": 0.33729, "loss_bbox": 0.41575, "loss_centerness": 0.6056, "loss": 1.35864, "grad_norm": 10.8095, "time": 0.39449}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.00125, "memory": 3954, "data_time": 0.09861, "loss_cls": 0.34285, "loss_bbox": 0.41419, "loss_centerness": 0.60611, "loss": 1.36315, "grad_norm": 9.59448, "time": 0.39467}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.00125, "memory": 3954, "data_time": 0.10287, "loss_cls": 0.31945, "loss_bbox": 0.38444, "loss_centerness": 0.6038, "loss": 1.30769, "grad_norm": 8.95115, "time": 0.39407}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.00125, "memory": 3954, "data_time": 0.10085, "loss_cls": 0.31618, "loss_bbox": 0.42645, "loss_centerness": 0.60434, "loss": 1.34698, "grad_norm": 11.04362, "time": 0.40107}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.00125, "memory": 3954, "data_time": 0.1025, "loss_cls": 0.32059, "loss_bbox": 0.41226, "loss_centerness": 0.60289, "loss": 1.33575, "grad_norm": 10.12836, "time": 0.39761}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.00125, "memory": 3954, "data_time": 0.10214, "loss_cls": 0.3168, "loss_bbox": 0.4053, "loss_centerness": 0.60129, "loss": 1.32339, "grad_norm": 10.46283, "time": 0.39642}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.00125, "memory": 3954, "data_time": 0.10206, "loss_cls": 0.31256, "loss_bbox": 0.38454, "loss_centerness": 0.604, "loss": 1.3011, "grad_norm": 9.6023, "time": 0.39406}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.00125, "memory": 3954, "data_time": 0.0993, "loss_cls": 0.31503, "loss_bbox": 0.41134, "loss_centerness": 0.60273, "loss": 1.3291, "grad_norm": 10.04168, "time": 0.39563}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.00125, "memory": 3954, "data_time": 0.0979, "loss_cls": 0.30691, "loss_bbox": 0.38612, "loss_centerness": 0.60371, "loss": 1.29674, "grad_norm": 9.39179, "time": 0.39848}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.00125, "memory": 3954, "data_time": 0.1005, "loss_cls": 0.31974, "loss_bbox": 0.40584, "loss_centerness": 0.60182, "loss": 1.3274, "grad_norm": 10.51691, "time": 0.3921}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.00125, "memory": 3954, "data_time": 0.10225, "loss_cls": 0.30425, "loss_bbox": 0.40068, "loss_centerness": 0.60381, "loss": 1.30874, "grad_norm": 9.87211, "time": 0.39837}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.00125, "memory": 3954, "data_time": 0.10238, "loss_cls": 0.3147, "loss_bbox": 0.40349, "loss_centerness": 0.60426, "loss": 1.32245, "grad_norm": 9.55195, "time": 0.39878}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.00125, "memory": 3954, "data_time": 0.1003, "loss_cls": 0.3067, "loss_bbox": 0.34863, "loss_centerness": 0.60153, "loss": 1.25686, "grad_norm": 9.42873, "time": 0.39919}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.00125, "memory": 3954, "data_time": 0.10098, "loss_cls": 0.30878, "loss_bbox": 0.3989, "loss_centerness": 0.60234, "loss": 1.31002, "grad_norm": 10.25384, "time": 0.39601}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.00125, "memory": 3954, "data_time": 0.09886, "loss_cls": 0.30106, "loss_bbox": 0.37372, "loss_centerness": 0.60403, "loss": 1.2788, "grad_norm": 9.40522, "time": 0.38908}
{"mode": "val", "epoch": 1, "iter": 4328, "lr": 0.00125, "mAP": 0.00159}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00125, "memory": 3954, "data_time": 0.14918, "loss_cls": 0.28761, "loss_bbox": 0.37443, "loss_centerness": 0.60008, "loss": 1.26213, "grad_norm": 9.85099, "time": 0.44122}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00125, "memory": 3954, "data_time": 0.10132, "loss_cls": 0.28724, "loss_bbox": 0.39256, "loss_centerness": 0.60469, "loss": 1.2845, "grad_norm": 9.44107, "time": 0.39381}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00125, "memory": 3954, "data_time": 0.10237, "loss_cls": 0.29446, "loss_bbox": 0.36604, "loss_centerness": 0.60163, "loss": 1.26213, "grad_norm": 9.79378, "time": 0.39456}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00125, "memory": 3954, "data_time": 0.10884, "loss_cls": 0.29057, "loss_bbox": 0.37028, "loss_centerness": 0.59935, "loss": 1.26019, "grad_norm": 10.05985, "time": 0.40113}
