2020-10-20 08:58:13,293 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.4.0
MMCV: 1.1.5
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2020-10-20 08:58:13,686 - mmdet - INFO - Distributed training: True
2020-10-20 08:58:14,154 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
annotations_root = 'annotations/'
image_root = '/root/userfolder/data/TCTAnnotatedData/'
classes = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',
           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',
           'dysbacteriosis_herpes_act', 'ec')
img_norm_cfg = dict(
    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='Resize',
        img_scale=[(1333, 640), (1333, 800)],
        multiscale_mode='value',
        keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[102.9801, 115.9465, 122.7717],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=0,
    train=dict(
        type='CocoDataset',
        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',
                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',
                 'dysbacteriosis_herpes_act', 'ec'),
        ann_file='annotations/train30000-cat10.json',
        img_prefix='/root/userfolder/data/TCTAnnotatedData/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='Resize',
                img_scale=[(1333, 640), (1333, 800)],
                multiscale_mode='value',
                keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',
                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',
                 'dysbacteriosis_herpes_act', 'ec'),
        ann_file='annotations/val10000-cat10.json',
        img_prefix='/root/userfolder/data/TCTAnnotatedData/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',
                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',
                 'dysbacteriosis_herpes_act', 'ec'),
        ann_file='annotations/test10000-cat10.json',
        img_prefix='/root/userfolder/data/TCTAnnotatedData/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='constant',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[16, 22])
total_epochs = 24
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
model = dict(
    type='FCOS',
    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs=True,
        extra_convs_on_inputs=False,
        num_outs=5,
        relu_before_extra_convs=True),
    bbox_head=dict(
        type='FCOSHead',
        num_classes=10,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        strides=[8, 16, 32, 64, 128],
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='IoULoss', loss_weight=1.0),
        loss_centerness=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)))
train_cfg = dict(
    assigner=dict(
        type='MaxIoUAssigner',
        pos_iou_thr=0.5,
        neg_iou_thr=0.4,
        min_pos_iou=0,
        ignore_iof_thr=-1),
    allowed_border=-1,
    pos_weight=-1,
    debug=False)
test_cfg = dict(
    nms_pre=1000,
    min_bbox_size=0,
    score_thr=0.05,
    nms=dict(type='nms', iou_threshold=0.5),
    max_per_img=100)
work_dir = './work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco'
gpu_ids = range(0, 1)

2020-10-20 08:58:14,498 - mmdet - INFO - load model from: icode/moco_v2_800ep_pretrain_rename.pth
2020-10-20 08:58:14,620 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.0.weight, fc.0.bias, fc.2.weight, fc.2.bias

2020-10-20 08:58:23,071 - mmdet - INFO - Start running, host: root@c29bb9d22aa7, work_dir: /root/userfolder/mmdetection/work_dirs/fcos_r50_caffe_fpn_gn-head_mstrain_640-800_4x4_2x_coco_moco
2020-10-20 08:58:23,071 - mmdet - INFO - workflow: [('train', 1)], max: 24 epochs
2020-10-20 08:59:42,282 - mmdet - INFO - Epoch [1][50/938]	lr: 3.333e-03, eta: 9:53:02, time: 1.584, data_time: 0.955, memory: 5736, loss_cls: 0.8298, loss_bbox: 1.3267, loss_centerness: 0.6587, loss: 2.8151, grad_norm: 17.5560
2020-10-20 09:00:58,463 - mmdet - INFO - Epoch [1][100/938]	lr: 3.333e-03, eta: 9:40:24, time: 1.524, data_time: 0.886, memory: 6007, loss_cls: 0.7645, loss_bbox: 0.9351, loss_centerness: 0.6564, loss: 2.3560, grad_norm: 5.8967
2020-10-20 09:02:14,700 - mmdet - INFO - Epoch [1][150/938]	lr: 3.333e-03, eta: 9:35:30, time: 1.525, data_time: 0.879, memory: 6007, loss_cls: 0.7685, loss_bbox: 0.9151, loss_centerness: 0.6531, loss: 2.3366, grad_norm: 3.7891
2020-10-20 09:03:32,017 - mmdet - INFO - Epoch [1][200/938]	lr: 3.333e-03, eta: 9:34:25, time: 1.546, data_time: 0.868, memory: 6007, loss_cls: 0.7478, loss_bbox: 0.8899, loss_centerness: 0.6524, loss: 2.2901, grad_norm: 3.0831
2020-10-20 09:04:48,298 - mmdet - INFO - Epoch [1][250/938]	lr: 3.333e-03, eta: 9:31:43, time: 1.526, data_time: 0.912, memory: 6021, loss_cls: 0.7520, loss_bbox: 0.9077, loss_centerness: 0.6526, loss: 2.3123, grad_norm: 3.9788
2020-10-20 09:06:04,802 - mmdet - INFO - Epoch [1][300/938]	lr: 3.333e-03, eta: 9:29:45, time: 1.530, data_time: 0.896, memory: 6021, loss_cls: 0.7562, loss_bbox: 0.9228, loss_centerness: 0.6524, loss: 2.3313, grad_norm: 4.4150
2020-10-20 09:07:21,487 - mmdet - INFO - Epoch [1][350/938]	lr: 3.333e-03, eta: 9:28:11, time: 1.534, data_time: 0.872, memory: 6021, loss_cls: 0.7473, loss_bbox: 0.9010, loss_centerness: 0.6522, loss: 2.3005, grad_norm: 3.5028
2020-10-20 09:08:39,259 - mmdet - INFO - Epoch [1][400/938]	lr: 3.333e-03, eta: 9:27:42, time: 1.556, data_time: 0.912, memory: 6021, loss_cls: 0.7458, loss_bbox: 0.8921, loss_centerness: 0.6527, loss: 2.2906, grad_norm: 2.7414
2020-10-20 09:09:55,804 - mmdet - INFO - Epoch [1][450/938]	lr: 3.333e-03, eta: 9:26:01, time: 1.531, data_time: 0.875, memory: 6021, loss_cls: 0.7398, loss_bbox: 0.8840, loss_centerness: 0.6520, loss: 2.2758, grad_norm: 2.7233
2020-10-20 09:11:12,217 - mmdet - INFO - Epoch [1][500/938]	lr: 3.333e-03, eta: 9:24:20, time: 1.528, data_time: 0.881, memory: 6021, loss_cls: 0.7335, loss_bbox: 0.8796, loss_centerness: 0.6512, loss: 2.2643, grad_norm: 2.7900
2020-10-20 09:12:28,911 - mmdet - INFO - Epoch [1][550/938]	lr: 1.000e-02, eta: 9:22:54, time: 1.534, data_time: 0.900, memory: 6021, loss_cls: 0.7298, loss_bbox: 0.9024, loss_centerness: 0.6477, loss: 2.2799, grad_norm: 5.1833
2020-10-20 09:13:44,587 - mmdet - INFO - Epoch [1][600/938]	lr: 1.000e-02, eta: 9:20:53, time: 1.513, data_time: 0.896, memory: 6021, loss_cls: 0.7148, loss_bbox: 0.8737, loss_centerness: 0.6405, loss: 2.2290, grad_norm: 6.8116
