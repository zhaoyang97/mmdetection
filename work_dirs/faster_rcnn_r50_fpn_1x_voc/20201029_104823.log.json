{"env_info": "sys.platform: linux\nPython: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='torchvision://resnet50',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/voc0712/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1000, 600),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'\n            ],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ])),\n    val=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1000, 600),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\ntotal_epochs = 12\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/faster_rcnn_r50_fpn_1x_voc'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "faster_rcnn_r50_fpn_1x_voc.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 2576, "data_time": 0.18231, "loss_rpn_cls": 0.35852, "loss_rpn_bbox": 0.02652, "loss_cls": 1.25294, "acc": 87.20117, "loss_bbox": 0.06166, "loss": 1.69964, "time": 0.39907}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 2576, "data_time": 0.11541, "loss_rpn_cls": 0.07551, "loss_rpn_bbox": 0.02403, "loss_cls": 0.34357, "acc": 95.72656, "loss_bbox": 0.16995, "loss": 0.61306, "time": 0.32123}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 2576, "data_time": 0.11173, "loss_rpn_cls": 0.05888, "loss_rpn_bbox": 0.02118, "loss_cls": 0.3342, "acc": 95.68213, "loss_bbox": 0.17109, "loss": 0.58534, "time": 0.31308}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 2576, "data_time": 0.12126, "loss_rpn_cls": 0.05058, "loss_rpn_bbox": 0.02026, "loss_cls": 0.32558, "acc": 95.1665, "loss_bbox": 0.19407, "loss": 0.59049, "time": 0.32427}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 2576, "data_time": 0.11507, "loss_rpn_cls": 0.04926, "loss_rpn_bbox": 0.02405, "loss_cls": 0.29277, "acc": 95.03613, "loss_bbox": 0.19584, "loss": 0.56192, "time": 0.31851}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 2576, "data_time": 0.12247, "loss_rpn_cls": 0.03712, "loss_rpn_bbox": 0.02057, "loss_cls": 0.30665, "acc": 95.1333, "loss_bbox": 0.19076, "loss": 0.55511, "time": 0.32257}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 2576, "data_time": 0.11943, "loss_rpn_cls": 0.04103, "loss_rpn_bbox": 0.02369, "loss_cls": 0.30913, "acc": 94.43555, "loss_bbox": 0.2137, "loss": 0.58755, "time": 0.32161}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 2576, "data_time": 0.122, "loss_rpn_cls": 0.03911, "loss_rpn_bbox": 0.02142, "loss_cls": 0.27238, "acc": 94.66895, "loss_bbox": 0.20188, "loss": 0.53479, "time": 0.32229}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 2576, "data_time": 0.11067, "loss_rpn_cls": 0.04175, "loss_rpn_bbox": 0.02157, "loss_cls": 0.26919, "acc": 94.77539, "loss_bbox": 0.19398, "loss": 0.52649, "time": 0.31618}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 2576, "data_time": 0.1215, "loss_rpn_cls": 0.04322, "loss_rpn_bbox": 0.02442, "loss_cls": 0.27957, "acc": 94.28809, "loss_bbox": 0.20815, "loss": 0.55537, "time": 0.32242}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 2576, "data_time": 0.1142, "loss_rpn_cls": 0.03227, "loss_rpn_bbox": 0.01904, "loss_cls": 0.23614, "acc": 95.0249, "loss_bbox": 0.18736, "loss": 0.47481, "time": 0.31661}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 2576, "data_time": 0.10741, "loss_rpn_cls": 0.03402, "loss_rpn_bbox": 0.02081, "loss_cls": 0.24139, "acc": 94.66113, "loss_bbox": 0.19478, "loss": 0.491, "time": 0.31373}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 2576, "data_time": 0.11776, "loss_rpn_cls": 0.04006, "loss_rpn_bbox": 0.02278, "loss_cls": 0.22795, "acc": 94.92871, "loss_bbox": 0.18327, "loss": 0.47406, "time": 0.32182}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 2576, "data_time": 0.12497, "loss_rpn_cls": 0.03037, "loss_rpn_bbox": 0.02181, "loss_cls": 0.23843, "acc": 94.34473, "loss_bbox": 0.20247, "loss": 0.49308, "time": 0.32601}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 2576, "data_time": 0.12588, "loss_rpn_cls": 0.03105, "loss_rpn_bbox": 0.02078, "loss_cls": 0.2412, "acc": 94.38379, "loss_bbox": 0.20072, "loss": 0.49374, "time": 0.32922}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 2576, "data_time": 0.11843, "loss_rpn_cls": 0.03185, "loss_rpn_bbox": 0.02177, "loss_cls": 0.25517, "acc": 94.44043, "loss_bbox": 0.20644, "loss": 0.51523, "time": 0.31955}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 2576, "data_time": 0.11329, "loss_rpn_cls": 0.0362, "loss_rpn_bbox": 0.02003, "loss_cls": 0.24305, "acc": 94.5498, "loss_bbox": 0.19483, "loss": 0.4941, "time": 0.3132}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 2576, "data_time": 0.11312, "loss_rpn_cls": 0.02656, "loss_rpn_bbox": 0.01826, "loss_cls": 0.22232, "acc": 94.6333, "loss_bbox": 0.18788, "loss": 0.455, "time": 0.31688}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 2576, "data_time": 0.12393, "loss_rpn_cls": 0.02548, "loss_rpn_bbox": 0.01921, "loss_cls": 0.21513, "acc": 94.41602, "loss_bbox": 0.19937, "loss": 0.45919, "time": 0.32617}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 2576, "data_time": 0.12251, "loss_rpn_cls": 0.03113, "loss_rpn_bbox": 0.0211, "loss_cls": 0.22457, "acc": 94.24512, "loss_bbox": 0.20267, "loss": 0.47948, "time": 0.32579}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 2576, "data_time": 0.11548, "loss_rpn_cls": 0.02958, "loss_rpn_bbox": 0.02197, "loss_cls": 0.21756, "acc": 93.99219, "loss_bbox": 0.21585, "loss": 0.48496, "time": 0.32032}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 2577, "data_time": 0.11261, "loss_rpn_cls": 0.03191, "loss_rpn_bbox": 0.02232, "loss_cls": 0.19163, "acc": 94.81396, "loss_bbox": 0.17593, "loss": 0.42179, "time": 0.31839}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 2577, "data_time": 0.11808, "loss_rpn_cls": 0.02843, "loss_rpn_bbox": 0.02118, "loss_cls": 0.2033, "acc": 94.43994, "loss_bbox": 0.19432, "loss": 0.44723, "time": 0.32256}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 2577, "data_time": 0.12414, "loss_rpn_cls": 0.0279, "loss_rpn_bbox": 0.02155, "loss_cls": 0.20655, "acc": 94.21436, "loss_bbox": 0.19939, "loss": 0.45539, "time": 0.3243}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 2577, "data_time": 0.11536, "loss_rpn_cls": 0.02716, "loss_rpn_bbox": 0.0218, "loss_cls": 0.21157, "acc": 93.97266, "loss_bbox": 0.2101, "loss": 0.47062, "time": 0.31796}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 2577, "data_time": 0.11631, "loss_rpn_cls": 0.0265, "loss_rpn_bbox": 0.02008, "loss_cls": 0.19339, "acc": 94.56738, "loss_bbox": 0.18765, "loss": 0.42762, "time": 0.32023}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 2577, "data_time": 0.12211, "loss_rpn_cls": 0.02649, "loss_rpn_bbox": 0.01917, "loss_cls": 0.18786, "acc": 94.61572, "loss_bbox": 0.18869, "loss": 0.42221, "time": 0.31941}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 2577, "data_time": 0.11849, "loss_rpn_cls": 0.02841, "loss_rpn_bbox": 0.02104, "loss_cls": 0.19785, "acc": 94.33789, "loss_bbox": 0.20001, "loss": 0.44732, "time": 0.31868}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 2577, "data_time": 0.11878, "loss_rpn_cls": 0.02762, "loss_rpn_bbox": 0.02015, "loss_cls": 0.19882, "acc": 94.16309, "loss_bbox": 0.2003, "loss": 0.44689, "time": 0.31667}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 2577, "data_time": 0.12452, "loss_rpn_cls": 0.02511, "loss_rpn_bbox": 0.01874, "loss_cls": 0.19124, "acc": 94.5752, "loss_bbox": 0.18571, "loss": 0.4208, "time": 0.32993}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 2577, "data_time": 0.12194, "loss_rpn_cls": 0.02139, "loss_rpn_bbox": 0.01874, "loss_cls": 0.1858, "acc": 94.41504, "loss_bbox": 0.19556, "loss": 0.42149, "time": 0.32876}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 2577, "data_time": 0.12383, "loss_rpn_cls": 0.02487, "loss_rpn_bbox": 0.01881, "loss_cls": 0.16598, "acc": 95.21094, "loss_bbox": 0.17193, "loss": 0.38158, "time": 0.32309}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 2577, "data_time": 0.12188, "loss_rpn_cls": 0.02553, "loss_rpn_bbox": 0.01888, "loss_cls": 0.16764, "acc": 95.05371, "loss_bbox": 0.17909, "loss": 0.39114, "time": 0.32149}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 2577, "data_time": 0.11287, "loss_rpn_cls": 0.02007, "loss_rpn_bbox": 0.01684, "loss_cls": 0.16937, "acc": 94.84326, "loss_bbox": 0.17978, "loss": 0.38606, "time": 0.31375}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 2577, "data_time": 0.11742, "loss_rpn_cls": 0.02076, "loss_rpn_bbox": 0.01798, "loss_cls": 0.1696, "acc": 94.82568, "loss_bbox": 0.18744, "loss": 0.39578, "time": 0.32477}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 2577, "data_time": 0.12428, "loss_rpn_cls": 0.0238, "loss_rpn_bbox": 0.01754, "loss_cls": 0.17564, "acc": 95.03955, "loss_bbox": 0.17864, "loss": 0.39562, "time": 0.32234}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 2577, "data_time": 0.11178, "loss_rpn_cls": 0.02474, "loss_rpn_bbox": 0.02014, "loss_cls": 0.18378, "acc": 94.56299, "loss_bbox": 0.192, "loss": 0.42067, "time": 0.31884}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 2577, "data_time": 0.11476, "loss_rpn_cls": 0.02233, "loss_rpn_bbox": 0.01735, "loss_cls": 0.17278, "acc": 95.16748, "loss_bbox": 0.16623, "loss": 0.37868, "time": 0.31849}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 2577, "data_time": 0.1221, "loss_rpn_cls": 0.02688, "loss_rpn_bbox": 0.02157, "loss_cls": 0.18382, "acc": 94.53174, "loss_bbox": 0.19118, "loss": 0.42345, "time": 0.32448}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 2577, "data_time": 0.11479, "loss_rpn_cls": 0.02295, "loss_rpn_bbox": 0.01729, "loss_cls": 0.17858, "acc": 94.67529, "loss_bbox": 0.18628, "loss": 0.4051, "time": 0.32638}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 2577, "data_time": 0.11866, "loss_rpn_cls": 0.02889, "loss_rpn_bbox": 0.01989, "loss_cls": 0.18729, "acc": 94.31201, "loss_bbox": 0.19949, "loss": 0.43556, "time": 0.32225}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 2577, "data_time": 0.12215, "loss_rpn_cls": 0.02168, "loss_rpn_bbox": 0.017, "loss_cls": 0.17245, "acc": 94.56006, "loss_bbox": 0.19198, "loss": 0.40311, "time": 0.32542}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.02, "memory": 2577, "data_time": 0.12682, "loss_rpn_cls": 0.02242, "loss_rpn_bbox": 0.01635, "loss_cls": 0.17423, "acc": 94.87988, "loss_bbox": 0.17766, "loss": 0.39066, "time": 0.32682}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.02, "memory": 2577, "data_time": 0.11911, "loss_rpn_cls": 0.02494, "loss_rpn_bbox": 0.01873, "loss_cls": 0.19163, "acc": 94.39697, "loss_bbox": 0.18976, "loss": 0.42506, "time": 0.31952}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.02, "memory": 2577, "data_time": 0.12241, "loss_rpn_cls": 0.02429, "loss_rpn_bbox": 0.02056, "loss_cls": 0.18461, "acc": 94.59961, "loss_bbox": 0.18798, "loss": 0.41745, "time": 0.32811}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.02, "memory": 2577, "data_time": 0.12327, "loss_rpn_cls": 0.02335, "loss_rpn_bbox": 0.01729, "loss_cls": 0.17081, "acc": 94.87744, "loss_bbox": 0.17879, "loss": 0.39024, "time": 0.32291}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.02, "memory": 2577, "data_time": 0.12991, "loss_rpn_cls": 0.02093, "loss_rpn_bbox": 0.02055, "loss_cls": 0.18339, "acc": 94.29248, "loss_bbox": 0.20039, "loss": 0.42526, "time": 0.33087}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.02, "memory": 2577, "data_time": 0.11245, "loss_rpn_cls": 0.02088, "loss_rpn_bbox": 0.01622, "loss_cls": 0.15455, "acc": 95.3667, "loss_bbox": 0.1696, "loss": 0.36125, "time": 0.3228}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.02, "memory": 2577, "data_time": 0.10917, "loss_rpn_cls": 0.02188, "loss_rpn_bbox": 0.01835, "loss_cls": 0.16269, "acc": 94.86914, "loss_bbox": 0.18732, "loss": 0.39024, "time": 0.31188}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.02, "memory": 2577, "data_time": 0.1211, "loss_rpn_cls": 0.0237, "loss_rpn_bbox": 0.01932, "loss_cls": 0.16713, "acc": 94.84619, "loss_bbox": 0.18239, "loss": 0.39255, "time": 0.3244}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.02, "memory": 2577, "data_time": 0.12321, "loss_rpn_cls": 0.02251, "loss_rpn_bbox": 0.01754, "loss_cls": 0.16527, "acc": 95.09229, "loss_bbox": 0.17245, "loss": 0.37777, "time": 0.33231}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.02, "memory": 2577, "data_time": 0.10194, "loss_rpn_cls": 0.01997, "loss_rpn_bbox": 0.01697, "loss_cls": 0.1551, "acc": 95.22852, "loss_bbox": 0.16968, "loss": 0.36173, "time": 0.30786}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.02, "memory": 2577, "data_time": 0.1125, "loss_rpn_cls": 0.02454, "loss_rpn_bbox": 0.01902, "loss_cls": 0.17499, "acc": 94.62988, "loss_bbox": 0.19226, "loss": 0.4108, "time": 0.31423}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.02, "memory": 2577, "data_time": 0.11744, "loss_rpn_cls": 0.01953, "loss_rpn_bbox": 0.01768, "loss_cls": 0.16058, "acc": 95.00439, "loss_bbox": 0.1748, "loss": 0.37258, "time": 0.32297}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.02, "memory": 2577, "data_time": 0.1261, "loss_rpn_cls": 0.01829, "loss_rpn_bbox": 0.01741, "loss_cls": 0.16065, "acc": 95.15186, "loss_bbox": 0.17233, "loss": 0.36868, "time": 0.32772}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.02, "memory": 2577, "data_time": 0.11708, "loss_rpn_cls": 0.0227, "loss_rpn_bbox": 0.01722, "loss_cls": 0.16042, "acc": 95.09766, "loss_bbox": 0.17266, "loss": 0.37301, "time": 0.31639}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.02, "memory": 2577, "data_time": 0.1163, "loss_rpn_cls": 0.02078, "loss_rpn_bbox": 0.01786, "loss_cls": 0.17947, "acc": 94.39941, "loss_bbox": 0.19091, "loss": 0.40902, "time": 0.32484}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.02, "memory": 2577, "data_time": 0.09958, "loss_rpn_cls": 0.02028, "loss_rpn_bbox": 0.01854, "loss_cls": 0.16094, "acc": 94.94385, "loss_bbox": 0.17822, "loss": 0.37798, "time": 0.6095}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.02, "memory": 2577, "data_time": 0.12161, "loss_rpn_cls": 0.02428, "loss_rpn_bbox": 0.0177, "loss_cls": 0.16335, "acc": 94.96826, "loss_bbox": 0.17526, "loss": 0.38059, "time": 0.6285}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.02, "memory": 2577, "data_time": 0.1311, "loss_rpn_cls": 0.02051, "loss_rpn_bbox": 0.01748, "loss_cls": 0.16061, "acc": 94.96045, "loss_bbox": 0.17473, "loss": 0.37334, "time": 0.62114}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.02, "memory": 2577, "data_time": 0.09576, "loss_rpn_cls": 0.01998, "loss_rpn_bbox": 0.01697, "loss_cls": 0.16058, "acc": 94.92969, "loss_bbox": 0.18079, "loss": 0.37832, "time": 0.65222}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.02, "memory": 2577, "data_time": 0.12206, "loss_rpn_cls": 0.02176, "loss_rpn_bbox": 0.02028, "loss_cls": 0.16778, "acc": 94.66455, "loss_bbox": 0.19023, "loss": 0.40005, "time": 0.63329}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.02, "memory": 2577, "data_time": 0.10992, "loss_rpn_cls": 0.0239, "loss_rpn_bbox": 0.01976, "loss_cls": 0.17504, "acc": 94.59668, "loss_bbox": 0.18559, "loss": 0.4043, "time": 0.64965}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.02, "memory": 2577, "data_time": 0.11024, "loss_rpn_cls": 0.01938, "loss_rpn_bbox": 0.01702, "loss_cls": 0.15115, "acc": 95.13623, "loss_bbox": 0.16829, "loss": 0.35584, "time": 0.60904}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.02, "memory": 2577, "data_time": 0.13149, "loss_rpn_cls": 0.02029, "loss_rpn_bbox": 0.01667, "loss_cls": 0.15039, "acc": 95.19092, "loss_bbox": 0.16763, "loss": 0.35496, "time": 0.67416}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.02, "memory": 2577, "data_time": 0.11866, "loss_rpn_cls": 0.01792, "loss_rpn_bbox": 0.01653, "loss_cls": 0.15526, "acc": 95.11572, "loss_bbox": 0.17554, "loss": 0.36525, "time": 0.62389}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.02, "memory": 2577, "data_time": 0.11112, "loss_rpn_cls": 0.01974, "loss_rpn_bbox": 0.01948, "loss_cls": 0.17624, "acc": 94.54834, "loss_bbox": 0.19364, "loss": 0.4091, "time": 0.61853}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.02, "memory": 2577, "data_time": 0.11807, "loss_rpn_cls": 0.01886, "loss_rpn_bbox": 0.01622, "loss_cls": 0.16608, "acc": 94.8916, "loss_bbox": 0.17898, "loss": 0.38014, "time": 0.62356}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.02, "memory": 2577, "data_time": 0.11468, "loss_rpn_cls": 0.02138, "loss_rpn_bbox": 0.01783, "loss_cls": 0.18368, "acc": 94.31396, "loss_bbox": 0.19534, "loss": 0.41823, "time": 0.64989}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.02, "memory": 2577, "data_time": 0.12658, "loss_rpn_cls": 0.02101, "loss_rpn_bbox": 0.01771, "loss_cls": 0.16678, "acc": 94.70459, "loss_bbox": 0.18437, "loss": 0.38988, "time": 0.65833}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.02, "memory": 2577, "data_time": 0.14097, "loss_rpn_cls": 0.02125, "loss_rpn_bbox": 0.02015, "loss_cls": 0.17664, "acc": 94.40527, "loss_bbox": 0.19416, "loss": 0.4122, "time": 0.63958}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.02, "memory": 2577, "data_time": 0.12021, "loss_rpn_cls": 0.02045, "loss_rpn_bbox": 0.01568, "loss_cls": 0.15277, "acc": 95.13281, "loss_bbox": 0.16875, "loss": 0.35766, "time": 0.60815}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.02, "memory": 2577, "data_time": 0.10402, "loss_rpn_cls": 0.02236, "loss_rpn_bbox": 0.01989, "loss_cls": 0.18252, "acc": 94.44678, "loss_bbox": 0.19482, "loss": 0.41959, "time": 0.63318}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.02, "memory": 2577, "data_time": 0.12057, "loss_rpn_cls": 0.01884, "loss_rpn_bbox": 0.0172, "loss_cls": 0.16475, "acc": 94.70215, "loss_bbox": 0.18724, "loss": 0.38802, "time": 0.63385}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.02, "memory": 2577, "data_time": 0.12797, "loss_rpn_cls": 0.01762, "loss_rpn_bbox": 0.01715, "loss_cls": 0.15905, "acc": 94.87549, "loss_bbox": 0.18261, "loss": 0.37643, "time": 0.6387}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.02, "memory": 2577, "data_time": 0.12269, "loss_rpn_cls": 0.01795, "loss_rpn_bbox": 0.01787, "loss_cls": 0.15585, "acc": 94.97021, "loss_bbox": 0.17861, "loss": 0.37028, "time": 0.62234}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.02, "memory": 2577, "data_time": 0.12402, "loss_rpn_cls": 0.02455, "loss_rpn_bbox": 0.01968, "loss_cls": 0.1567, "acc": 95.15088, "loss_bbox": 0.16917, "loss": 0.3701, "time": 0.64037}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.02, "memory": 2577, "data_time": 0.10253, "loss_rpn_cls": 0.01717, "loss_rpn_bbox": 0.01765, "loss_cls": 0.15049, "acc": 95.09033, "loss_bbox": 0.17253, "loss": 0.35784, "time": 0.65437}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.02, "memory": 2577, "data_time": 0.1167, "loss_rpn_cls": 0.02015, "loss_rpn_bbox": 0.01725, "loss_cls": 0.15177, "acc": 95.2124, "loss_bbox": 0.16685, "loss": 0.35602, "time": 0.62056}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.02, "memory": 2577, "data_time": 0.11673, "loss_rpn_cls": 0.01673, "loss_rpn_bbox": 0.01771, "loss_cls": 0.16681, "acc": 94.69824, "loss_bbox": 0.19016, "loss": 0.39141, "time": 0.64622}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.02, "memory": 2577, "data_time": 0.10567, "loss_rpn_cls": 0.01839, "loss_rpn_bbox": 0.01786, "loss_cls": 0.1689, "acc": 94.66064, "loss_bbox": 0.1845, "loss": 0.38965, "time": 0.60352}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.02, "memory": 2577, "data_time": 0.10819, "loss_rpn_cls": 0.02035, "loss_rpn_bbox": 0.01687, "loss_cls": 0.1662, "acc": 94.84375, "loss_bbox": 0.1762, "loss": 0.37962, "time": 0.60583}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.02, "memory": 2577, "data_time": 0.11264, "loss_rpn_cls": 0.01884, "loss_rpn_bbox": 0.01577, "loss_cls": 0.15729, "acc": 94.97266, "loss_bbox": 0.1819, "loss": 0.3738, "time": 0.65065}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.02, "memory": 2577, "data_time": 0.1235, "loss_rpn_cls": 0.01606, "loss_rpn_bbox": 0.01488, "loss_cls": 0.13561, "acc": 95.60645, "loss_bbox": 0.15786, "loss": 0.3244, "time": 0.65381}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.02, "memory": 2577, "data_time": 0.1136, "loss_rpn_cls": 0.01984, "loss_rpn_bbox": 0.01935, "loss_cls": 0.15442, "acc": 94.8252, "loss_bbox": 0.19266, "loss": 0.38627, "time": 0.6028}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.02, "memory": 2577, "data_time": 0.09602, "loss_rpn_cls": 0.01767, "loss_rpn_bbox": 0.0167, "loss_cls": 0.15117, "acc": 95.06348, "loss_bbox": 0.17068, "loss": 0.35622, "time": 0.62193}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.02, "memory": 2577, "data_time": 0.12848, "loss_rpn_cls": 0.01622, "loss_rpn_bbox": 0.01699, "loss_cls": 0.13772, "acc": 95.53809, "loss_bbox": 0.16056, "loss": 0.33149, "time": 0.64754}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.02, "memory": 2577, "data_time": 0.11119, "loss_rpn_cls": 0.01538, "loss_rpn_bbox": 0.01644, "loss_cls": 0.14878, "acc": 95.17871, "loss_bbox": 0.17483, "loss": 0.35543, "time": 0.63979}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.02, "memory": 2577, "data_time": 0.11755, "loss_rpn_cls": 0.01876, "loss_rpn_bbox": 0.01583, "loss_cls": 0.16023, "acc": 94.96973, "loss_bbox": 0.1742, "loss": 0.36902, "time": 0.62191}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.02, "memory": 2577, "data_time": 0.12019, "loss_rpn_cls": 0.01682, "loss_rpn_bbox": 0.01654, "loss_cls": 0.14717, "acc": 95.22266, "loss_bbox": 0.17097, "loss": 0.3515, "time": 0.61419}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.02, "memory": 2577, "data_time": 0.10684, "loss_rpn_cls": 0.02035, "loss_rpn_bbox": 0.0165, "loss_cls": 0.16282, "acc": 94.90234, "loss_bbox": 0.17624, "loss": 0.37592, "time": 0.65711}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.02, "memory": 2577, "data_time": 0.11454, "loss_rpn_cls": 0.02066, "loss_rpn_bbox": 0.01746, "loss_cls": 0.16608, "acc": 94.81201, "loss_bbox": 0.18333, "loss": 0.38753, "time": 0.63354}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.02, "memory": 2577, "data_time": 0.1157, "loss_rpn_cls": 0.01843, "loss_rpn_bbox": 0.0192, "loss_cls": 0.1504, "acc": 95.14209, "loss_bbox": 0.1731, "loss": 0.36113, "time": 0.6494}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.02, "memory": 2577, "data_time": 0.12042, "loss_rpn_cls": 0.01735, "loss_rpn_bbox": 0.01571, "loss_cls": 0.15027, "acc": 95.05664, "loss_bbox": 0.1769, "loss": 0.36023, "time": 0.62647}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.02, "memory": 2577, "data_time": 0.10949, "loss_rpn_cls": 0.02038, "loss_rpn_bbox": 0.01797, "loss_cls": 0.15595, "acc": 94.9375, "loss_bbox": 0.17874, "loss": 0.37304, "time": 0.63981}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.02, "memory": 2577, "data_time": 0.11717, "loss_rpn_cls": 0.01616, "loss_rpn_bbox": 0.01558, "loss_cls": 0.14969, "acc": 95.27734, "loss_bbox": 0.16838, "loss": 0.3498, "time": 0.6495}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.02, "memory": 2577, "data_time": 0.10207, "loss_rpn_cls": 0.01502, "loss_rpn_bbox": 0.01466, "loss_cls": 0.14859, "acc": 95.17139, "loss_bbox": 0.17198, "loss": 0.35025, "time": 0.63844}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.02, "memory": 2577, "data_time": 0.11928, "loss_rpn_cls": 0.01628, "loss_rpn_bbox": 0.01584, "loss_cls": 0.14534, "acc": 95.17432, "loss_bbox": 0.17406, "loss": 0.35151, "time": 0.65556}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.02, "memory": 2577, "data_time": 0.1134, "loss_rpn_cls": 0.01549, "loss_rpn_bbox": 0.01498, "loss_cls": 0.13452, "acc": 95.56006, "loss_bbox": 0.15699, "loss": 0.32198, "time": 0.64408}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.02, "memory": 2577, "data_time": 0.11088, "loss_rpn_cls": 0.01877, "loss_rpn_bbox": 0.01738, "loss_cls": 0.1431, "acc": 95.44092, "loss_bbox": 0.15906, "loss": 0.33831, "time": 0.63692}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.02, "memory": 2577, "data_time": 0.12693, "loss_rpn_cls": 0.01845, "loss_rpn_bbox": 0.01594, "loss_cls": 0.1468, "acc": 95.32422, "loss_bbox": 0.16701, "loss": 0.34821, "time": 0.65307}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.02, "memory": 2577, "data_time": 0.12128, "loss_rpn_cls": 0.01957, "loss_rpn_bbox": 0.01693, "loss_cls": 0.16538, "acc": 94.69629, "loss_bbox": 0.18105, "loss": 0.38293, "time": 0.6478}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.02, "memory": 2577, "data_time": 0.11882, "loss_rpn_cls": 0.01822, "loss_rpn_bbox": 0.01704, "loss_cls": 0.16495, "acc": 94.6709, "loss_bbox": 0.18497, "loss": 0.38519, "time": 0.5837}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.02, "memory": 2577, "data_time": 0.11504, "loss_rpn_cls": 0.019, "loss_rpn_bbox": 0.01602, "loss_cls": 0.15622, "acc": 95.07812, "loss_bbox": 0.16884, "loss": 0.36008, "time": 0.61714}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.02, "memory": 2577, "data_time": 0.11516, "loss_rpn_cls": 0.01772, "loss_rpn_bbox": 0.01693, "loss_cls": 0.1405, "acc": 95.31543, "loss_bbox": 0.17058, "loss": 0.34572, "time": 0.6415}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.02, "memory": 2577, "data_time": 0.11784, "loss_rpn_cls": 0.0155, "loss_rpn_bbox": 0.01717, "loss_cls": 0.15206, "acc": 94.8833, "loss_bbox": 0.18422, "loss": 0.36895, "time": 0.62817}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.02, "memory": 2577, "data_time": 0.12144, "loss_rpn_cls": 0.01484, "loss_rpn_bbox": 0.01655, "loss_cls": 0.13928, "acc": 95.22998, "loss_bbox": 0.17414, "loss": 0.34481, "time": 0.64123}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.02, "memory": 2577, "data_time": 0.11679, "loss_rpn_cls": 0.01574, "loss_rpn_bbox": 0.01591, "loss_cls": 0.1547, "acc": 95.02051, "loss_bbox": 0.1742, "loss": 0.36055, "time": 0.62876}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.02, "memory": 2577, "data_time": 0.09611, "loss_rpn_cls": 0.01614, "loss_rpn_bbox": 0.01717, "loss_cls": 0.15427, "acc": 95.00781, "loss_bbox": 0.18, "loss": 0.36758, "time": 0.59768}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.02, "memory": 2577, "data_time": 0.11148, "loss_rpn_cls": 0.01486, "loss_rpn_bbox": 0.01603, "loss_cls": 0.13777, "acc": 95.35205, "loss_bbox": 0.16638, "loss": 0.33504, "time": 0.61775}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.02, "memory": 2577, "data_time": 0.10826, "loss_rpn_cls": 0.01686, "loss_rpn_bbox": 0.01462, "loss_cls": 0.146, "acc": 95.34131, "loss_bbox": 0.16558, "loss": 0.34307, "time": 0.64493}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.02, "memory": 2577, "data_time": 0.10937, "loss_rpn_cls": 0.01765, "loss_rpn_bbox": 0.01562, "loss_cls": 0.15246, "acc": 95.02539, "loss_bbox": 0.1761, "loss": 0.36184, "time": 0.61006}
{"mode": "train", "epoch": 1, "iter": 5650, "lr": 0.02, "memory": 2577, "data_time": 0.10913, "loss_rpn_cls": 0.01512, "loss_rpn_bbox": 0.01666, "loss_cls": 0.15433, "acc": 94.74268, "loss_bbox": 0.17908, "loss": 0.36519, "time": 0.65987}
{"mode": "train", "epoch": 1, "iter": 5700, "lr": 0.02, "memory": 2577, "data_time": 0.12753, "loss_rpn_cls": 0.01645, "loss_rpn_bbox": 0.01529, "loss_cls": 0.13398, "acc": 95.59473, "loss_bbox": 0.16302, "loss": 0.32875, "time": 0.6299}
{"mode": "train", "epoch": 1, "iter": 5750, "lr": 0.02, "memory": 2577, "data_time": 0.11485, "loss_rpn_cls": 0.01552, "loss_rpn_bbox": 0.01639, "loss_cls": 0.13825, "acc": 95.56787, "loss_bbox": 0.16224, "loss": 0.3324, "time": 0.62523}
{"mode": "train", "epoch": 1, "iter": 5800, "lr": 0.02, "memory": 2577, "data_time": 0.1091, "loss_rpn_cls": 0.01502, "loss_rpn_bbox": 0.01585, "loss_cls": 0.14967, "acc": 95.05762, "loss_bbox": 0.18295, "loss": 0.36348, "time": 0.65102}
{"mode": "train", "epoch": 1, "iter": 5850, "lr": 0.02, "memory": 2577, "data_time": 0.1163, "loss_rpn_cls": 0.01456, "loss_rpn_bbox": 0.01581, "loss_cls": 0.13549, "acc": 95.5459, "loss_bbox": 0.16353, "loss": 0.32939, "time": 0.63122}
{"mode": "train", "epoch": 1, "iter": 5900, "lr": 0.02, "memory": 2577, "data_time": 0.11898, "loss_rpn_cls": 0.02033, "loss_rpn_bbox": 0.01678, "loss_cls": 0.1487, "acc": 95.05713, "loss_bbox": 0.17912, "loss": 0.36493, "time": 0.63202}
{"mode": "train", "epoch": 1, "iter": 5950, "lr": 0.02, "memory": 2577, "data_time": 0.11008, "loss_rpn_cls": 0.01409, "loss_rpn_bbox": 0.01581, "loss_cls": 0.13924, "acc": 95.39014, "loss_bbox": 0.16179, "loss": 0.33094, "time": 0.64138}
{"mode": "train", "epoch": 1, "iter": 6000, "lr": 0.02, "memory": 2577, "data_time": 0.10442, "loss_rpn_cls": 0.01602, "loss_rpn_bbox": 0.01652, "loss_cls": 0.14329, "acc": 95.08594, "loss_bbox": 0.17211, "loss": 0.34793, "time": 0.63873}
{"mode": "train", "epoch": 1, "iter": 6050, "lr": 0.02, "memory": 2577, "data_time": 0.12539, "loss_rpn_cls": 0.01696, "loss_rpn_bbox": 0.01695, "loss_cls": 0.14413, "acc": 95.14258, "loss_bbox": 0.17198, "loss": 0.35002, "time": 0.64372}
{"mode": "train", "epoch": 1, "iter": 6100, "lr": 0.02, "memory": 2577, "data_time": 0.12483, "loss_rpn_cls": 0.02128, "loss_rpn_bbox": 0.01776, "loss_cls": 0.15065, "acc": 95.05713, "loss_bbox": 0.17407, "loss": 0.36377, "time": 0.62304}
{"mode": "train", "epoch": 1, "iter": 6150, "lr": 0.02, "memory": 2577, "data_time": 0.1192, "loss_rpn_cls": 0.01423, "loss_rpn_bbox": 0.01461, "loss_cls": 0.1418, "acc": 95.35107, "loss_bbox": 0.16324, "loss": 0.33388, "time": 0.62399}
{"mode": "train", "epoch": 1, "iter": 6200, "lr": 0.02, "memory": 2577, "data_time": 0.12682, "loss_rpn_cls": 0.01787, "loss_rpn_bbox": 0.01768, "loss_cls": 0.15741, "acc": 94.78027, "loss_bbox": 0.18044, "loss": 0.37341, "time": 0.67152}
