{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.4.0\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained=\n    '../mmclassification/work_dirs/tct_resnet50_b32x8_e100/epoch_100_pretrained.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=10,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nannotations_root = '../data/TCT_30000/'\nimage_root = '../data/TCT_30000/'\nclasses = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n           'dysbacteriosis_herpes_act', 'ec')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/train30000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/val10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/test10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.03, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/faster_rcnn_r50_fpn_1x_tct_e100_lrx3'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "faster_rcnn_r50_fpn_1x_tct_e100_lrx3.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00297, "memory": 3718, "data_time": 0.41685, "loss_rpn_cls": 0.5015, "loss_rpn_bbox": 0.04331, "loss_cls": 0.48296, "acc": 90.72705, "loss_bbox": 0.03902, "loss": 1.0668, "time": 0.72207}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00596, "memory": 3719, "data_time": 0.37858, "loss_rpn_cls": 0.18915, "loss_rpn_bbox": 0.04568, "loss_cls": 0.15142, "acc": 97.62744, "loss_bbox": 0.06671, "loss": 0.45296, "time": 0.66743}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00896, "memory": 3719, "data_time": 0.36926, "loss_rpn_cls": 0.12877, "loss_rpn_bbox": 0.0405, "loss_cls": 0.28191, "acc": 94.78125, "loss_bbox": 0.17979, "loss": 0.63097, "time": 0.66612}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.01196, "memory": 3719, "data_time": 0.35513, "loss_rpn_cls": 0.10639, "loss_rpn_bbox": 0.03822, "loss_cls": 0.30073, "acc": 93.82666, "loss_bbox": 0.20004, "loss": 0.64539, "time": 0.66614}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.01496, "memory": 3719, "data_time": 0.37935, "loss_rpn_cls": 0.09853, "loss_rpn_bbox": 0.03808, "loss_cls": 0.31718, "acc": 93.2417, "loss_bbox": 0.20866, "loss": 0.66246, "time": 0.66688}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01795, "memory": 3719, "data_time": 0.37538, "loss_rpn_cls": 0.09889, "loss_rpn_bbox": 0.03762, "loss_cls": 0.33459, "acc": 92.65869, "loss_bbox": 0.2199, "loss": 0.691, "time": 0.66442}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.02095, "memory": 3719, "data_time": 0.3676, "loss_rpn_cls": 0.08926, "loss_rpn_bbox": 0.03392, "loss_cls": 0.34146, "acc": 91.80762, "loss_bbox": 0.24176, "loss": 0.7064, "time": 0.66712}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.02395, "memory": 3719, "data_time": 0.36107, "loss_rpn_cls": 0.08121, "loss_rpn_bbox": 0.03454, "loss_cls": 0.32795, "acc": 91.74854, "loss_bbox": 0.24189, "loss": 0.68559, "time": 0.66697}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.02694, "memory": 3719, "data_time": 0.3537, "loss_rpn_cls": 0.08367, "loss_rpn_bbox": 0.0361, "loss_cls": 0.36593, "acc": 91.41992, "loss_bbox": 0.24217, "loss": 0.72787, "time": 0.66067}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.02994, "memory": 3719, "data_time": 0.36352, "loss_rpn_cls": 0.08678, "loss_rpn_bbox": 0.03768, "loss_cls": 0.36503, "acc": 90.9082, "loss_bbox": 0.25385, "loss": 0.74334, "time": 0.66377}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.03, "memory": 3719, "data_time": 0.36796, "loss_rpn_cls": 0.08125, "loss_rpn_bbox": 0.03253, "loss_cls": 0.3518, "acc": 91.35498, "loss_bbox": 0.2423, "loss": 0.70787, "time": 0.66712}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.03, "memory": 3719, "data_time": 0.3645, "loss_rpn_cls": 0.08152, "loss_rpn_bbox": 0.03489, "loss_cls": 0.32514, "acc": 91.8877, "loss_bbox": 0.21751, "loss": 0.65906, "time": 0.66481}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.03, "memory": 3719, "data_time": 0.35828, "loss_rpn_cls": 0.07866, "loss_rpn_bbox": 0.03455, "loss_cls": 0.34744, "acc": 91.104, "loss_bbox": 0.2439, "loss": 0.70455, "time": 0.65643}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.03, "memory": 3719, "data_time": 0.35672, "loss_rpn_cls": 0.08394, "loss_rpn_bbox": 0.03422, "loss_cls": 0.30153, "acc": 92.17285, "loss_bbox": 0.2088, "loss": 0.62849, "time": 0.66259}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.03, "memory": 3719, "data_time": 0.37036, "loss_rpn_cls": 0.07828, "loss_rpn_bbox": 0.03439, "loss_cls": 0.31608, "acc": 91.98486, "loss_bbox": 0.21409, "loss": 0.64284, "time": 0.67437}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.03, "memory": 3719, "data_time": 0.36861, "loss_rpn_cls": 0.07387, "loss_rpn_bbox": 0.03224, "loss_cls": 0.32678, "acc": 91.0332, "loss_bbox": 0.24221, "loss": 0.6751, "time": 0.67219}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.03, "memory": 3719, "data_time": 0.36689, "loss_rpn_cls": 0.06977, "loss_rpn_bbox": 0.02995, "loss_cls": 0.33322, "acc": 91.17676, "loss_bbox": 0.23606, "loss": 0.669, "time": 0.66239}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.03, "memory": 3719, "data_time": 0.36994, "loss_rpn_cls": 0.07877, "loss_rpn_bbox": 0.03495, "loss_cls": 0.33774, "acc": 91.25977, "loss_bbox": 0.23011, "loss": 0.68157, "time": 0.67192}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.03, "memory": 3719, "data_time": 0.35259, "loss_rpn_cls": 0.07168, "loss_rpn_bbox": 0.03439, "loss_cls": 0.32022, "acc": 91.12598, "loss_bbox": 0.22906, "loss": 0.65534, "time": 0.66478}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.03, "memory": 3719, "data_time": 0.35158, "loss_rpn_cls": 0.06874, "loss_rpn_bbox": 0.03331, "loss_cls": 0.33004, "acc": 90.95166, "loss_bbox": 0.2359, "loss": 0.66799, "time": 0.66796}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.03, "memory": 3719, "data_time": 0.3685, "loss_rpn_cls": 0.06579, "loss_rpn_bbox": 0.03262, "loss_cls": 0.31585, "acc": 90.88867, "loss_bbox": 0.24049, "loss": 0.65476, "time": 0.66442}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.03, "memory": 3719, "data_time": 0.36825, "loss_rpn_cls": 0.06651, "loss_rpn_bbox": 0.03148, "loss_cls": 0.30406, "acc": 91.52832, "loss_bbox": 0.22266, "loss": 0.62471, "time": 0.66307}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.03, "memory": 3719, "data_time": 0.35721, "loss_rpn_cls": 0.06975, "loss_rpn_bbox": 0.03487, "loss_cls": 0.31436, "acc": 91.48389, "loss_bbox": 0.22557, "loss": 0.64456, "time": 0.66776}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.03, "memory": 3719, "data_time": 0.35347, "loss_rpn_cls": 0.05895, "loss_rpn_bbox": 0.02954, "loss_cls": 0.30584, "acc": 91.26221, "loss_bbox": 0.22747, "loss": 0.6218, "time": 0.66824}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.03, "memory": 3719, "data_time": 0.35419, "loss_rpn_cls": 0.0681, "loss_rpn_bbox": 0.03139, "loss_cls": 0.29939, "acc": 91.68604, "loss_bbox": 0.21448, "loss": 0.61335, "time": 0.66285}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.03, "memory": 3719, "data_time": 0.36952, "loss_rpn_cls": 0.06457, "loss_rpn_bbox": 0.03119, "loss_cls": 0.29806, "acc": 91.71191, "loss_bbox": 0.21867, "loss": 0.6125, "time": 0.66253}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.03, "memory": 3719, "data_time": 0.36197, "loss_rpn_cls": 0.05895, "loss_rpn_bbox": 0.0282, "loss_cls": 0.30501, "acc": 91.38672, "loss_bbox": 0.21863, "loss": 0.61079, "time": 0.66948}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.03, "memory": 3719, "data_time": 0.36441, "loss_rpn_cls": 0.05927, "loss_rpn_bbox": 0.03181, "loss_cls": 0.2974, "acc": 91.50732, "loss_bbox": 0.22089, "loss": 0.60937, "time": 0.66441}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.03, "memory": 3719, "data_time": 0.35953, "loss_rpn_cls": 0.0618, "loss_rpn_bbox": 0.03149, "loss_cls": 0.27796, "acc": 92.13867, "loss_bbox": 0.20418, "loss": 0.57543, "time": 0.66561}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.03, "memory": 3719, "data_time": 0.36258, "loss_rpn_cls": 0.0617, "loss_rpn_bbox": 0.03134, "loss_cls": 0.29924, "acc": 91.14453, "loss_bbox": 0.22317, "loss": 0.61546, "time": 0.66613}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.03, "memory": 3719, "data_time": 0.36514, "loss_rpn_cls": 0.05608, "loss_rpn_bbox": 0.02879, "loss_cls": 0.29595, "acc": 91.33057, "loss_bbox": 0.217, "loss": 0.59781, "time": 0.66442}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.03, "memory": 3719, "data_time": 0.36341, "loss_rpn_cls": 0.05626, "loss_rpn_bbox": 0.03146, "loss_cls": 0.31009, "acc": 90.97559, "loss_bbox": 0.23028, "loss": 0.62808, "time": 0.6653}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.03, "memory": 3719, "data_time": 0.36902, "loss_rpn_cls": 0.0613, "loss_rpn_bbox": 0.02981, "loss_cls": 0.28771, "acc": 91.39795, "loss_bbox": 0.21513, "loss": 0.59395, "time": 0.66913}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.03, "memory": 3719, "data_time": 0.37078, "loss_rpn_cls": 0.05569, "loss_rpn_bbox": 0.03007, "loss_cls": 0.30157, "acc": 91.00293, "loss_bbox": 0.22824, "loss": 0.61557, "time": 0.67369}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.03, "memory": 3719, "data_time": 0.37793, "loss_rpn_cls": 0.05795, "loss_rpn_bbox": 0.03074, "loss_cls": 0.28893, "acc": 91.58203, "loss_bbox": 0.21536, "loss": 0.59298, "time": 0.67688}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.03, "memory": 3719, "data_time": 0.38029, "loss_rpn_cls": 0.06037, "loss_rpn_bbox": 0.0315, "loss_cls": 0.30605, "acc": 91.17334, "loss_bbox": 0.22173, "loss": 0.61965, "time": 0.67638}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.03, "memory": 3719, "data_time": 0.36425, "loss_rpn_cls": 0.05421, "loss_rpn_bbox": 0.02985, "loss_cls": 0.29456, "acc": 91.39502, "loss_bbox": 0.21452, "loss": 0.59313, "time": 0.66407}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.03, "memory": 3719, "data_time": 0.37335, "loss_rpn_cls": 0.05173, "loss_rpn_bbox": 0.02666, "loss_cls": 0.27984, "acc": 92.01465, "loss_bbox": 0.20208, "loss": 0.56031, "time": 0.67567}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.03, "memory": 3719, "data_time": 0.36614, "loss_rpn_cls": 0.06031, "loss_rpn_bbox": 0.0282, "loss_cls": 0.293, "acc": 91.71582, "loss_bbox": 0.211, "loss": 0.59251, "time": 0.66484}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.03, "memory": 3719, "data_time": 0.3722, "loss_rpn_cls": 0.0574, "loss_rpn_bbox": 0.0297, "loss_cls": 0.28688, "acc": 91.57617, "loss_bbox": 0.21232, "loss": 0.5863, "time": 0.66439}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.03, "memory": 3719, "data_time": 0.3727, "loss_rpn_cls": 0.04916, "loss_rpn_bbox": 0.02818, "loss_cls": 0.27665, "acc": 91.88867, "loss_bbox": 0.20378, "loss": 0.55777, "time": 0.662}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.03, "memory": 3719, "data_time": 0.37067, "loss_rpn_cls": 0.0575, "loss_rpn_bbox": 0.02993, "loss_cls": 0.26825, "acc": 92.17041, "loss_bbox": 0.20073, "loss": 0.5564, "time": 0.66674}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.03, "memory": 3719, "data_time": 0.37043, "loss_rpn_cls": 0.05473, "loss_rpn_bbox": 0.02994, "loss_cls": 0.2772, "acc": 91.56201, "loss_bbox": 0.21399, "loss": 0.57586, "time": 0.66709}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.03, "memory": 3719, "data_time": 0.36808, "loss_rpn_cls": 0.05425, "loss_rpn_bbox": 0.02957, "loss_cls": 0.27858, "acc": 91.6377, "loss_bbox": 0.21816, "loss": 0.58057, "time": 0.66418}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.03, "memory": 3719, "data_time": 0.37135, "loss_rpn_cls": 0.0538, "loss_rpn_bbox": 0.0297, "loss_cls": 0.28565, "acc": 91.51367, "loss_bbox": 0.21762, "loss": 0.58677, "time": 0.66296}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.03, "memory": 3719, "data_time": 0.35871, "loss_rpn_cls": 0.05104, "loss_rpn_bbox": 0.02752, "loss_cls": 0.27934, "acc": 91.93408, "loss_bbox": 0.20335, "loss": 0.56124, "time": 0.66769}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.03, "memory": 3719, "data_time": 0.36475, "loss_rpn_cls": 0.05506, "loss_rpn_bbox": 0.02932, "loss_cls": 0.28064, "acc": 91.74854, "loss_bbox": 0.20827, "loss": 0.57329, "time": 0.66756}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.03, "memory": 3719, "data_time": 0.36257, "loss_rpn_cls": 0.04906, "loss_rpn_bbox": 0.0294, "loss_cls": 0.28923, "acc": 91.14697, "loss_bbox": 0.22512, "loss": 0.59281, "time": 0.67098}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.03, "memory": 3719, "data_time": 0.3718, "loss_rpn_cls": 0.0521, "loss_rpn_bbox": 0.02698, "loss_cls": 0.29119, "acc": 91.56934, "loss_bbox": 0.20631, "loss": 0.57657, "time": 0.67139}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.03, "memory": 3719, "data_time": 0.37821, "loss_rpn_cls": 0.0583, "loss_rpn_bbox": 0.03162, "loss_cls": 0.29561, "acc": 91.28711, "loss_bbox": 0.21856, "loss": 0.60409, "time": 0.67579}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.03, "memory": 3719, "data_time": 0.37426, "loss_rpn_cls": 0.05248, "loss_rpn_bbox": 0.03222, "loss_cls": 0.28402, "acc": 91.39307, "loss_bbox": 0.22096, "loss": 0.58968, "time": 0.67422}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.03, "memory": 3719, "data_time": 0.36471, "loss_rpn_cls": 0.04869, "loss_rpn_bbox": 0.02632, "loss_cls": 0.27361, "acc": 91.69629, "loss_bbox": 0.20172, "loss": 0.55034, "time": 0.66277}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.03, "memory": 3719, "data_time": 0.38001, "loss_rpn_cls": 0.04998, "loss_rpn_bbox": 0.02771, "loss_cls": 0.26569, "acc": 91.88428, "loss_bbox": 0.20856, "loss": 0.55193, "time": 0.69325}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.03, "memory": 3719, "data_time": 0.371, "loss_rpn_cls": 0.05003, "loss_rpn_bbox": 0.02831, "loss_cls": 0.27043, "acc": 91.78662, "loss_bbox": 0.20972, "loss": 0.5585, "time": 0.67005}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.03, "memory": 3719, "data_time": 0.38918, "loss_rpn_cls": 0.05096, "loss_rpn_bbox": 0.02804, "loss_cls": 0.25215, "acc": 92.29688, "loss_bbox": 0.18752, "loss": 0.51867, "time": 0.68228}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.03, "memory": 3719, "data_time": 0.37759, "loss_rpn_cls": 0.04971, "loss_rpn_bbox": 0.02846, "loss_cls": 0.26084, "acc": 92.20508, "loss_bbox": 0.19067, "loss": 0.52967, "time": 0.67809}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.03, "memory": 3719, "data_time": 0.37908, "loss_rpn_cls": 0.05033, "loss_rpn_bbox": 0.02811, "loss_cls": 0.26303, "acc": 91.95459, "loss_bbox": 0.20312, "loss": 0.5446, "time": 0.67627}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.03, "memory": 3719, "data_time": 0.38673, "loss_rpn_cls": 0.05016, "loss_rpn_bbox": 0.03089, "loss_cls": 0.28006, "acc": 91.46729, "loss_bbox": 0.22163, "loss": 0.58273, "time": 0.67464}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.03, "memory": 3719, "data_time": 0.37596, "loss_rpn_cls": 0.05285, "loss_rpn_bbox": 0.02638, "loss_cls": 0.27048, "acc": 91.9585, "loss_bbox": 0.19624, "loss": 0.54595, "time": 0.67087}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.03, "memory": 3719, "data_time": 0.36785, "loss_rpn_cls": 0.05193, "loss_rpn_bbox": 0.02745, "loss_cls": 0.28144, "acc": 91.25488, "loss_bbox": 0.21496, "loss": 0.57578, "time": 0.67017}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.03, "memory": 3719, "data_time": 0.37532, "loss_rpn_cls": 0.04767, "loss_rpn_bbox": 0.0272, "loss_cls": 0.27566, "acc": 91.48877, "loss_bbox": 0.20788, "loss": 0.5584, "time": 0.67573}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.03, "memory": 3719, "data_time": 0.37573, "loss_rpn_cls": 0.04968, "loss_rpn_bbox": 0.02747, "loss_cls": 0.28224, "acc": 91.49707, "loss_bbox": 0.21239, "loss": 0.57178, "time": 0.67487}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.03, "memory": 3719, "data_time": 0.37424, "loss_rpn_cls": 0.04911, "loss_rpn_bbox": 0.02621, "loss_cls": 0.27168, "acc": 91.78369, "loss_bbox": 0.2048, "loss": 0.5518, "time": 0.6701}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.03, "memory": 3719, "data_time": 0.36899, "loss_rpn_cls": 0.05098, "loss_rpn_bbox": 0.0293, "loss_cls": 0.28675, "acc": 91.19092, "loss_bbox": 0.2194, "loss": 0.58643, "time": 0.66931}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.03, "memory": 3719, "data_time": 0.36749, "loss_rpn_cls": 0.04495, "loss_rpn_bbox": 0.02521, "loss_cls": 0.26375, "acc": 91.95703, "loss_bbox": 0.20159, "loss": 0.5355, "time": 0.67396}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.03, "memory": 3719, "data_time": 0.37017, "loss_rpn_cls": 0.04986, "loss_rpn_bbox": 0.02837, "loss_cls": 0.27926, "acc": 91.47998, "loss_bbox": 0.21452, "loss": 0.57202, "time": 0.67933}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.03, "memory": 3719, "data_time": 0.38565, "loss_rpn_cls": 0.04665, "loss_rpn_bbox": 0.02675, "loss_cls": 0.27402, "acc": 91.74072, "loss_bbox": 0.20669, "loss": 0.55411, "time": 0.67376}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.03, "memory": 3719, "data_time": 0.36737, "loss_rpn_cls": 0.04861, "loss_rpn_bbox": 0.02563, "loss_cls": 0.25694, "acc": 92.15918, "loss_bbox": 0.18852, "loss": 0.5197, "time": 0.67539}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.03, "memory": 3719, "data_time": 0.37602, "loss_rpn_cls": 0.05186, "loss_rpn_bbox": 0.02871, "loss_cls": 0.28866, "acc": 91.60156, "loss_bbox": 0.20768, "loss": 0.57691, "time": 0.68535}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.03, "memory": 3719, "data_time": 0.37418, "loss_rpn_cls": 0.0548, "loss_rpn_bbox": 0.02875, "loss_cls": 0.26573, "acc": 92.11865, "loss_bbox": 0.19799, "loss": 0.54727, "time": 0.67221}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.03, "memory": 3719, "data_time": 0.38376, "loss_rpn_cls": 0.0487, "loss_rpn_bbox": 0.02588, "loss_cls": 0.26571, "acc": 92.02344, "loss_bbox": 0.20299, "loss": 0.54329, "time": 0.68006}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.03, "memory": 3719, "data_time": 0.37389, "loss_rpn_cls": 0.05164, "loss_rpn_bbox": 0.02656, "loss_cls": 0.26316, "acc": 92.14697, "loss_bbox": 0.1959, "loss": 0.53726, "time": 0.66829}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.03, "memory": 3719, "data_time": 0.38641, "loss_rpn_cls": 0.04259, "loss_rpn_bbox": 0.02623, "loss_cls": 0.27236, "acc": 91.63184, "loss_bbox": 0.2072, "loss": 0.54838, "time": 0.68271}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.03, "memory": 3719, "data_time": 0.37081, "loss_rpn_cls": 0.05332, "loss_rpn_bbox": 0.0291, "loss_cls": 0.27263, "acc": 91.61475, "loss_bbox": 0.20933, "loss": 0.56437, "time": 0.67363}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.03, "memory": 3719, "data_time": 0.38555, "loss_rpn_cls": 0.04853, "loss_rpn_bbox": 0.02643, "loss_cls": 0.26205, "acc": 91.79736, "loss_bbox": 0.2059, "loss": 0.54291, "time": 0.68069}
{"mode": "val", "epoch": 1, "iter": 3750, "lr": 0.03, "bbox_mAP": 0.137, "bbox_mAP_50": 0.287, "bbox_mAP_75": 0.112, "bbox_mAP_s": -1.0, "bbox_mAP_m": 0.042, "bbox_mAP_l": 0.146, "bbox_mAP_copypaste": "0.137 0.287 0.112 -1.000 0.042 0.146"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.03, "memory": 3719, "data_time": 0.39939, "loss_rpn_cls": 0.0453, "loss_rpn_bbox": 0.02406, "loss_cls": 0.25689, "acc": 91.99658, "loss_bbox": 0.20067, "loss": 0.52691, "time": 0.72117}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.03, "memory": 3719, "data_time": 0.34705, "loss_rpn_cls": 0.04593, "loss_rpn_bbox": 0.02746, "loss_cls": 0.29703, "acc": 90.87354, "loss_bbox": 0.21925, "loss": 0.58968, "time": 0.66817}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.03, "memory": 3719, "data_time": 0.35207, "loss_rpn_cls": 0.04644, "loss_rpn_bbox": 0.0261, "loss_cls": 0.27391, "acc": 91.52832, "loss_bbox": 0.20724, "loss": 0.55369, "time": 0.66283}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.03, "memory": 3719, "data_time": 0.34799, "loss_rpn_cls": 0.05182, "loss_rpn_bbox": 0.0282, "loss_cls": 0.2696, "acc": 91.53662, "loss_bbox": 0.21009, "loss": 0.5597, "time": 0.66323}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.03, "memory": 3719, "data_time": 0.34777, "loss_rpn_cls": 0.04892, "loss_rpn_bbox": 0.02859, "loss_cls": 0.27904, "acc": 91.32324, "loss_bbox": 0.21769, "loss": 0.57424, "time": 0.66161}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.03, "memory": 3719, "data_time": 0.34982, "loss_rpn_cls": 0.04928, "loss_rpn_bbox": 0.02728, "loss_cls": 0.26852, "acc": 91.82568, "loss_bbox": 0.19807, "loss": 0.54315, "time": 0.66628}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.03, "memory": 3719, "data_time": 0.34952, "loss_rpn_cls": 0.05014, "loss_rpn_bbox": 0.02667, "loss_cls": 0.25082, "acc": 92.18848, "loss_bbox": 0.18895, "loss": 0.51658, "time": 0.66014}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.03, "memory": 3719, "data_time": 0.34371, "loss_rpn_cls": 0.0466, "loss_rpn_bbox": 0.02609, "loss_cls": 0.27034, "acc": 91.61572, "loss_bbox": 0.2133, "loss": 0.55633, "time": 0.6567}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.03, "memory": 3719, "data_time": 0.34397, "loss_rpn_cls": 0.04783, "loss_rpn_bbox": 0.02472, "loss_cls": 0.24212, "acc": 92.67871, "loss_bbox": 0.18284, "loss": 0.49751, "time": 0.65441}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.03, "memory": 3719, "data_time": 0.34802, "loss_rpn_cls": 0.04621, "loss_rpn_bbox": 0.02581, "loss_cls": 0.26378, "acc": 91.76465, "loss_bbox": 0.20094, "loss": 0.53674, "time": 0.65534}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.03, "memory": 3719, "data_time": 0.33868, "loss_rpn_cls": 0.04968, "loss_rpn_bbox": 0.02914, "loss_cls": 0.28084, "acc": 91.06738, "loss_bbox": 0.22045, "loss": 0.58012, "time": 0.65607}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.03, "memory": 3719, "data_time": 0.34566, "loss_rpn_cls": 0.04105, "loss_rpn_bbox": 0.0254, "loss_cls": 0.25937, "acc": 91.84912, "loss_bbox": 0.20368, "loss": 0.5295, "time": 0.66019}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.03, "memory": 3719, "data_time": 0.3423, "loss_rpn_cls": 0.04733, "loss_rpn_bbox": 0.02627, "loss_cls": 0.25171, "acc": 92.23096, "loss_bbox": 0.19279, "loss": 0.51811, "time": 0.65878}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.03, "memory": 3719, "data_time": 0.35047, "loss_rpn_cls": 0.04164, "loss_rpn_bbox": 0.02645, "loss_cls": 0.27513, "acc": 91.3418, "loss_bbox": 0.20591, "loss": 0.54913, "time": 0.65817}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.03, "memory": 3719, "data_time": 0.36145, "loss_rpn_cls": 0.04478, "loss_rpn_bbox": 0.0285, "loss_cls": 0.26751, "acc": 91.55859, "loss_bbox": 0.20774, "loss": 0.54853, "time": 0.65824}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.03, "memory": 3719, "data_time": 0.34234, "loss_rpn_cls": 0.04299, "loss_rpn_bbox": 0.02569, "loss_cls": 0.25664, "acc": 91.86865, "loss_bbox": 0.19942, "loss": 0.52473, "time": 0.66708}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.03, "memory": 3719, "data_time": 0.35646, "loss_rpn_cls": 0.04435, "loss_rpn_bbox": 0.02682, "loss_cls": 0.24899, "acc": 92.2749, "loss_bbox": 0.19173, "loss": 0.51189, "time": 0.67109}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.03, "memory": 3719, "data_time": 0.34545, "loss_rpn_cls": 0.04353, "loss_rpn_bbox": 0.0259, "loss_cls": 0.26644, "acc": 91.59619, "loss_bbox": 0.20414, "loss": 0.54002, "time": 0.66024}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.03, "memory": 3719, "data_time": 0.34678, "loss_rpn_cls": 0.04485, "loss_rpn_bbox": 0.02917, "loss_cls": 0.26509, "acc": 91.67578, "loss_bbox": 0.2033, "loss": 0.5424, "time": 0.65812}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.03, "memory": 3719, "data_time": 0.34321, "loss_rpn_cls": 0.04651, "loss_rpn_bbox": 0.02629, "loss_cls": 0.26532, "acc": 91.56592, "loss_bbox": 0.20492, "loss": 0.54305, "time": 0.65603}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.03, "memory": 3719, "data_time": 0.34409, "loss_rpn_cls": 0.0425, "loss_rpn_bbox": 0.02627, "loss_cls": 0.27589, "acc": 91.39355, "loss_bbox": 0.2125, "loss": 0.55716, "time": 0.65739}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.03, "memory": 3719, "data_time": 0.33511, "loss_rpn_cls": 0.04575, "loss_rpn_bbox": 0.02724, "loss_cls": 0.24987, "acc": 92.21631, "loss_bbox": 0.18926, "loss": 0.51212, "time": 0.65704}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.03, "memory": 3719, "data_time": 0.33543, "loss_rpn_cls": 0.04514, "loss_rpn_bbox": 0.02536, "loss_cls": 0.24174, "acc": 92.48633, "loss_bbox": 0.18178, "loss": 0.49401, "time": 0.6556}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.03, "memory": 3719, "data_time": 0.34116, "loss_rpn_cls": 0.0498, "loss_rpn_bbox": 0.02667, "loss_cls": 0.2598, "acc": 91.82178, "loss_bbox": 0.19431, "loss": 0.53059, "time": 0.65566}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.03, "memory": 3719, "data_time": 0.34648, "loss_rpn_cls": 0.04479, "loss_rpn_bbox": 0.02597, "loss_cls": 0.25339, "acc": 92.03809, "loss_bbox": 0.19968, "loss": 0.52383, "time": 0.6552}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.03, "memory": 3719, "data_time": 0.33731, "loss_rpn_cls": 0.04659, "loss_rpn_bbox": 0.02839, "loss_cls": 0.25834, "acc": 91.7583, "loss_bbox": 0.20783, "loss": 0.54115, "time": 0.66329}
