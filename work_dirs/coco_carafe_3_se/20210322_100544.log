2021-03-22 10:05:44,155 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.12 |Anaconda, Inc.| (default, Sep  8 2020, 23:10:56) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: GeForce RTX 2080 Ti
CUDA_HOME: None
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.5.0
OpenCV: 4.5.1
MMCV: 1.1.6
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.0
MMDetection: 2.5.0+
------------------------------------------------------------

2021-03-22 10:05:44,564 - mmdet - INFO - Distributed training: True
2021-03-22 10:05:44,806 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN_CARAFE_3_se',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5,
        start_level=0,
        end_level=-1,
        norm_cfg=None,
        act_cfg=None,
        order=('conv', 'norm', 'act'),
        upsample_cfg=dict(
            type='carafe',
            up_kernel=5,
            up_group=1,
            encoder_kernel=3,
            encoder_dilation=1,
            compressed_channels=64)),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=80,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = '../data/coco/'
annotations_root = '../data/coco/annotations/'
image_root = '../data/coco/'
img_scale = (1333, 800)
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=64),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=64),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=0,
    train=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_train2017.json',
        img_prefix='../data/coco/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=64),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/instances_val2017.json',
        img_prefix='../data/coco/val2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=64),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='../data/coco/annotations/image_info_test-dev2017.json',
        img_prefix='../data/coco/test2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=64),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 12
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/coco_carafe_3_se'
gpu_ids = range(0, 1)

2021-03-22 10:05:45,266 - mmdet - INFO - load model from: torchvision://resnet50
2021-03-22 10:05:49,130 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2021-03-22 10:06:05,707 - mmdet - INFO - Start running, host: zhaoyang@node01, work_dir: /home/zhaoyang/container/mmdetection/work_dirs/coco_carafe_3_se
2021-03-22 10:06:05,707 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2021-03-22 10:06:30,891 - mmdet - INFO - Epoch [1][50/14659]	lr: 1.978e-03, eta: 1 day, 0:34:15, time: 0.503, data_time: 0.194, memory: 4268, loss_rpn_cls: 0.4678, loss_rpn_bbox: 0.1184, loss_cls: 1.6724, acc: 87.0898, loss_bbox: 0.0685, loss: 2.3272
2021-03-22 10:06:49,888 - mmdet - INFO - Epoch [1][100/14659]	lr: 3.976e-03, eta: 21:33:26, time: 0.380, data_time: 0.086, memory: 4268, loss_rpn_cls: 0.2176, loss_rpn_bbox: 0.0843, loss_cls: 0.5201, acc: 94.5381, loss_bbox: 0.1860, loss: 1.0081
2021-03-22 10:07:09,149 - mmdet - INFO - Epoch [1][150/14659]	lr: 5.974e-03, eta: 20:38:14, time: 0.385, data_time: 0.088, memory: 4268, loss_rpn_cls: 0.1903, loss_rpn_bbox: 0.0956, loss_cls: 0.4529, acc: 93.7417, loss_bbox: 0.2123, loss: 0.9512
2021-03-22 10:07:32,688 - mmdet - INFO - Epoch [1][200/14659]	lr: 7.972e-03, eta: 21:12:56, time: 0.471, data_time: 0.156, memory: 4268, loss_rpn_cls: 0.1558, loss_rpn_bbox: 0.0909, loss_cls: 0.4382, acc: 93.6792, loss_bbox: 0.2220, loss: 0.9070
2021-03-22 10:07:55,452 - mmdet - INFO - Epoch [1][250/14659]	lr: 9.970e-03, eta: 21:24:37, time: 0.455, data_time: 0.147, memory: 4268, loss_rpn_cls: 0.1553, loss_rpn_bbox: 0.1017, loss_cls: 0.5003, acc: 92.6074, loss_bbox: 0.2582, loss: 1.0155
2021-03-22 10:08:18,941 - mmdet - INFO - Epoch [1][300/14659]	lr: 1.197e-02, eta: 21:39:26, time: 0.470, data_time: 0.160, memory: 4268, loss_rpn_cls: 0.1272, loss_rpn_bbox: 0.0879, loss_cls: 0.4921, acc: 92.2749, loss_bbox: 0.2790, loss: 0.9862
2021-03-22 10:08:42,412 - mmdet - INFO - Epoch [1][350/14659]	lr: 1.397e-02, eta: 21:49:39, time: 0.469, data_time: 0.155, memory: 4268, loss_rpn_cls: 0.1543, loss_rpn_bbox: 0.0977, loss_cls: 0.4898, acc: 92.3564, loss_bbox: 0.2688, loss: 1.0106
2021-03-22 10:09:05,675 - mmdet - INFO - Epoch [1][400/14659]	lr: 1.596e-02, eta: 21:55:48, time: 0.465, data_time: 0.144, memory: 4268, loss_rpn_cls: 0.1276, loss_rpn_bbox: 0.0878, loss_cls: 0.4900, acc: 91.9399, loss_bbox: 0.2878, loss: 0.9932
2021-03-22 10:09:29,646 - mmdet - INFO - Epoch [1][450/14659]	lr: 1.796e-02, eta: 22:04:53, time: 0.479, data_time: 0.158, memory: 4268, loss_rpn_cls: 0.1348, loss_rpn_bbox: 0.0939, loss_cls: 0.5005, acc: 92.2349, loss_bbox: 0.2707, loss: 0.9999
2021-03-22 10:09:53,275 - mmdet - INFO - Epoch [1][500/14659]	lr: 1.996e-02, eta: 22:10:16, time: 0.473, data_time: 0.155, memory: 4268, loss_rpn_cls: 0.1401, loss_rpn_bbox: 0.0964, loss_cls: 0.5154, acc: 91.3213, loss_bbox: 0.2989, loss: 1.0507
2021-03-22 10:10:16,832 - mmdet - INFO - Epoch [1][550/14659]	lr: 2.000e-02, eta: 22:14:07, time: 0.471, data_time: 0.154, memory: 4268, loss_rpn_cls: 0.1344, loss_rpn_bbox: 0.1005, loss_cls: 0.5256, acc: 90.9863, loss_bbox: 0.3197, loss: 1.0803
2021-03-22 10:10:40,723 - mmdet - INFO - Epoch [1][600/14659]	lr: 2.000e-02, eta: 22:19:02, time: 0.478, data_time: 0.160, memory: 4268, loss_rpn_cls: 0.1126, loss_rpn_bbox: 0.0863, loss_cls: 0.4819, acc: 91.8032, loss_bbox: 0.2908, loss: 0.9716
2021-03-22 10:11:04,645 - mmdet - INFO - Epoch [1][650/14659]	lr: 2.000e-02, eta: 22:23:08, time: 0.478, data_time: 0.160, memory: 4268, loss_rpn_cls: 0.1115, loss_rpn_bbox: 0.0944, loss_cls: 0.4822, acc: 91.7998, loss_bbox: 0.2851, loss: 0.9731
2021-03-22 10:11:27,955 - mmdet - INFO - Epoch [1][700/14659]	lr: 2.000e-02, eta: 22:24:05, time: 0.466, data_time: 0.154, memory: 4268, loss_rpn_cls: 0.1087, loss_rpn_bbox: 0.0839, loss_cls: 0.4942, acc: 91.1323, loss_bbox: 0.3181, loss: 1.0049
2021-03-22 10:11:51,972 - mmdet - INFO - Epoch [1][750/14659]	lr: 2.000e-02, eta: 22:27:30, time: 0.480, data_time: 0.164, memory: 4268, loss_rpn_cls: 0.1113, loss_rpn_bbox: 0.0880, loss_cls: 0.4993, acc: 91.3188, loss_bbox: 0.3122, loss: 1.0109
2021-03-22 10:12:16,488 - mmdet - INFO - Epoch [1][800/14659]	lr: 2.000e-02, eta: 22:32:27, time: 0.491, data_time: 0.172, memory: 4268, loss_rpn_cls: 0.0888, loss_rpn_bbox: 0.0817, loss_cls: 0.5039, acc: 90.4009, loss_bbox: 0.3418, loss: 1.0163
2021-03-22 10:12:40,745 - mmdet - INFO - Epoch [1][850/14659]	lr: 2.000e-02, eta: 22:35:47, time: 0.485, data_time: 0.170, memory: 4268, loss_rpn_cls: 0.0916, loss_rpn_bbox: 0.0837, loss_cls: 0.4924, acc: 90.3398, loss_bbox: 0.3470, loss: 1.0147
2021-03-22 10:13:05,108 - mmdet - INFO - Epoch [1][900/14659]	lr: 2.000e-02, eta: 22:39:02, time: 0.487, data_time: 0.172, memory: 4268, loss_rpn_cls: 0.0936, loss_rpn_bbox: 0.0833, loss_cls: 0.5095, acc: 89.9805, loss_bbox: 0.3533, loss: 1.0396
2021-03-22 10:13:28,573 - mmdet - INFO - Epoch [1][950/14659]	lr: 2.000e-02, eta: 22:39:13, time: 0.470, data_time: 0.157, memory: 4268, loss_rpn_cls: 0.0914, loss_rpn_bbox: 0.0840, loss_cls: 0.4998, acc: 90.1016, loss_bbox: 0.3427, loss: 1.0180
2021-03-22 10:13:51,859 - mmdet - INFO - Exp name: coco_carafe_3_se.py
2021-03-22 10:13:51,860 - mmdet - INFO - Epoch [1][1000/14659]	lr: 2.000e-02, eta: 22:38:43, time: 0.465, data_time: 0.148, memory: 4268, loss_rpn_cls: 0.0917, loss_rpn_bbox: 0.0815, loss_cls: 0.4963, acc: 90.4917, loss_bbox: 0.3341, loss: 1.0035
