{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.4.0\nMMCV: 1.3.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.12.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='../mmclassification/work_dirs/mixup/epoch_100_pretrained.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=10,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nannotations_root = '../data/TCT_30000/'\nimage_root = '../data/TCT_30000/'\nclasses = ('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n           'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n           'dysbacteriosis_herpes_act', 'ec')\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/train30000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/val10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('normal', 'ascus', 'asch', 'lsil', 'hsil_scc_omn',\n                 'agc_adenocarcinoma_em', 'vaginalis', 'monilia',\n                 'dysbacteriosis_herpes_act', 'ec'),\n        ann_file='../data/TCT_30000/test10000-cat10.json',\n        img_prefix='../data/TCT_30000/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(\n    type='SGD', lr=0.0033333333333333335, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/tct_mixup_e100_lr3'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "tct_mixup_e100_lr3.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00033, "memory": 3719, "data_time": 0.4825, "loss_rpn_cls": 0.6692, "loss_rpn_bbox": 0.04617, "loss_cls": 0.60213, "acc": 85.7998, "loss_bbox": 0.03483, "loss": 1.35233, "time": 0.96145}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00066, "memory": 3720, "data_time": 0.47803, "loss_rpn_cls": 0.34914, "loss_rpn_bbox": 0.04812, "loss_cls": 0.17473, "acc": 98.13477, "loss_bbox": 0.06093, "loss": 0.63291, "time": 0.91504}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.001, "memory": 3720, "data_time": 0.47411, "loss_rpn_cls": 0.19399, "loss_rpn_bbox": 0.04309, "loss_cls": 0.16248, "acc": 97.72021, "loss_bbox": 0.06631, "loss": 0.46587, "time": 0.92894}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00133, "memory": 3720, "data_time": 0.45536, "loss_rpn_cls": 0.17233, "loss_rpn_bbox": 0.04109, "loss_cls": 0.25919, "acc": 95.78467, "loss_bbox": 0.14343, "loss": 0.61604, "time": 0.87533}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00166, "memory": 3720, "data_time": 0.43875, "loss_rpn_cls": 0.14967, "loss_rpn_bbox": 0.04213, "loss_cls": 0.28737, "acc": 94.56934, "loss_bbox": 0.18945, "loss": 0.66862, "time": 0.88126}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00199, "memory": 3720, "data_time": 0.46606, "loss_rpn_cls": 0.14263, "loss_rpn_bbox": 0.04102, "loss_cls": 0.3042, "acc": 93.81201, "loss_bbox": 0.21468, "loss": 0.70253, "time": 0.93698}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00233, "memory": 3720, "data_time": 0.44918, "loss_rpn_cls": 0.12573, "loss_rpn_bbox": 0.03838, "loss_cls": 0.30702, "acc": 93.02783, "loss_bbox": 0.2403, "loss": 0.71143, "time": 0.95362}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00266, "memory": 3720, "data_time": 0.4772, "loss_rpn_cls": 0.11289, "loss_rpn_bbox": 0.03865, "loss_cls": 0.30447, "acc": 92.57178, "loss_bbox": 0.25213, "loss": 0.70814, "time": 0.88103}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00299, "memory": 3720, "data_time": 0.44667, "loss_rpn_cls": 0.10233, "loss_rpn_bbox": 0.03929, "loss_cls": 0.33364, "acc": 91.94531, "loss_bbox": 0.26361, "loss": 0.73887, "time": 0.91645}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00333, "memory": 3720, "data_time": 0.47858, "loss_rpn_cls": 0.10026, "loss_rpn_bbox": 0.04067, "loss_cls": 0.36104, "acc": 91.12744, "loss_bbox": 0.28133, "loss": 0.7833, "time": 0.90259}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00333, "memory": 3720, "data_time": 0.46729, "loss_rpn_cls": 0.08154, "loss_rpn_bbox": 0.03542, "loss_cls": 0.33734, "acc": 91.22461, "loss_bbox": 0.2721, "loss": 0.7264, "time": 0.85905}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00333, "memory": 3720, "data_time": 0.46582, "loss_rpn_cls": 0.07705, "loss_rpn_bbox": 0.03556, "loss_cls": 0.33892, "acc": 91.23291, "loss_bbox": 0.26988, "loss": 0.7214, "time": 0.8833}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00333, "memory": 3720, "data_time": 0.46963, "loss_rpn_cls": 0.07468, "loss_rpn_bbox": 0.03587, "loss_cls": 0.34905, "acc": 90.23535, "loss_bbox": 0.29287, "loss": 0.75247, "time": 0.865}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00333, "memory": 3720, "data_time": 0.4457, "loss_rpn_cls": 0.08026, "loss_rpn_bbox": 0.03475, "loss_cls": 0.3362, "acc": 90.83496, "loss_bbox": 0.2652, "loss": 0.71641, "time": 0.9806}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00333, "memory": 3720, "data_time": 0.44993, "loss_rpn_cls": 0.07623, "loss_rpn_bbox": 0.03502, "loss_cls": 0.35255, "acc": 90.49854, "loss_bbox": 0.27504, "loss": 0.73885, "time": 0.86584}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00333, "memory": 3720, "data_time": 0.44163, "loss_rpn_cls": 0.06371, "loss_rpn_bbox": 0.03304, "loss_cls": 0.35458, "acc": 89.63281, "loss_bbox": 0.29944, "loss": 0.75077, "time": 0.88768}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00333, "memory": 3720, "data_time": 0.46901, "loss_rpn_cls": 0.06439, "loss_rpn_bbox": 0.03097, "loss_cls": 0.37291, "acc": 89.5459, "loss_bbox": 0.29733, "loss": 0.76561, "time": 0.88755}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00333, "memory": 3720, "data_time": 0.47615, "loss_rpn_cls": 0.07153, "loss_rpn_bbox": 0.03433, "loss_cls": 0.35721, "acc": 89.73047, "loss_bbox": 0.28772, "loss": 0.7508, "time": 0.91069}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00333, "memory": 3720, "data_time": 0.4549, "loss_rpn_cls": 0.06555, "loss_rpn_bbox": 0.03299, "loss_cls": 0.35292, "acc": 89.78955, "loss_bbox": 0.28963, "loss": 0.74109, "time": 0.8556}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00333, "memory": 3720, "data_time": 0.46081, "loss_rpn_cls": 0.06353, "loss_rpn_bbox": 0.03422, "loss_cls": 0.34921, "acc": 89.60547, "loss_bbox": 0.29036, "loss": 0.73733, "time": 0.87888}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00333, "memory": 3720, "data_time": 0.46673, "loss_rpn_cls": 0.06198, "loss_rpn_bbox": 0.03322, "loss_cls": 0.34518, "acc": 89.50244, "loss_bbox": 0.29337, "loss": 0.73374, "time": 0.86956}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00333, "memory": 3720, "data_time": 0.48027, "loss_rpn_cls": 0.06253, "loss_rpn_bbox": 0.03169, "loss_cls": 0.3281, "acc": 90.2417, "loss_bbox": 0.27195, "loss": 0.69426, "time": 0.8843}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00333, "memory": 3720, "data_time": 0.4595, "loss_rpn_cls": 0.06604, "loss_rpn_bbox": 0.03362, "loss_cls": 0.34786, "acc": 90.01904, "loss_bbox": 0.27367, "loss": 0.7212, "time": 0.86826}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00333, "memory": 3720, "data_time": 0.47199, "loss_rpn_cls": 0.05935, "loss_rpn_bbox": 0.02984, "loss_cls": 0.34164, "acc": 89.58545, "loss_bbox": 0.27846, "loss": 0.70929, "time": 0.87552}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00333, "memory": 3720, "data_time": 0.46037, "loss_rpn_cls": 0.05916, "loss_rpn_bbox": 0.03114, "loss_cls": 0.34007, "acc": 89.69043, "loss_bbox": 0.27865, "loss": 0.70903, "time": 0.86387}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00333, "memory": 3720, "data_time": 0.47, "loss_rpn_cls": 0.05936, "loss_rpn_bbox": 0.03128, "loss_cls": 0.33625, "acc": 89.82324, "loss_bbox": 0.27426, "loss": 0.70115, "time": 0.87498}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00333, "memory": 3720, "data_time": 0.48387, "loss_rpn_cls": 0.05326, "loss_rpn_bbox": 0.02802, "loss_cls": 0.34396, "acc": 89.5542, "loss_bbox": 0.27416, "loss": 0.69941, "time": 0.85761}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00333, "memory": 3720, "data_time": 0.44781, "loss_rpn_cls": 0.05868, "loss_rpn_bbox": 0.03134, "loss_cls": 0.323, "acc": 90.06738, "loss_bbox": 0.26468, "loss": 0.67771, "time": 0.85745}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00333, "memory": 3720, "data_time": 0.44846, "loss_rpn_cls": 0.05836, "loss_rpn_bbox": 0.03072, "loss_cls": 0.31071, "acc": 90.43115, "loss_bbox": 0.25485, "loss": 0.65463, "time": 0.91756}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.00333, "memory": 3720, "data_time": 0.45506, "loss_rpn_cls": 0.05664, "loss_rpn_bbox": 0.03112, "loss_cls": 0.33089, "acc": 89.51611, "loss_bbox": 0.27295, "loss": 0.69161, "time": 0.85968}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.00333, "memory": 3720, "data_time": 0.45521, "loss_rpn_cls": 0.056, "loss_rpn_bbox": 0.02876, "loss_cls": 0.32276, "acc": 89.90771, "loss_bbox": 0.25932, "loss": 0.66683, "time": 0.88344}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.00333, "memory": 3720, "data_time": 0.47118, "loss_rpn_cls": 0.05566, "loss_rpn_bbox": 0.03176, "loss_cls": 0.33736, "acc": 89.49316, "loss_bbox": 0.27989, "loss": 0.70466, "time": 0.91906}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.00333, "memory": 3720, "data_time": 0.45986, "loss_rpn_cls": 0.05387, "loss_rpn_bbox": 0.02954, "loss_cls": 0.32049, "acc": 89.95996, "loss_bbox": 0.26358, "loss": 0.66749, "time": 0.92694}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.00333, "memory": 3720, "data_time": 0.45388, "loss_rpn_cls": 0.05307, "loss_rpn_bbox": 0.03051, "loss_cls": 0.33945, "acc": 89.36621, "loss_bbox": 0.28452, "loss": 0.70755, "time": 0.919}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.00333, "memory": 3720, "data_time": 0.47682, "loss_rpn_cls": 0.05765, "loss_rpn_bbox": 0.03074, "loss_cls": 0.3231, "acc": 89.91992, "loss_bbox": 0.26234, "loss": 0.67383, "time": 0.89739}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.00333, "memory": 3720, "data_time": 0.46096, "loss_rpn_cls": 0.05545, "loss_rpn_bbox": 0.03141, "loss_cls": 0.32882, "acc": 89.63965, "loss_bbox": 0.26694, "loss": 0.68263, "time": 0.87975}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.00333, "memory": 3720, "data_time": 0.45769, "loss_rpn_cls": 0.05444, "loss_rpn_bbox": 0.02912, "loss_cls": 0.3215, "acc": 89.7832, "loss_bbox": 0.26541, "loss": 0.67047, "time": 0.93563}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.00333, "memory": 3720, "data_time": 0.45401, "loss_rpn_cls": 0.0516, "loss_rpn_bbox": 0.0256, "loss_cls": 0.30613, "acc": 90.49365, "loss_bbox": 0.25163, "loss": 0.63495, "time": 0.87461}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.00333, "memory": 3720, "data_time": 0.44637, "loss_rpn_cls": 0.0519, "loss_rpn_bbox": 0.02819, "loss_cls": 0.32486, "acc": 89.91797, "loss_bbox": 0.25915, "loss": 0.66409, "time": 0.8731}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.00333, "memory": 3720, "data_time": 0.41393, "loss_rpn_cls": 0.05257, "loss_rpn_bbox": 0.02976, "loss_cls": 0.32034, "acc": 89.8999, "loss_bbox": 0.26191, "loss": 0.66458, "time": 0.86804}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.00333, "memory": 3720, "data_time": 0.44317, "loss_rpn_cls": 0.05009, "loss_rpn_bbox": 0.02888, "loss_cls": 0.31472, "acc": 89.99072, "loss_bbox": 0.25503, "loss": 0.64872, "time": 0.86118}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.00333, "memory": 3720, "data_time": 0.42132, "loss_rpn_cls": 0.0537, "loss_rpn_bbox": 0.0289, "loss_cls": 0.29883, "acc": 90.40137, "loss_bbox": 0.24841, "loss": 0.62984, "time": 0.85754}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.00333, "memory": 3720, "data_time": 0.41758, "loss_rpn_cls": 0.05048, "loss_rpn_bbox": 0.0295, "loss_cls": 0.30893, "acc": 90.02197, "loss_bbox": 0.26669, "loss": 0.6556, "time": 0.86966}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.00333, "memory": 3720, "data_time": 0.45651, "loss_rpn_cls": 0.04919, "loss_rpn_bbox": 0.0288, "loss_cls": 0.31137, "acc": 89.95166, "loss_bbox": 0.26774, "loss": 0.65711, "time": 0.87299}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.00333, "memory": 3720, "data_time": 0.4479, "loss_rpn_cls": 0.05026, "loss_rpn_bbox": 0.02941, "loss_cls": 0.30023, "acc": 90.0293, "loss_bbox": 0.26746, "loss": 0.64737, "time": 0.8623}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.00333, "memory": 3720, "data_time": 0.45149, "loss_rpn_cls": 0.04885, "loss_rpn_bbox": 0.028, "loss_cls": 0.30784, "acc": 90.2334, "loss_bbox": 0.25112, "loss": 0.63581, "time": 0.88392}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.00333, "memory": 3720, "data_time": 0.44167, "loss_rpn_cls": 0.05202, "loss_rpn_bbox": 0.02853, "loss_cls": 0.31957, "acc": 89.81396, "loss_bbox": 0.26358, "loss": 0.6637, "time": 0.85913}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.00333, "memory": 3720, "data_time": 0.42936, "loss_rpn_cls": 0.04777, "loss_rpn_bbox": 0.02879, "loss_cls": 0.33027, "acc": 89.22119, "loss_bbox": 0.27663, "loss": 0.68347, "time": 0.85871}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.00333, "memory": 3720, "data_time": 0.46523, "loss_rpn_cls": 0.04687, "loss_rpn_bbox": 0.02586, "loss_cls": 0.32167, "acc": 89.70459, "loss_bbox": 0.26038, "loss": 0.65478, "time": 0.88213}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.00333, "memory": 3720, "data_time": 0.47577, "loss_rpn_cls": 0.05382, "loss_rpn_bbox": 0.0309, "loss_cls": 0.32358, "acc": 89.49463, "loss_bbox": 0.2729, "loss": 0.68121, "time": 0.88056}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.00333, "memory": 3720, "data_time": 0.45358, "loss_rpn_cls": 0.05113, "loss_rpn_bbox": 0.0305, "loss_cls": 0.32269, "acc": 89.55615, "loss_bbox": 0.27312, "loss": 0.67744, "time": 0.86427}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.00333, "memory": 3720, "data_time": 0.47597, "loss_rpn_cls": 0.04455, "loss_rpn_bbox": 0.02637, "loss_cls": 0.31594, "acc": 90.12158, "loss_bbox": 0.24998, "loss": 0.63685, "time": 0.88333}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.00333, "memory": 3720, "data_time": 0.42613, "loss_rpn_cls": 0.04823, "loss_rpn_bbox": 0.02733, "loss_cls": 0.30055, "acc": 90.34131, "loss_bbox": 0.2451, "loss": 0.62122, "time": 0.87819}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.00333, "memory": 3720, "data_time": 0.43007, "loss_rpn_cls": 0.04575, "loss_rpn_bbox": 0.02727, "loss_cls": 0.29639, "acc": 90.38477, "loss_bbox": 0.25403, "loss": 0.62344, "time": 0.87183}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.00333, "memory": 3720, "data_time": 0.46173, "loss_rpn_cls": 0.0471, "loss_rpn_bbox": 0.02767, "loss_cls": 0.29188, "acc": 90.44434, "loss_bbox": 0.24538, "loss": 0.61203, "time": 0.8583}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.00333, "memory": 3720, "data_time": 0.44162, "loss_rpn_cls": 0.04578, "loss_rpn_bbox": 0.02789, "loss_cls": 0.28986, "acc": 90.70752, "loss_bbox": 0.23305, "loss": 0.59658, "time": 0.86682}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.00333, "memory": 3720, "data_time": 0.44043, "loss_rpn_cls": 0.04547, "loss_rpn_bbox": 0.02759, "loss_cls": 0.3031, "acc": 90.04736, "loss_bbox": 0.25537, "loss": 0.63153, "time": 0.88321}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.00333, "memory": 3720, "data_time": 0.45881, "loss_rpn_cls": 0.04875, "loss_rpn_bbox": 0.03026, "loss_cls": 0.31144, "acc": 89.76074, "loss_bbox": 0.26463, "loss": 0.65508, "time": 0.86793}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.00333, "memory": 3720, "data_time": 0.46294, "loss_rpn_cls": 0.05062, "loss_rpn_bbox": 0.02638, "loss_cls": 0.29042, "acc": 90.69775, "loss_bbox": 0.23711, "loss": 0.60453, "time": 0.86582}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.00333, "memory": 3720, "data_time": 0.42868, "loss_rpn_cls": 0.049, "loss_rpn_bbox": 0.02704, "loss_cls": 0.30643, "acc": 89.90771, "loss_bbox": 0.25741, "loss": 0.63987, "time": 0.85754}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.00333, "memory": 3720, "data_time": 0.44475, "loss_rpn_cls": 0.04378, "loss_rpn_bbox": 0.02741, "loss_cls": 0.29679, "acc": 90.20459, "loss_bbox": 0.24807, "loss": 0.61605, "time": 0.86215}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.00333, "memory": 3720, "data_time": 0.44948, "loss_rpn_cls": 0.0441, "loss_rpn_bbox": 0.02705, "loss_cls": 0.2964, "acc": 90.1792, "loss_bbox": 0.24867, "loss": 0.61622, "time": 0.8522}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.00333, "memory": 3720, "data_time": 0.41513, "loss_rpn_cls": 0.04351, "loss_rpn_bbox": 0.02575, "loss_cls": 0.29571, "acc": 90.49561, "loss_bbox": 0.25211, "loss": 0.61708, "time": 0.89246}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.00333, "memory": 3720, "data_time": 0.42646, "loss_rpn_cls": 0.04711, "loss_rpn_bbox": 0.02826, "loss_cls": 0.3198, "acc": 89.61035, "loss_bbox": 0.26196, "loss": 0.65713, "time": 0.86365}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.00333, "memory": 3720, "data_time": 0.42349, "loss_rpn_cls": 0.04182, "loss_rpn_bbox": 0.02514, "loss_cls": 0.2996, "acc": 90.22656, "loss_bbox": 0.25117, "loss": 0.61773, "time": 0.8508}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.00333, "memory": 3720, "data_time": 0.42606, "loss_rpn_cls": 0.04727, "loss_rpn_bbox": 0.02794, "loss_cls": 0.29387, "acc": 90.38037, "loss_bbox": 0.2511, "loss": 0.62019, "time": 0.88017}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.00333, "memory": 3720, "data_time": 0.42754, "loss_rpn_cls": 0.03979, "loss_rpn_bbox": 0.02594, "loss_cls": 0.28521, "acc": 90.53418, "loss_bbox": 0.24287, "loss": 0.59382, "time": 0.85864}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.00333, "memory": 3720, "data_time": 0.4229, "loss_rpn_cls": 0.04529, "loss_rpn_bbox": 0.02581, "loss_cls": 0.28437, "acc": 90.64014, "loss_bbox": 0.23463, "loss": 0.5901, "time": 0.87604}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.00333, "memory": 3720, "data_time": 0.43427, "loss_rpn_cls": 0.04539, "loss_rpn_bbox": 0.02783, "loss_cls": 0.30958, "acc": 90.18896, "loss_bbox": 0.24874, "loss": 0.63154, "time": 0.86492}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.00333, "memory": 3720, "data_time": 0.42028, "loss_rpn_cls": 0.05031, "loss_rpn_bbox": 0.02806, "loss_cls": 0.28744, "acc": 90.67529, "loss_bbox": 0.23883, "loss": 0.60465, "time": 0.85847}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.00333, "memory": 3720, "data_time": 0.43389, "loss_rpn_cls": 0.04431, "loss_rpn_bbox": 0.02529, "loss_cls": 0.2893, "acc": 90.45508, "loss_bbox": 0.24191, "loss": 0.60082, "time": 0.84989}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.00333, "memory": 3720, "data_time": 0.44042, "loss_rpn_cls": 0.04697, "loss_rpn_bbox": 0.02563, "loss_cls": 0.28926, "acc": 90.51953, "loss_bbox": 0.2402, "loss": 0.60206, "time": 0.86929}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.00333, "memory": 3720, "data_time": 0.44041, "loss_rpn_cls": 0.04029, "loss_rpn_bbox": 0.02594, "loss_cls": 0.29706, "acc": 90.25049, "loss_bbox": 0.25101, "loss": 0.6143, "time": 0.85695}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.00333, "memory": 3720, "data_time": 0.43398, "loss_rpn_cls": 0.05028, "loss_rpn_bbox": 0.02804, "loss_cls": 0.30359, "acc": 90.01367, "loss_bbox": 0.25863, "loss": 0.64054, "time": 0.86044}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.00333, "memory": 3720, "data_time": 0.43158, "loss_rpn_cls": 0.04475, "loss_rpn_bbox": 0.02635, "loss_cls": 0.2879, "acc": 90.35449, "loss_bbox": 0.24862, "loss": 0.60763, "time": 0.88456}
{"mode": "val", "epoch": 1, "iter": 3750, "lr": 0.00333, "bbox_mAP": 0.167, "bbox_mAP_50": 0.352, "bbox_mAP_75": 0.135, "bbox_mAP_s": -1.0, "bbox_mAP_m": 0.052, "bbox_mAP_l": 0.177, "bbox_mAP_copypaste": "0.167 0.352 0.135 -1.000 0.052 0.177"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00333, "memory": 3720, "data_time": 0.39195, "loss_rpn_cls": 0.04146, "loss_rpn_bbox": 0.02415, "loss_cls": 0.27634, "acc": 90.8623, "loss_bbox": 0.2333, "loss": 0.57525, "time": 1.52948}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00333, "memory": 3720, "data_time": 0.33034, "loss_rpn_cls": 0.04119, "loss_rpn_bbox": 0.02687, "loss_cls": 0.30893, "acc": 89.70947, "loss_bbox": 0.25693, "loss": 0.63392, "time": 1.49389}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00333, "memory": 3720, "data_time": 0.40987, "loss_rpn_cls": 0.04405, "loss_rpn_bbox": 0.02518, "loss_cls": 0.29827, "acc": 90.10352, "loss_bbox": 0.2452, "loss": 0.61269, "time": 0.8755}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00333, "memory": 3720, "data_time": 0.38009, "loss_rpn_cls": 0.04893, "loss_rpn_bbox": 0.02763, "loss_cls": 0.295, "acc": 90.03662, "loss_bbox": 0.25736, "loss": 0.62892, "time": 0.87539}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00333, "memory": 3720, "data_time": 0.40883, "loss_rpn_cls": 0.04582, "loss_rpn_bbox": 0.02814, "loss_cls": 0.30188, "acc": 89.76855, "loss_bbox": 0.25824, "loss": 0.63408, "time": 0.88438}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00333, "memory": 3720, "data_time": 0.4011, "loss_rpn_cls": 0.04359, "loss_rpn_bbox": 0.02686, "loss_cls": 0.28343, "acc": 90.59619, "loss_bbox": 0.23663, "loss": 0.59053, "time": 0.85735}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00333, "memory": 3720, "data_time": 0.39958, "loss_rpn_cls": 0.04448, "loss_rpn_bbox": 0.02593, "loss_cls": 0.27963, "acc": 90.66895, "loss_bbox": 0.23487, "loss": 0.58491, "time": 0.86972}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.00333, "memory": 3720, "data_time": 0.41548, "loss_rpn_cls": 0.04359, "loss_rpn_bbox": 0.02603, "loss_cls": 0.28762, "acc": 90.39307, "loss_bbox": 0.25142, "loss": 0.60867, "time": 0.88145}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.00333, "memory": 3720, "data_time": 0.41431, "loss_rpn_cls": 0.04228, "loss_rpn_bbox": 0.02481, "loss_cls": 0.2727, "acc": 91.12988, "loss_bbox": 0.22663, "loss": 0.56642, "time": 0.88265}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00333, "memory": 3720, "data_time": 0.44785, "loss_rpn_cls": 0.04456, "loss_rpn_bbox": 0.02509, "loss_cls": 0.28388, "acc": 90.43896, "loss_bbox": 0.2381, "loss": 0.59163, "time": 0.89485}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.00333, "memory": 3720, "data_time": 0.43182, "loss_rpn_cls": 0.04418, "loss_rpn_bbox": 0.0283, "loss_cls": 0.30208, "acc": 89.69678, "loss_bbox": 0.26197, "loss": 0.63653, "time": 0.89795}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.00333, "memory": 3720, "data_time": 0.445, "loss_rpn_cls": 0.04106, "loss_rpn_bbox": 0.02535, "loss_cls": 0.28096, "acc": 90.51855, "loss_bbox": 0.23922, "loss": 0.58659, "time": 0.90144}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.00333, "memory": 3720, "data_time": 0.4457, "loss_rpn_cls": 0.04168, "loss_rpn_bbox": 0.02577, "loss_cls": 0.27267, "acc": 90.95654, "loss_bbox": 0.23643, "loss": 0.57654, "time": 0.92241}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.00333, "memory": 3720, "data_time": 0.4161, "loss_rpn_cls": 0.03784, "loss_rpn_bbox": 0.02522, "loss_cls": 0.29077, "acc": 90.23828, "loss_bbox": 0.2445, "loss": 0.59833, "time": 0.89195}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.00333, "memory": 3720, "data_time": 0.41953, "loss_rpn_cls": 0.04012, "loss_rpn_bbox": 0.02731, "loss_cls": 0.28375, "acc": 90.41846, "loss_bbox": 0.24481, "loss": 0.59599, "time": 0.90438}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.00333, "memory": 3720, "data_time": 0.40117, "loss_rpn_cls": 0.04068, "loss_rpn_bbox": 0.02447, "loss_cls": 0.27486, "acc": 90.75977, "loss_bbox": 0.23256, "loss": 0.57257, "time": 0.85131}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.00333, "memory": 3720, "data_time": 0.39442, "loss_rpn_cls": 0.04087, "loss_rpn_bbox": 0.02633, "loss_cls": 0.26432, "acc": 91.03906, "loss_bbox": 0.22433, "loss": 0.55585, "time": 0.88085}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.00333, "memory": 3720, "data_time": 0.40653, "loss_rpn_cls": 0.04029, "loss_rpn_bbox": 0.02485, "loss_cls": 0.29244, "acc": 90.15918, "loss_bbox": 0.24447, "loss": 0.60205, "time": 0.87447}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.00333, "memory": 3720, "data_time": 0.39565, "loss_rpn_cls": 0.0441, "loss_rpn_bbox": 0.02787, "loss_cls": 0.28445, "acc": 90.38818, "loss_bbox": 0.23541, "loss": 0.59183, "time": 0.86333}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.00333, "memory": 3720, "data_time": 0.4, "loss_rpn_cls": 0.03867, "loss_rpn_bbox": 0.02571, "loss_cls": 0.28805, "acc": 90.23291, "loss_bbox": 0.24513, "loss": 0.59756, "time": 0.86384}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.00333, "memory": 3720, "data_time": 0.4427, "loss_rpn_cls": 0.03922, "loss_rpn_bbox": 0.02513, "loss_cls": 0.29436, "acc": 90.04688, "loss_bbox": 0.24782, "loss": 0.60653, "time": 0.87527}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.00333, "memory": 3720, "data_time": 0.45538, "loss_rpn_cls": 0.04307, "loss_rpn_bbox": 0.02605, "loss_cls": 0.26729, "acc": 90.94922, "loss_bbox": 0.2285, "loss": 0.56491, "time": 0.90589}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.00333, "memory": 3720, "data_time": 0.45954, "loss_rpn_cls": 0.04022, "loss_rpn_bbox": 0.02428, "loss_cls": 0.27966, "acc": 90.58154, "loss_bbox": 0.23059, "loss": 0.57476, "time": 0.88286}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.00333, "memory": 3720, "data_time": 0.43217, "loss_rpn_cls": 0.04181, "loss_rpn_bbox": 0.02478, "loss_cls": 0.27125, "acc": 90.91895, "loss_bbox": 0.22829, "loss": 0.56614, "time": 0.90017}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.00333, "memory": 3720, "data_time": 0.42856, "loss_rpn_cls": 0.03989, "loss_rpn_bbox": 0.02433, "loss_cls": 0.26681, "acc": 91.1167, "loss_bbox": 0.23255, "loss": 0.56358, "time": 0.86975}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.00333, "memory": 3720, "data_time": 0.41107, "loss_rpn_cls": 0.03936, "loss_rpn_bbox": 0.02622, "loss_cls": 0.27733, "acc": 90.73975, "loss_bbox": 0.24193, "loss": 0.58484, "time": 0.86003}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.00333, "memory": 3720, "data_time": 0.4231, "loss_rpn_cls": 0.04084, "loss_rpn_bbox": 0.02672, "loss_cls": 0.28993, "acc": 90.09277, "loss_bbox": 0.24769, "loss": 0.60517, "time": 0.88304}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.00333, "memory": 3720, "data_time": 0.452, "loss_rpn_cls": 0.04439, "loss_rpn_bbox": 0.02838, "loss_cls": 0.28729, "acc": 90.0376, "loss_bbox": 0.24815, "loss": 0.60821, "time": 0.88399}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.00333, "memory": 3720, "data_time": 0.43914, "loss_rpn_cls": 0.04016, "loss_rpn_bbox": 0.02597, "loss_cls": 0.2885, "acc": 90.14697, "loss_bbox": 0.24132, "loss": 0.59595, "time": 0.90456}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00333, "memory": 3720, "data_time": 0.43705, "loss_rpn_cls": 0.03944, "loss_rpn_bbox": 0.02528, "loss_cls": 0.27257, "acc": 90.59229, "loss_bbox": 0.23541, "loss": 0.57271, "time": 0.89157}
