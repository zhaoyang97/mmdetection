{"env_info": "sys.platform: linux\nPython: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.0, V10.0.130\nGCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\nPyTorch: 1.4.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CUDA Runtime 10.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.1\n  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.5.0\nOpenCV: 4.4.0\nMMCV: 1.1.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.0\nMMDetection: 2.5.0+", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='icode/moco_v2_800ep_pretrain_rename.pth',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=21,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))\ntrain_cfg = dict(\n    rpn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.7,\n            neg_iou_thr=0.3,\n            min_pos_iou=0.3,\n            match_low_quality=True,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=256,\n            pos_fraction=0.5,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=False),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    rpn_proposal=dict(\n        nms_across_levels=False,\n        nms_pre=2000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0.5,\n            match_low_quality=False,\n            ignore_iof_thr=-1),\n        sampler=dict(\n            type='RandomSampler',\n            num=512,\n            pos_fraction=0.25,\n            neg_pos_ub=-1,\n            add_gt_as_proposals=True),\n        pos_weight=-1,\n        debug=False))\ntest_cfg = dict(\n    rpn=dict(\n        nms_across_levels=False,\n        nms_pre=1000,\n        nms_post=1000,\n        max_num=1000,\n        nms_thr=0.7,\n        min_bbox_size=0),\n    rcnn=dict(\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'VOCDataset'\ndata_root = '/root/userfolder/data/voc0712/VOCdevkit/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=0,\n    train=dict(\n        type='RepeatDataset',\n        times=3,\n        dataset=dict(\n            type='VOCDataset',\n            ann_file=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/trainval.txt',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/ImageSets/Main/trainval.txt'\n            ],\n            img_prefix=[\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n                '/root/userfolder/data/voc0712/VOCdevkit/VOC2012/'\n            ],\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(type='Resize', img_scale=(1000, 600), keep_ratio=True),\n                dict(type='RandomFlip', flip_ratio=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=32),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n            ]),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='VOCDataset',\n        ann_file=\n        '/root/userfolder/data/voc0712/VOCdevkit/VOC2007/ImageSets/Main/test.txt',\n        img_prefix='/root/userfolder/data/voc0712/VOCdevkit/VOC2007/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='mAP')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[16, 22])\ntotal_epochs = 24\nwork_dir = './work_dirs/faster_rcnn_r50_caffe_fpn_2x_coco_voc'\ngpu_ids = range(0, 1)\n", "seed": null, "exp_name": "faster_rcnn_r50_caffe_fpn_2x_coco_voc.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 2471, "data_time": 0.13442, "loss_rpn_cls": 0.55281, "loss_rpn_bbox": 0.03453, "loss_cls": 1.91434, "acc": 83.85156, "loss_bbox": 0.02527, "loss": 2.52694, "time": 0.48615}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 2471, "data_time": 0.08478, "loss_rpn_cls": 0.0963, "loss_rpn_bbox": 0.02662, "loss_cls": 0.42652, "acc": 96.07568, "loss_bbox": 0.15049, "loss": 0.69994, "time": 0.29867}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 2471, "data_time": 0.08894, "loss_rpn_cls": 0.08049, "loss_rpn_bbox": 0.02112, "loss_cls": 0.34916, "acc": 96.20166, "loss_bbox": 0.14856, "loss": 0.59932, "time": 0.29575}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 2471, "data_time": 0.09062, "loss_rpn_cls": 0.07236, "loss_rpn_bbox": 0.02008, "loss_cls": 0.36405, "acc": 95.92725, "loss_bbox": 0.16303, "loss": 0.61952, "time": 0.32046}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 2471, "data_time": 0.09037, "loss_rpn_cls": 0.07911, "loss_rpn_bbox": 0.02411, "loss_cls": 0.29947, "acc": 95.94189, "loss_bbox": 0.15866, "loss": 0.56135, "time": 0.29517}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 2471, "data_time": 0.0932, "loss_rpn_cls": 0.0725, "loss_rpn_bbox": 0.01997, "loss_cls": 0.2978, "acc": 96.16357, "loss_bbox": 0.15097, "loss": 0.54125, "time": 0.29472}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 2471, "data_time": 0.0897, "loss_rpn_cls": 0.07155, "loss_rpn_bbox": 0.02321, "loss_cls": 0.31357, "acc": 95.63037, "loss_bbox": 0.17237, "loss": 0.5807, "time": 0.29678}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 2471, "data_time": 0.09643, "loss_rpn_cls": 0.07071, "loss_rpn_bbox": 0.02126, "loss_cls": 0.29089, "acc": 95.87793, "loss_bbox": 0.16062, "loss": 0.54348, "time": 0.29687}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 2471, "data_time": 0.09183, "loss_rpn_cls": 0.07199, "loss_rpn_bbox": 0.02203, "loss_cls": 0.29087, "acc": 95.82715, "loss_bbox": 0.16389, "loss": 0.54877, "time": 0.29718}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00998, "memory": 2471, "data_time": 0.09119, "loss_rpn_cls": 0.07276, "loss_rpn_bbox": 0.02511, "loss_cls": 0.29485, "acc": 95.33398, "loss_bbox": 0.18534, "loss": 0.57807, "time": 0.29578}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 2471, "data_time": 0.09732, "loss_rpn_cls": 0.06262, "loss_rpn_bbox": 0.01903, "loss_cls": 0.27206, "acc": 95.88379, "loss_bbox": 0.16284, "loss": 0.51655, "time": 0.29978}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.01, "memory": 2471, "data_time": 0.10345, "loss_rpn_cls": 0.05949, "loss_rpn_bbox": 0.02102, "loss_cls": 0.27679, "acc": 95.57373, "loss_bbox": 0.1737, "loss": 0.53101, "time": 0.30942}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.01, "memory": 2471, "data_time": 0.08846, "loss_rpn_cls": 0.06345, "loss_rpn_bbox": 0.02285, "loss_cls": 0.26718, "acc": 95.80615, "loss_bbox": 0.16379, "loss": 0.51726, "time": 0.29426}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.01, "memory": 2471, "data_time": 0.09183, "loss_rpn_cls": 0.05763, "loss_rpn_bbox": 0.02282, "loss_cls": 0.27002, "acc": 95.63135, "loss_bbox": 0.17128, "loss": 0.52174, "time": 0.29557}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.01, "memory": 2471, "data_time": 0.10143, "loss_rpn_cls": 0.05369, "loss_rpn_bbox": 0.02203, "loss_cls": 0.2761, "acc": 95.41748, "loss_bbox": 0.17889, "loss": 0.53071, "time": 0.29504}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.01, "memory": 2471, "data_time": 0.09649, "loss_rpn_cls": 0.05283, "loss_rpn_bbox": 0.02295, "loss_cls": 0.25834, "acc": 95.35986, "loss_bbox": 0.17713, "loss": 0.51125, "time": 0.29472}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.01, "memory": 2471, "data_time": 0.09441, "loss_rpn_cls": 0.05499, "loss_rpn_bbox": 0.02183, "loss_cls": 0.27322, "acc": 95.45166, "loss_bbox": 0.17508, "loss": 0.52512, "time": 0.29426}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.01, "memory": 2471, "data_time": 0.09411, "loss_rpn_cls": 0.04718, "loss_rpn_bbox": 0.01949, "loss_cls": 0.26579, "acc": 95.52539, "loss_bbox": 0.17175, "loss": 0.50422, "time": 0.29329}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.01, "memory": 2471, "data_time": 0.09614, "loss_rpn_cls": 0.04177, "loss_rpn_bbox": 0.02059, "loss_cls": 0.26997, "acc": 95.14355, "loss_bbox": 0.18453, "loss": 0.51687, "time": 0.29206}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.01, "memory": 2471, "data_time": 0.1094, "loss_rpn_cls": 0.05324, "loss_rpn_bbox": 0.02284, "loss_cls": 0.28436, "acc": 95.25635, "loss_bbox": 0.17941, "loss": 0.53985, "time": 0.29458}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.01, "memory": 2471, "data_time": 0.10105, "loss_rpn_cls": 0.05077, "loss_rpn_bbox": 0.02336, "loss_cls": 0.28782, "acc": 94.65967, "loss_bbox": 0.19896, "loss": 0.5609, "time": 0.29726}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.01, "memory": 2471, "data_time": 0.09286, "loss_rpn_cls": 0.05366, "loss_rpn_bbox": 0.0231, "loss_cls": 0.2648, "acc": 95.30176, "loss_bbox": 0.17377, "loss": 0.51533, "time": 0.29484}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.01, "memory": 2471, "data_time": 0.09435, "loss_rpn_cls": 0.04675, "loss_rpn_bbox": 0.02224, "loss_cls": 0.28471, "acc": 94.87939, "loss_bbox": 0.19087, "loss": 0.54457, "time": 0.2975}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.01, "memory": 2471, "data_time": 0.09193, "loss_rpn_cls": 0.05015, "loss_rpn_bbox": 0.02389, "loss_cls": 0.27433, "acc": 94.896, "loss_bbox": 0.18841, "loss": 0.53678, "time": 0.2944}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.01, "memory": 2471, "data_time": 0.0916, "loss_rpn_cls": 0.04709, "loss_rpn_bbox": 0.02287, "loss_cls": 0.29987, "acc": 94.33057, "loss_bbox": 0.20821, "loss": 0.57804, "time": 0.30013}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.01, "memory": 2471, "data_time": 0.09793, "loss_rpn_cls": 0.03682, "loss_rpn_bbox": 0.02135, "loss_cls": 0.27018, "acc": 94.81592, "loss_bbox": 0.18811, "loss": 0.51645, "time": 0.29409}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.01, "memory": 2471, "data_time": 0.09906, "loss_rpn_cls": 0.04498, "loss_rpn_bbox": 0.02075, "loss_cls": 0.26292, "acc": 94.82812, "loss_bbox": 0.18873, "loss": 0.51738, "time": 0.29458}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.01, "memory": 2471, "data_time": 0.10436, "loss_rpn_cls": 0.0469, "loss_rpn_bbox": 0.02251, "loss_cls": 0.28623, "acc": 94.34863, "loss_bbox": 0.20394, "loss": 0.55958, "time": 0.29295}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.01, "memory": 2471, "data_time": 0.09715, "loss_rpn_cls": 0.04259, "loss_rpn_bbox": 0.02127, "loss_cls": 0.27838, "acc": 94.31152, "loss_bbox": 0.20385, "loss": 0.54609, "time": 0.29478}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.01, "memory": 2471, "data_time": 0.088, "loss_rpn_cls": 0.04321, "loss_rpn_bbox": 0.02057, "loss_cls": 0.27005, "acc": 94.66943, "loss_bbox": 0.18942, "loss": 0.52325, "time": 0.29865}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.01, "memory": 2471, "data_time": 0.09608, "loss_rpn_cls": 0.03647, "loss_rpn_bbox": 0.02071, "loss_cls": 0.26599, "acc": 94.46338, "loss_bbox": 0.19659, "loss": 0.51977, "time": 0.29642}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.01, "memory": 2471, "data_time": 0.10339, "loss_rpn_cls": 0.03585, "loss_rpn_bbox": 0.02023, "loss_cls": 0.23822, "acc": 94.93652, "loss_bbox": 0.17775, "loss": 0.47205, "time": 0.29707}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.01, "memory": 2471, "data_time": 0.09666, "loss_rpn_cls": 0.03482, "loss_rpn_bbox": 0.01972, "loss_cls": 0.25322, "acc": 94.70898, "loss_bbox": 0.18448, "loss": 0.49225, "time": 0.29536}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.01, "memory": 2471, "data_time": 0.09796, "loss_rpn_cls": 0.03425, "loss_rpn_bbox": 0.01866, "loss_cls": 0.25179, "acc": 94.65137, "loss_bbox": 0.18442, "loss": 0.48911, "time": 0.29731}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.01, "memory": 2471, "data_time": 0.09693, "loss_rpn_cls": 0.03585, "loss_rpn_bbox": 0.02013, "loss_cls": 0.25174, "acc": 94.50732, "loss_bbox": 0.18875, "loss": 0.49647, "time": 0.29405}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.01, "memory": 2471, "data_time": 0.09461, "loss_rpn_cls": 0.03544, "loss_rpn_bbox": 0.01856, "loss_cls": 0.24483, "acc": 94.63281, "loss_bbox": 0.1846, "loss": 0.48342, "time": 0.29391}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.01, "memory": 2471, "data_time": 0.09804, "loss_rpn_cls": 0.03733, "loss_rpn_bbox": 0.02213, "loss_cls": 0.25122, "acc": 94.34473, "loss_bbox": 0.19376, "loss": 0.50444, "time": 0.29415}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.01, "memory": 2471, "data_time": 0.10506, "loss_rpn_cls": 0.03674, "loss_rpn_bbox": 0.01909, "loss_cls": 0.23761, "acc": 95.01709, "loss_bbox": 0.17034, "loss": 0.46378, "time": 0.29661}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.01, "memory": 2471, "data_time": 0.09431, "loss_rpn_cls": 0.04196, "loss_rpn_bbox": 0.02299, "loss_cls": 0.25038, "acc": 94.38477, "loss_bbox": 0.19318, "loss": 0.50851, "time": 0.29381}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.01, "memory": 2471, "data_time": 0.09053, "loss_rpn_cls": 0.03552, "loss_rpn_bbox": 0.01905, "loss_cls": 0.24337, "acc": 94.5332, "loss_bbox": 0.18336, "loss": 0.4813, "time": 0.29326}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.01, "memory": 2471, "data_time": 0.09857, "loss_rpn_cls": 0.04193, "loss_rpn_bbox": 0.02168, "loss_cls": 0.26028, "acc": 94.08447, "loss_bbox": 0.19719, "loss": 0.52109, "time": 0.29437}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.01, "memory": 2471, "data_time": 0.09423, "loss_rpn_cls": 0.03125, "loss_rpn_bbox": 0.01911, "loss_cls": 0.24759, "acc": 94.28662, "loss_bbox": 0.19358, "loss": 0.49153, "time": 0.29714}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.01, "memory": 2471, "data_time": 0.0999, "loss_rpn_cls": 0.03492, "loss_rpn_bbox": 0.01755, "loss_cls": 0.23515, "acc": 94.70605, "loss_bbox": 0.17705, "loss": 0.46466, "time": 0.29616}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.01, "memory": 2471, "data_time": 0.09043, "loss_rpn_cls": 0.0332, "loss_rpn_bbox": 0.02006, "loss_cls": 0.25307, "acc": 94.26318, "loss_bbox": 0.19314, "loss": 0.49948, "time": 0.293}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.01, "memory": 2471, "data_time": 0.09857, "loss_rpn_cls": 0.0363, "loss_rpn_bbox": 0.02204, "loss_cls": 0.25894, "acc": 94.2666, "loss_bbox": 0.19541, "loss": 0.51269, "time": 0.29536}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.01, "memory": 2471, "data_time": 0.10542, "loss_rpn_cls": 0.03395, "loss_rpn_bbox": 0.01883, "loss_cls": 0.23215, "acc": 94.52246, "loss_bbox": 0.18438, "loss": 0.4693, "time": 0.29584}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.01, "memory": 2471, "data_time": 0.09825, "loss_rpn_cls": 0.03464, "loss_rpn_bbox": 0.02162, "loss_cls": 0.25412, "acc": 93.93262, "loss_bbox": 0.20809, "loss": 0.51847, "time": 0.29497}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.01, "memory": 2471, "data_time": 0.09566, "loss_rpn_cls": 0.02825, "loss_rpn_bbox": 0.01735, "loss_cls": 0.22421, "acc": 94.7041, "loss_bbox": 0.17683, "loss": 0.44664, "time": 0.29585}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.01, "memory": 2471, "data_time": 0.10154, "loss_rpn_cls": 0.03375, "loss_rpn_bbox": 0.02048, "loss_cls": 0.23933, "acc": 94.37012, "loss_bbox": 0.18879, "loss": 0.48234, "time": 0.2946}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.01, "memory": 2471, "data_time": 0.09702, "loss_rpn_cls": 0.03536, "loss_rpn_bbox": 0.02122, "loss_cls": 0.23171, "acc": 94.30518, "loss_bbox": 0.19269, "loss": 0.48098, "time": 0.29518}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.01, "memory": 2471, "data_time": 0.09781, "loss_rpn_cls": 0.03352, "loss_rpn_bbox": 0.01915, "loss_cls": 0.22374, "acc": 94.66797, "loss_bbox": 0.17884, "loss": 0.45525, "time": 0.29601}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.01, "memory": 2471, "data_time": 0.0985, "loss_rpn_cls": 0.02853, "loss_rpn_bbox": 0.01828, "loss_cls": 0.21539, "acc": 94.74512, "loss_bbox": 0.17618, "loss": 0.43838, "time": 0.29519}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.01, "memory": 2471, "data_time": 0.10871, "loss_rpn_cls": 0.0351, "loss_rpn_bbox": 0.01991, "loss_cls": 0.24808, "acc": 94.11621, "loss_bbox": 0.19724, "loss": 0.50033, "time": 0.29505}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.01, "memory": 2471, "data_time": 0.09946, "loss_rpn_cls": 0.02803, "loss_rpn_bbox": 0.01936, "loss_cls": 0.22229, "acc": 94.38867, "loss_bbox": 0.18443, "loss": 0.45411, "time": 0.29422}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.01, "memory": 2471, "data_time": 0.09759, "loss_rpn_cls": 0.02724, "loss_rpn_bbox": 0.0185, "loss_cls": 0.21792, "acc": 94.67285, "loss_bbox": 0.17432, "loss": 0.43798, "time": 0.29448}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.01, "memory": 2471, "data_time": 0.09816, "loss_rpn_cls": 0.02878, "loss_rpn_bbox": 0.01892, "loss_cls": 0.21732, "acc": 94.74414, "loss_bbox": 0.1744, "loss": 0.43942, "time": 0.29512}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.01, "memory": 2471, "data_time": 0.09875, "loss_rpn_cls": 0.03292, "loss_rpn_bbox": 0.01952, "loss_cls": 0.24225, "acc": 94.21387, "loss_bbox": 0.19272, "loss": 0.48742, "time": 0.29659}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.01, "memory": 2471, "data_time": 0.09457, "loss_rpn_cls": 0.03013, "loss_rpn_bbox": 0.0199, "loss_cls": 0.23085, "acc": 94.27686, "loss_bbox": 0.18778, "loss": 0.46867, "time": 0.29515}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.01, "memory": 2471, "data_time": 0.0947, "loss_rpn_cls": 0.03235, "loss_rpn_bbox": 0.01871, "loss_cls": 0.21513, "acc": 94.8042, "loss_bbox": 0.17343, "loss": 0.43963, "time": 0.29643}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.01, "memory": 2471, "data_time": 0.09932, "loss_rpn_cls": 0.0304, "loss_rpn_bbox": 0.01897, "loss_cls": 0.22326, "acc": 94.43994, "loss_bbox": 0.17988, "loss": 0.45251, "time": 0.2986}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.01, "memory": 2471, "data_time": 0.10162, "loss_rpn_cls": 0.02994, "loss_rpn_bbox": 0.01842, "loss_cls": 0.21838, "acc": 94.39062, "loss_bbox": 0.18752, "loss": 0.45425, "time": 0.29484}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.01, "memory": 2471, "data_time": 0.0955, "loss_rpn_cls": 0.03055, "loss_rpn_bbox": 0.02169, "loss_cls": 0.23719, "acc": 94.01709, "loss_bbox": 0.20035, "loss": 0.48978, "time": 0.29635}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.01, "memory": 2471, "data_time": 0.09641, "loss_rpn_cls": 0.03223, "loss_rpn_bbox": 0.02067, "loss_cls": 0.24686, "acc": 94.06445, "loss_bbox": 0.19495, "loss": 0.4947, "time": 0.29541}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.01, "memory": 2471, "data_time": 0.09592, "loss_rpn_cls": 0.02862, "loss_rpn_bbox": 0.01911, "loss_cls": 0.21148, "acc": 94.54736, "loss_bbox": 0.17744, "loss": 0.43665, "time": 0.29563}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.01, "memory": 2471, "data_time": 0.10101, "loss_rpn_cls": 0.02905, "loss_rpn_bbox": 0.01745, "loss_cls": 0.2022, "acc": 94.79736, "loss_bbox": 0.16975, "loss": 0.41846, "time": 0.29547}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.01, "memory": 2471, "data_time": 0.0994, "loss_rpn_cls": 0.02519, "loss_rpn_bbox": 0.01747, "loss_cls": 0.2232, "acc": 94.33252, "loss_bbox": 0.1836, "loss": 0.44947, "time": 0.29541}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.01, "memory": 2471, "data_time": 0.09947, "loss_rpn_cls": 0.02936, "loss_rpn_bbox": 0.02136, "loss_cls": 0.23826, "acc": 93.93604, "loss_bbox": 0.2014, "loss": 0.49038, "time": 0.29638}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.01, "memory": 2471, "data_time": 0.09752, "loss_rpn_cls": 0.02476, "loss_rpn_bbox": 0.01728, "loss_cls": 0.20781, "acc": 94.67773, "loss_bbox": 0.17685, "loss": 0.4267, "time": 0.29437}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.01, "memory": 2471, "data_time": 0.09663, "loss_rpn_cls": 0.02951, "loss_rpn_bbox": 0.01934, "loss_cls": 0.24485, "acc": 93.91699, "loss_bbox": 0.19991, "loss": 0.49361, "time": 0.29666}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.01, "memory": 2471, "data_time": 0.10027, "loss_rpn_cls": 0.03065, "loss_rpn_bbox": 0.01884, "loss_cls": 0.22048, "acc": 94.33301, "loss_bbox": 0.18761, "loss": 0.45759, "time": 0.29434}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.01, "memory": 2471, "data_time": 0.0974, "loss_rpn_cls": 0.03008, "loss_rpn_bbox": 0.02143, "loss_cls": 0.24136, "acc": 93.91895, "loss_bbox": 0.19924, "loss": 0.49212, "time": 0.29535}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.01, "memory": 2471, "data_time": 0.09546, "loss_rpn_cls": 0.03076, "loss_rpn_bbox": 0.01647, "loss_cls": 0.20165, "acc": 94.80908, "loss_bbox": 0.17105, "loss": 0.41993, "time": 0.29522}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.01, "memory": 2471, "data_time": 0.09521, "loss_rpn_cls": 0.03299, "loss_rpn_bbox": 0.021, "loss_cls": 0.2349, "acc": 94.08105, "loss_bbox": 0.19653, "loss": 0.48541, "time": 0.29496}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.01, "memory": 2471, "data_time": 0.10005, "loss_rpn_cls": 0.02565, "loss_rpn_bbox": 0.01786, "loss_cls": 0.22023, "acc": 94.27393, "loss_bbox": 0.18533, "loss": 0.44906, "time": 0.29467}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.01, "memory": 2471, "data_time": 0.09562, "loss_rpn_cls": 0.0274, "loss_rpn_bbox": 0.01876, "loss_cls": 0.21226, "acc": 94.39648, "loss_bbox": 0.18581, "loss": 0.44423, "time": 0.29583}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.01, "memory": 2471, "data_time": 0.09668, "loss_rpn_cls": 0.02665, "loss_rpn_bbox": 0.01922, "loss_cls": 0.21279, "acc": 94.41846, "loss_bbox": 0.18628, "loss": 0.44494, "time": 0.29398}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.01, "memory": 2471, "data_time": 0.09548, "loss_rpn_cls": 0.03404, "loss_rpn_bbox": 0.02171, "loss_cls": 0.2151, "acc": 94.45703, "loss_bbox": 0.17769, "loss": 0.44854, "time": 0.29572}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.01, "memory": 2471, "data_time": 0.09896, "loss_rpn_cls": 0.02653, "loss_rpn_bbox": 0.01893, "loss_cls": 0.20987, "acc": 94.33643, "loss_bbox": 0.18624, "loss": 0.44157, "time": 0.29502}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.01, "memory": 2471, "data_time": 0.10502, "loss_rpn_cls": 0.02586, "loss_rpn_bbox": 0.0185, "loss_cls": 0.20993, "acc": 94.5791, "loss_bbox": 0.17898, "loss": 0.43328, "time": 0.2947}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.01, "memory": 2471, "data_time": 0.09666, "loss_rpn_cls": 0.02573, "loss_rpn_bbox": 0.01914, "loss_cls": 0.22675, "acc": 94.04932, "loss_bbox": 0.19663, "loss": 0.46826, "time": 0.2943}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.01, "memory": 2471, "data_time": 0.09722, "loss_rpn_cls": 0.02837, "loss_rpn_bbox": 0.01852, "loss_cls": 0.21367, "acc": 94.30371, "loss_bbox": 0.18926, "loss": 0.44982, "time": 0.29664}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.01, "memory": 2471, "data_time": 0.09732, "loss_rpn_cls": 0.0289, "loss_rpn_bbox": 0.01883, "loss_cls": 0.21841, "acc": 94.30762, "loss_bbox": 0.18552, "loss": 0.45167, "time": 0.29603}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.01, "memory": 2471, "data_time": 0.0961, "loss_rpn_cls": 0.02778, "loss_rpn_bbox": 0.01732, "loss_cls": 0.21124, "acc": 94.21094, "loss_bbox": 0.19019, "loss": 0.44652, "time": 0.29558}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.01, "memory": 2471, "data_time": 0.09605, "loss_rpn_cls": 0.0224, "loss_rpn_bbox": 0.01556, "loss_cls": 0.19769, "acc": 94.65381, "loss_bbox": 0.16961, "loss": 0.40526, "time": 0.29645}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.01, "memory": 2471, "data_time": 0.09367, "loss_rpn_cls": 0.02762, "loss_rpn_bbox": 0.02102, "loss_cls": 0.21099, "acc": 94.0166, "loss_bbox": 0.1983, "loss": 0.45793, "time": 0.29724}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.01, "memory": 2471, "data_time": 0.08925, "loss_rpn_cls": 0.02494, "loss_rpn_bbox": 0.01829, "loss_cls": 0.19912, "acc": 94.58447, "loss_bbox": 0.17749, "loss": 0.41984, "time": 0.29711}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.01, "memory": 2471, "data_time": 0.10054, "loss_rpn_cls": 0.02653, "loss_rpn_bbox": 0.01794, "loss_cls": 0.19297, "acc": 94.96924, "loss_bbox": 0.16537, "loss": 0.40281, "time": 0.29629}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.01, "memory": 2471, "data_time": 0.09116, "loss_rpn_cls": 0.02467, "loss_rpn_bbox": 0.01755, "loss_cls": 0.20015, "acc": 94.5459, "loss_bbox": 0.18095, "loss": 0.42332, "time": 0.29319}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.01, "memory": 2471, "data_time": 0.09824, "loss_rpn_cls": 0.02492, "loss_rpn_bbox": 0.01725, "loss_cls": 0.20699, "acc": 94.41016, "loss_bbox": 0.18222, "loss": 0.43139, "time": 0.29527}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.01, "memory": 2471, "data_time": 0.10152, "loss_rpn_cls": 0.02566, "loss_rpn_bbox": 0.0178, "loss_cls": 0.19457, "acc": 94.64014, "loss_bbox": 0.17818, "loss": 0.41621, "time": 0.29297}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.01, "memory": 2471, "data_time": 0.09371, "loss_rpn_cls": 0.02663, "loss_rpn_bbox": 0.01781, "loss_cls": 0.21593, "acc": 94.22656, "loss_bbox": 0.1875, "loss": 0.44787, "time": 0.29392}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.01, "memory": 2471, "data_time": 0.09394, "loss_rpn_cls": 0.02793, "loss_rpn_bbox": 0.01865, "loss_cls": 0.20758, "acc": 94.28955, "loss_bbox": 0.18795, "loss": 0.4421, "time": 0.29568}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.01, "memory": 2471, "data_time": 0.09286, "loss_rpn_cls": 0.02618, "loss_rpn_bbox": 0.02067, "loss_cls": 0.20519, "acc": 94.46436, "loss_bbox": 0.18175, "loss": 0.43379, "time": 0.29362}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.01, "memory": 2471, "data_time": 0.10168, "loss_rpn_cls": 0.02554, "loss_rpn_bbox": 0.01743, "loss_cls": 0.20829, "acc": 94.54199, "loss_bbox": 0.18119, "loss": 0.43245, "time": 0.29509}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.01, "memory": 2471, "data_time": 0.10268, "loss_rpn_cls": 0.02595, "loss_rpn_bbox": 0.0191, "loss_cls": 0.2027, "acc": 94.35352, "loss_bbox": 0.18658, "loss": 0.43433, "time": 0.29415}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.01, "memory": 2471, "data_time": 0.09097, "loss_rpn_cls": 0.02198, "loss_rpn_bbox": 0.01693, "loss_cls": 0.19859, "acc": 94.59082, "loss_bbox": 0.17664, "loss": 0.41414, "time": 0.29386}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.01, "memory": 2471, "data_time": 0.09702, "loss_rpn_cls": 0.02296, "loss_rpn_bbox": 0.01609, "loss_cls": 0.19706, "acc": 94.56494, "loss_bbox": 0.17625, "loss": 0.41236, "time": 0.29369}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.01, "memory": 2471, "data_time": 0.08912, "loss_rpn_cls": 0.02138, "loss_rpn_bbox": 0.01733, "loss_cls": 0.20269, "acc": 94.35498, "loss_bbox": 0.1881, "loss": 0.42951, "time": 0.2963}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.01, "memory": 2471, "data_time": 0.09591, "loss_rpn_cls": 0.02445, "loss_rpn_bbox": 0.01623, "loss_cls": 0.18397, "acc": 94.84326, "loss_bbox": 0.169, "loss": 0.39365, "time": 0.29382}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.01, "memory": 2471, "data_time": 0.09502, "loss_rpn_cls": 0.02637, "loss_rpn_bbox": 0.01855, "loss_cls": 0.19214, "acc": 94.74219, "loss_bbox": 0.17093, "loss": 0.408, "time": 0.29523}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.01, "memory": 2471, "data_time": 0.09271, "loss_rpn_cls": 0.02594, "loss_rpn_bbox": 0.01703, "loss_cls": 0.19327, "acc": 94.65186, "loss_bbox": 0.17465, "loss": 0.41089, "time": 0.29516}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.01, "memory": 2471, "data_time": 0.09441, "loss_rpn_cls": 0.02716, "loss_rpn_bbox": 0.01769, "loss_cls": 0.21496, "acc": 93.97656, "loss_bbox": 0.1934, "loss": 0.45321, "time": 0.29552}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.01, "memory": 2471, "data_time": 0.0958, "loss_rpn_cls": 0.02561, "loss_rpn_bbox": 0.01859, "loss_cls": 0.21123, "acc": 94.0918, "loss_bbox": 0.19476, "loss": 0.45019, "time": 0.2981}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.01, "memory": 2471, "data_time": 0.09618, "loss_rpn_cls": 0.02706, "loss_rpn_bbox": 0.01775, "loss_cls": 0.2087, "acc": 94.4751, "loss_bbox": 0.17863, "loss": 0.43213, "time": 0.29463}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.01, "memory": 2471, "data_time": 0.10062, "loss_rpn_cls": 0.02633, "loss_rpn_bbox": 0.01828, "loss_cls": 0.19399, "acc": 94.5332, "loss_bbox": 0.17737, "loss": 0.41598, "time": 0.29402}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.01, "memory": 2471, "data_time": 0.08996, "loss_rpn_cls": 0.02123, "loss_rpn_bbox": 0.0189, "loss_cls": 0.20809, "acc": 94.11328, "loss_bbox": 0.19574, "loss": 0.44396, "time": 0.29638}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.01, "memory": 2471, "data_time": 0.09566, "loss_rpn_cls": 0.02318, "loss_rpn_bbox": 0.01736, "loss_cls": 0.18569, "acc": 94.66748, "loss_bbox": 0.17693, "loss": 0.40316, "time": 0.29627}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.01, "memory": 2471, "data_time": 0.09099, "loss_rpn_cls": 0.0224, "loss_rpn_bbox": 0.01639, "loss_cls": 0.19073, "acc": 94.63037, "loss_bbox": 0.17974, "loss": 0.40926, "time": 0.29563}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.01, "memory": 2471, "data_time": 0.09654, "loss_rpn_cls": 0.02242, "loss_rpn_bbox": 0.01826, "loss_cls": 0.20136, "acc": 94.32178, "loss_bbox": 0.18279, "loss": 0.42482, "time": 0.29597}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.01, "memory": 2471, "data_time": 0.09763, "loss_rpn_cls": 0.0225, "loss_rpn_bbox": 0.01808, "loss_cls": 0.18597, "acc": 94.73584, "loss_bbox": 0.17195, "loss": 0.39851, "time": 0.29552}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.01, "memory": 2471, "data_time": 0.09648, "loss_rpn_cls": 0.02237, "loss_rpn_bbox": 0.01557, "loss_cls": 0.17657, "acc": 95.00732, "loss_bbox": 0.16718, "loss": 0.38169, "time": 0.29436}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.01, "memory": 2471, "data_time": 0.09865, "loss_rpn_cls": 0.02464, "loss_rpn_bbox": 0.01626, "loss_cls": 0.19228, "acc": 94.62695, "loss_bbox": 0.17965, "loss": 0.41283, "time": 0.29497}
{"mode": "train", "epoch": 1, "iter": 5650, "lr": 0.01, "memory": 2471, "data_time": 0.09634, "loss_rpn_cls": 0.02243, "loss_rpn_bbox": 0.01838, "loss_cls": 0.19693, "acc": 94.27734, "loss_bbox": 0.18732, "loss": 0.42506, "time": 0.29392}
{"mode": "train", "epoch": 1, "iter": 5700, "lr": 0.01, "memory": 2471, "data_time": 0.09878, "loss_rpn_cls": 0.02568, "loss_rpn_bbox": 0.01642, "loss_cls": 0.17946, "acc": 94.92383, "loss_bbox": 0.16742, "loss": 0.38897, "time": 0.29491}
{"mode": "train", "epoch": 1, "iter": 5750, "lr": 0.01, "memory": 2471, "data_time": 0.09352, "loss_rpn_cls": 0.02119, "loss_rpn_bbox": 0.01715, "loss_cls": 0.19159, "acc": 94.66211, "loss_bbox": 0.17748, "loss": 0.40741, "time": 0.29484}
{"mode": "train", "epoch": 1, "iter": 5800, "lr": 0.01, "memory": 2471, "data_time": 0.10399, "loss_rpn_cls": 0.02287, "loss_rpn_bbox": 0.0171, "loss_cls": 0.1973, "acc": 94.31055, "loss_bbox": 0.19392, "loss": 0.43119, "time": 0.29248}
{"mode": "train", "epoch": 1, "iter": 5850, "lr": 0.01, "memory": 2471, "data_time": 0.09256, "loss_rpn_cls": 0.024, "loss_rpn_bbox": 0.01696, "loss_cls": 0.17914, "acc": 95.02246, "loss_bbox": 0.16709, "loss": 0.3872, "time": 0.2931}
{"mode": "train", "epoch": 1, "iter": 5900, "lr": 0.01, "memory": 2471, "data_time": 0.10217, "loss_rpn_cls": 0.02576, "loss_rpn_bbox": 0.01787, "loss_cls": 0.19645, "acc": 94.30176, "loss_bbox": 0.18639, "loss": 0.42647, "time": 0.29581}
{"mode": "train", "epoch": 1, "iter": 5950, "lr": 0.01, "memory": 2471, "data_time": 0.09777, "loss_rpn_cls": 0.02408, "loss_rpn_bbox": 0.01669, "loss_cls": 0.17813, "acc": 94.98438, "loss_bbox": 0.16557, "loss": 0.38447, "time": 0.29492}
{"mode": "train", "epoch": 1, "iter": 6000, "lr": 0.01, "memory": 2471, "data_time": 0.09289, "loss_rpn_cls": 0.02363, "loss_rpn_bbox": 0.01718, "loss_cls": 0.18278, "acc": 94.56885, "loss_bbox": 0.17956, "loss": 0.40315, "time": 0.29541}
{"mode": "train", "epoch": 1, "iter": 6050, "lr": 0.01, "memory": 2471, "data_time": 0.09919, "loss_rpn_cls": 0.02449, "loss_rpn_bbox": 0.01835, "loss_cls": 0.19519, "acc": 94.32812, "loss_bbox": 0.18476, "loss": 0.4228, "time": 0.2951}
{"mode": "train", "epoch": 1, "iter": 6100, "lr": 0.01, "memory": 2471, "data_time": 0.09037, "loss_rpn_cls": 0.02893, "loss_rpn_bbox": 0.01938, "loss_cls": 0.18787, "acc": 94.52148, "loss_bbox": 0.18005, "loss": 0.41623, "time": 0.29396}
{"mode": "train", "epoch": 1, "iter": 6150, "lr": 0.01, "memory": 2471, "data_time": 0.09625, "loss_rpn_cls": 0.02084, "loss_rpn_bbox": 0.01571, "loss_cls": 0.17957, "acc": 94.74512, "loss_bbox": 0.17285, "loss": 0.38897, "time": 0.29828}
{"mode": "train", "epoch": 1, "iter": 6200, "lr": 0.01, "memory": 2471, "data_time": 0.10168, "loss_rpn_cls": 0.02711, "loss_rpn_bbox": 0.01918, "loss_cls": 0.20228, "acc": 94.16748, "loss_bbox": 0.18792, "loss": 0.43649, "time": 0.29565}
